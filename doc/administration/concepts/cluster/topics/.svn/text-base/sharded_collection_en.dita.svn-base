<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="administration_concepts_sharded_collection">
  <title>Sharded Collection</title>
  <body>
    <section><title>Concept</title>
      <p>Sharded collection is a collection that has defined a sharding key. Sharded collection can
        split data in collection to more than one data sharding group according to the fields
        specified by sharding key.</p>
      <p>When collection is generated, users can specify sharding key. Sharded collection is
        generated in a random data sharding group. User can split a collection to several data
        sharding groups by themselves.</p>
    </section>
    <section><title>Sharding Interval</title>
      <p>Every interval in sharded collection is named sharding interval.</p>
      <p>When a sharded collection is generated, the sharding group of it contains all the ranges,
        which include range from MinKey to MaxKey for all fields. </p>
      <p>Every range is left-closed and right-open. That's to say, data in it is greater than or
        equal to the lower boundary and lesser than the upper boundary. For example:</p>
      <codeblock>{ LowBound: { "": 10 }, UpBound: { "": 20 } }</codeblock>
      <p>In this example, the lower boundary is 10 and the high boundary is 20. So all the data in
        this range for all the sharding field is greater than or equal to 10 and lesser than 20.</p>
      <note>The definition of all ranges within a collection does not contain field name. The fields
        in it are consistent with those defined in sharding key in terms of type and number. </note>
      <p>When a sharding key contains several fields, the matching principle is to match first field
        ahead. If it is located in boundary, it will match the next field. For example,</p>
      <codeblock>{ LowBound: { "": 10, "": 5 }, UpBound: { "": 20, "": 1 } }</codeblock>
      <p>In this shardin range, if the sharding key users input is located between 10 and 20, it is
        judged to belong to this range.If it is lesser than 10 or greater than 20, it doesnt belong
        to this range. If it is 10 or 20, it will compare the second field with the principle of
        left-closed-right-open. </p>
    </section>
    <section><title>Rule</title>
      <p>Please refer to the definition of <xref href="SYSCOLLECTIONS_en.dita">SYSCOLLECTIONS</xref>
        for more about the the definition principle of sharded collection. </p>
    </section>
    <section><title>Sample</title>
      <p>A typical sharded range which exists in two sharding group is as follow:</p>
      <codeblock>  [ 
        { "GroupID" : 1000, 
          "LowBound" : { "" : MinKey, "" : MaxKey }, 
          "UpBound" : { "" : 10, "" : 5 } 
        }, 
        { "GroupID" : 1001, 
          "LowBound" : { "" : 10, "" : 5 }, 
          "UpBound" : { "" : MaxKey, "" : MinKey } 
        } 
  ]</codeblock>
      <p>The replset ID of the first range in this sample is 1000. The sample contains a sharding
        key with two fields:</p>
      <ul>
        <li>lower boundary : { "" : MinKey, "" : MaxKey }</li>
        <li>upper boundary：{ "" : 10, "" : 5 }</li>
      </ul>
      <p>The replset ID of the second range in this sample is 1001. The sample contains a sharding
        key with two fields:</p>
      <ul>
        <li>lower boundary : { "" : 10, "" : 5 }</li>
        <li>upper boundary：{ "" : MaxKey, "" : MinKey }</li>
      </ul>
    </section>
  </body>
</topic>
