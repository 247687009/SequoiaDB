<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_wnq_qkz_pl">
  <title>SQL to Aggregate 映射表</title>
  <body>
    <p>下表主要是描述 SQL 关键字与 SequoiaDB 聚集操作符的对照表。</p>
    <simpletable>
      <sthead>
        <stentry>SQL 关键字</stentry>
        <stentry>SequoiaDB 聚集操作符</stentry>
      </sthead>
      <strow>
        <stentry>where</stentry>
        <stentry>$match </stentry>
      </strow>
      <strow>
        <stentry>group by</stentry>
        <stentry>$group</stentry>
      </strow>
      <strow>
        <stentry>having</stentry>
        <stentry>$match</stentry>
      </strow>
      <strow>
        <stentry>select</stentry>
        <stentry>$project</stentry>
      </strow>
      <strow>
        <stentry>order by</stentry>
        <stentry>$sort</stentry>
      </strow>
      <strow>
        <stentry>top</stentry>
        <stentry>$limit</stentry>
      </strow>
      <strow>
        <stentry>offset</stentry>
        <stentry>$skip</stentry>
      </strow>
      <strow/>
    </simpletable>
    <p>下表主要描述标准 SQL 语句与 SequoiaDB 聚集语句之间的对照。</p>
    <simpletable>
      <sthead>
        <stentry>SQL 语句</stentry>
        <stentry>SequoiaDB 聚集语句</stentry>
        <stentry>描述</stentry>
      </sthead>
      <strow>
        <stentry>select product_id as p_id, price  from table </stentry>
        <stentry>db.cs.table.aggregate({$project:{p_id:"$product_id",price:1,date:0}})</stentry>
        <stentry>返回所有记录的 product_id 和 price 字段，其中 product_id 重命名为 p_id，对记录中的 date 字段不返回。</stentry>
      </strow>
      <strow>
        <stentry>select sum(price) as total from table</stentry>
        <stentry>db.cs.table.aggregate({$group:{_id:null,total:{$sum:"$price"}}})</stentry>
        <stentry>对 table 中的字段 price 值求和，并重命名为 total。</stentry>
      </strow>
      <strow>
        <stentry>select product_id, sum(price) as total from table group by product_id</stentry>
        <stentry>db.cs.table.aggregate({$group:{_id:"$product_id",product_id:{$first:"$product_id"},total:{$sum:"$price"}}})</stentry>
        <stentry>对表 table 中的记录按 product_id 字段分组；<fig></fig>求每个分组中字段 price 值的累加和，并重命名为 total。</stentry>
      </strow>
      <strow>
        <stentry>select product_id, sum(price) as total from table group by product_id order by total</stentry>
        <stentry>db.cs.table.aggregate({$group:{_id:"$product_id",product_id:{$first:"$product_id"},total:{$sum:"$price"}}},{$sort:{total:1}})</stentry>
        <stentry>对表 table 中的记录按 product_id 字段分组；<fig></fig>求每个分组中字段 price 值的累加和，并重命名为 total；<fig></fig>对结果集按字段名 total 的值升序排序。</stentry>
      </strow>
      <strow>
        <stentry>select product_type_id, product_id, sum(price) as total from table group by product_type_id, product_id</stentry>
        <stentry>db.cs.table.aggregate({$group:{_id:{product_type_id:"$product_type_id",product_id:"$product_id"},product_id:{$first:"$product_id"},total:{$sum:"$price"}}})</stentry>
        <stentry>对表 table 中的记录按首先按 product_type_id 字段分组，再按 product_id 字段分组；<fig></fig>求每个分组中字段 price 值的累加和，并重命名为 total。</stentry>
      </strow>
      <strow>
        <stentry>select product_id, sum(price) as total from table group by product_id having total > 1000</stentry>
        <stentry>db.cs.table.aggregate({$group:{_id:"$product_id",product_id:{$first:"$product_id"},total:{$sum:"$price"}}},{$match:{total:{$gt:1000}}})</stentry>
        <stentry>对表 table 中的记录按 product_id 字段分组；<fig></fig>求每个分组中字段 price 值的累加和，并重命名为 total；<fig></fig>只返回满足条件 total 字段值大于1000的分组。</stentry>
      </strow>
      <strow>
        <stentry>select product_id, sum(price) as total from table where product_type_id = 1001 group by product_id</stentry>
        <stentry>db.cs.table.aggregate({$match:{product_type_id:1001}},{$group:{_id:"$product_id",product_id:{$first:"$product_id"},total:{$sum:"$price"}}})</stentry>
        <stentry>选择符合条件 product_type_id = 1001 的记录；<fig></fig>对选出的记录按 product_id 进行分组；<fig></fig>对每个分组中的 price 字段值就和，并重命名为 total。</stentry>
      </strow>
      <strow>
        <stentry>select product_id, sum(price) as total from table where product_type_id = 1001 group by product_id having total > 1000</stentry>
        <stentry>db.cs.table.aggregate({$match:{product_type_id:1001}},{$group:{_id:"$product_id",product_id:{$first:"$product_id"},total:{$sum:"$price"}}},{$match:{total:{$gt:1000}}})</stentry>
        <stentry>选择符合条件 product_type_id = 1001 的记录；<fig></fig>对选出的记录按 product_id 进行分组；<fig></fig>对每个分组中的 price 字段值就和，并重命名为 total；<fig></fig>只返回满足条件 total 字段值大于1000的分组。</stentry>
      </strow>
      <strow>
        <stentry>select top 10 * from table</stentry>
        <stentry>db.cs.table.aggregate({$group:{_id:null}},{$limit:10})</stentry>
        <stentry>返回结果集中的前10条记录。</stentry>
      </strow>
      <strow>
        <stentry>select * from table offset 50 rows fetch next 10</stentry>
        <stentry>db.cs.table.aggregate({$group:{_id:null}},{$skip:50},{$limit:10})</stentry>
        <stentry>跳过结果集中前50条记录之后，返回接下来的10条记录。</stentry>
      </strow>
      <strow/>
    </simpletable>
  </body>
</topic>