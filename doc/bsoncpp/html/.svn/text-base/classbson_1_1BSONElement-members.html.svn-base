<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SequoiaDB: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SequoiaDB
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacebson.html">bson</a></li><li class="navelem"><a class="el" href="classbson_1_1BSONElement.html">BSONElement</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">bson::BSONElement Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a3ef2b5f9021af681a7e8bb58857a0f7e">__oid</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>_asCode</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a89031d97636d2a67145bc86dde8f91ed">_numberDouble</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#aff07a62c08447b16d7bf29f026665288">_numberInt</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a1fd4e4d96a4cdb0b49faf1ec9a5f08c6">_numberLong</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>_opTime</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>Array</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a1e1eb4de174ace41c68621315fe53558">binData</a>(int &amp;len) const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a3894a9c6608341b52fbed8f054c22b9f">binDataClean</a>(int &amp;len) const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>binDataType</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>Bool</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a320b2980fe2f64bd561ca367fa06a73c">boolean</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>booleanSafe</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a595c932c7ccafe3d472b00f3b8fa64bc">BSONElement</a>()</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>BSONElement</b>(const char *d, int maxLen) (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">explicit</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>BSONElement</b>(const char *d) (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">explicit</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>BSONObj</b> (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>BSONObjIterator</b> (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a87d9ae278f4ae473b51e29c6cad41d73">canonicalType</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#af43107d71284bf7ed2bf4a4bf6750d37">codeWScopeCode</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>codeWScopeObject</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a4743ba6244f1667a87ed505b52af8abe">codeWScopeScopeData</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a393d2e4e9eaca7d43b3cf60880dfcea6">date</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Date</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>dbrefNS</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>dbrefOID</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>Double</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#af5130710cbfff5a982e7053edc5dc493">embeddedObject</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>embeddedObjectUserCheck</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#ac4f6fda180d892825029bae80fe16c6e">eoo</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a5973f457911bcada25af7ecaf3242ed6">fieldName</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a877cf8aec64a574b11cac71cbe0559b7">getGtLtOp</a>(int def=0) const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>Int</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#ab9f8d1ce3c4a7fdd3807dff366e20be2">isABSONObj</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>isBoolean</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#ad89361717845c5be028a853f6f0d215c">isNull</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#ac6e9ce4361c10a66ca1344688c47cff0">isNumber</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a4e9e2e224edbf89e213336b660070af1">isSimpleType</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>jsonString</b>(JsonStringFormat format, bool includeFieldNames=true, int pretty=0) const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Long</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#af4679405191293bbfbbd143a2aeda023">mayEncapsulate</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Null</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a6ea650fa30bc396ea7e77df2a68f1833">number</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Number</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#afbb1067c887e2deeb80c0406d2f6e7cd">numberDouble</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#af0aad6fa97e7d5790080ed4f93bcd5b0">numberInt</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a3c4ea50b43d1811692fca4dc3d45e728">numberLong</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#afa519ab00f7c3908f615e7616302379a">Obj</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>objsize</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>OID</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>OK</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a553bd4b4f4efe13ac79d3d6607e07c86">ok</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>operator string</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#acd93060e3a33f1b5149700b2fa8933cf">operator&lt;</a>(const BSONElement &amp;other) const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#affa9cd37a07cd28797468f06d1393af0">operator==</a>(const BSONElement &amp;r) const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#aa5a5dc4f760f4e0fecb69d3240065372">operator[]</a>(const string &amp;field) const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>rawdata</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#afad31abca03f128787b0f85a5586a1fe">regex</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a56d2d25994080d00e04fa8d1ca4354bf">regexFlags</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#aa0c202840a29db5dc5c17ea92dd9237f">size</a>(int maxLen) const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>size</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a536ba20ba46eed81c6ef910f85e25dad">str</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#acc5bcf6a4e97ce0a6b7b6dd2b8d518eb">String</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>timestampInc</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>timestampTime</b>() const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>toString</b>(bool includeFieldName=true, bool full=false) const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>toString</b>(StringBuilder &amp;s, bool includeFieldName=true, bool full=false) const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a46a6b4efc15e4a405eb9e07ad396b6af">trueValue</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a6d742c8562fbafec28916aba6d870f79">type</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a941e27c0f0aaa733adb4c225b3b0bb89">Val</a>(Date_t &amp;v) const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>Val</b>(long long &amp;v) const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Val</b>(bool &amp;v) const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>Val</b>(BSONObj &amp;v) const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Val</b>(bson::OID &amp;v) const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>Val</b>(int &amp;v) const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>Val</b>(double &amp;v) const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>Val</b>(string &amp;v) const  (defined in <a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a>)</td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a47ad44e4905b9556df1abeb73b42f880">validate</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a72d5c6c93c394b54987d99b149a64687">value</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a1eaa65af8a9471bee7470f523350613e">valuesEqual</a>(const BSONElement &amp;r) const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a4d91f92867f4268ec22c704b804e396b">valuesize</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a718a1202f0bd446427bc3159958fd61b">valuestr</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a8207c29f0cbc0959f3f420c3f9a5c270">valuestrsafe</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a9e20f8c8c711d2d2935f3611a70eaecf">valuestrsize</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a8ad7dfdadaf444a5cb92c04c813f5139">woCompare</a>(const BSONElement &amp;e, bool considerFieldName=true) const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#ae5894d8bbe62d1ca227a83729a5dd274">wrap</a>() const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classbson_1_1BSONElement.html#a851f84d74e7651d64267fbb58502ac7b">wrap</a>(const char *newName) const </td><td class="entry"><a class="el" href="classbson_1_1BSONElement.html">bson::BSONElement</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 6 2014 16:01:12 for SequoiaDB by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.2
</small></address>
</body>
</html>
