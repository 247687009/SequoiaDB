<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_ttg_jf3_x4">
  <title>SQL to SequoiaDB shell to Python</title>
  <body>
    <p>SequoiaDB's query uses dict(bson)objects, the following table compares SQL cammands, SequoiaDB shell commands, SequoiaDB Python commands by some examples.</p>
    <simpletable relcolwidth="1.0* 1.01* 1.11*">
      <sthead>
        <stentry>SQL</stentry>
        <stentry>SequoiaDB shell</stentry>
        <stentry>Python Driver</stentry>
      </sthead>
      <strow>
        <stentry>insert into students(a,b) values(1,-1) </stentry>
        <stentry>db.foo.bar.insert({a:1,b:-1}) </stentry>
        <stentry>cl = collection()<p>obj = { "a":1, "b":-1 }</p><p>cl.insert( obj )</p></stentry>
      </strow>
      <strow>
        <stentry>select a,b from students </stentry>
        <stentry>db.foo.bar.find(null,{a:"",b:""})</stentry>
        <stentry>cl = collection()<p>obj = {}</p>
          <p>selected = { "a":"","b":"" }</p>
          <p>cr = cl.query(obj, selected )</p></stentry>
      </strow>
      <strow>
        <stentry>select * from students</stentry>
        <stentry>db.foo.bar.find()</stentry>
        <stentry>cl = collection()<p>cr = cl.query () ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select * from students where age=20</stentry>
        <stentry>db.foo.bar.find({age:20})</stentry>
        <stentry>cl = collection()<p>condition ={"age":20}</p><p>cr = cl.query ( condition )
          </p></stentry>
      </strow>
      <strow>
        <stentry>select * from students where age=20 order by name</stentry>
        <stentry>db.foo.bar.find({age:20}).sort({name:1})</stentry>
        <stentry>cl = collection()<p>condition ={"age":20}</p><p>orderBy = {"name":1}</p><p>cr = cl
            .query (condition , None, orderBy , None ) </p></stentry>
      </strow>
      <strow>
        <stentry>select * from students where age>20 and age&lt;30</stentry>
        <stentry>db.foo.bar.find({age:{$gt:20,$lt:30}})</stentry>
        <stentry>cl = collection()<p>condition = {"age":{"$gt":20","$lt":30}}</p><p>cr = cl .query
            (condition ) ;</p></stentry>
      </strow>
      <strow>
        <stentry>create index testIndex on students(name)</stentry>
        <stentry>db.foo.bar.createIndex("testIndex",{name:1},false)</stentry>
        <stentry>cl = collection()<p>obj = { "name":1 }</p><p>cl.create_index ( &amp;obj,
            "testIndex", FALSE, FALSE )</p></stentry>
      </strow>
      <strow>
        <stentry>select * from students limit 20 skip 10</stentry>
        <stentry>db.foo.bar.find().limit(20).skip(10)</stentry>
        <stentry>cl = collection()<p>cr = cl .query (None, None, None, None, 10, 20 )
          ;</p></stentry>
      </strow>
      <strow>
        <stentry>select count(*) from students where age>20</stentry>
        <stentry>db.foo.bar.find({age:{$gt:20}}).count()</stentry>
        <stentry>cl = collection()<p>count = 0L</p><p>condition = { "age":{"$gt":20}}</p><p>count =
            cl.get_count (condition )</p></stentry>
      </strow>
      <strow>
        <stentry>update students set a=a+2 where b=-1</stentry>
        <stentry>db.foo.bar.update({$set:{a:2}},{b:-1})</stentry>
        <stentry>cl = collection()<p>condition = { "b":1 }</p><p>rule = { "$set":{"a":2}
            }</p><p>cl.update ( rule, condition, None ) ;</p></stentry>
      </strow>
      <strow>
        <stentry>delete from students where a=1</stentry>
        <stentry>db.foo.bar.remove({a:1})</stentry>
        <stentry>cl = collection()<p>condition = {"a":1}</p>cl.delete ( condition )</stentry>
      </strow>
    </simpletable>
  </body>
  <related-links>
    <link href="../../../../references/sqlmapping/topics/sqlmapping_en.dita" format="dita" type="topics"></link>
  </related-links>
</topic>