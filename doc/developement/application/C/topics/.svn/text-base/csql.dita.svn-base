<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="application_c_sql">
  <title>SQL to SequoiaDB shell to C</title>
  <body>
    <p>SequoiaDB 的查询用 json（bson）对象表示，下表以例子的形式显示了 SQL 语句，SequoiaDB shell 语句和 SequoiaDB C 驱动程序语法之间的对照。</p>
    <simpletable >
      <sthead>
        <stentry>SQL</stentry>
        <stentry>SequoiaDB shell</stentry>
        <stentry>C Driver</stentry>
      </sthead>
      <strow>
        <stentry>insert into students(a,b) values(1,-1)</stentry>
        <stentry>db.foo.bar.insert({a:1,b:-1})</stentry>
        <stentry>const char *r ="{a:1,b:-1}" ;
          <p>// jsonToBson 将一个 json 字符串转换为 bson 对象</p>
          <p>jsonToBson ( &amp;obj, r ) ;</p>
          <p>// collection 为集合 bar 的句柄</p>
          <p>sdbInsert (collection, &amp;obj ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select a,b from students </stentry>
        <stentry>db.foo.bar.find(null,{a:"",b:""})</stentry>
        <stentry>const char *r ="{a:\"\",b:\"\"}" ;
          <p>// jsonToBson 将一个 json 字符串转换为 bson 对象</p>
          <p>jsonToBson ( &amp; select, r ) ;</p>
          <p>// collection 为集合 bar 的句柄，cursor 为返回查询结果的句柄</p>
          <p>sdbQuery ( collection, NULL, &amp;select, NULL, NULL, 0, -1, cursor ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select * from students</stentry>
        <stentry>db.foo.bar.find()</stentry>
        <stentry>// collection 为集合 bar 的句柄，cursor 为返回查询结果的句柄
          <p>sdbQuery ( collection, NULL, NULL, NULL, NULL, 0, -1, cursor ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select * from students where age=20</stentry>
        <stentry>db.foo.bar.find({age:20})</stentry>
        <stentry>const char *r ="{age:20}"; <p>// jsonToBson 将一个 json 字符串转换为 bson 对象</p>
          <p>jsonToBson ( &amp;condition, r ) ;</p>
          <p>// collection 为集合 bar 的句柄，cursor 为返回查询结果的句柄</p>
          <p>sdbQuery ( collection, &amp; condition, NULL, NULL, NULL, 0, -1, cursor ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select * from students where age=20 order by name</stentry>
        <stentry>db.foo.bar.find({age:20}).sort({name:1})</stentry>
        <stentry>const char *r1 ="{age:20}" ; <p>const char *r2 ="{name:1}" ;</p>
          <p>// jsonToBson 将一个 json 字符串转换为 bson 对象</p>
          <p>jsonToBson ( &amp; condition, r1 ) ;</p>
          <p>jsonToBson ( &amp;orderBy, r2 ) ;</p>
          <p>// collection 为集合 bar 的句柄，cursor 为返回查询结果的句柄</p>
          <p>sdbQuery ( collection, &amp; condition, NULL, &amp; orderBy, NULL, 0, -1, cursor )
            ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select * from students where age>20 and age&lt;30</stentry>
        <stentry>db.foo.bar.find({age:{$gt:20,$lt:30}})</stentry>
        <stentry>const char *r ="{age:{$gt:20,$lt:30}}" ;
          <p>// jsonToBson 将一个 json 字符串转换为 bson 对象</p>
          <p>jsonToBson ( &amp;condition, r ) ;</p>
          <p>// collection 为集合 bar 的句柄，cursor 为返回查询结果的句柄</p>
          <p>sdbQuery ( collection, &amp; condition , NULL, NULL, NULL, 0, -1, cursor ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>create index testIndex on students(name)</stentry>
        <stentry>db.foo.bar.createIndex("testIndex",{name:1},false)</stentry>
        <stentry>const char *r ="{name:1}" ;
          <p>// jsonToBson 将一个 json 字符串转换为 bson 对象</p>
          <p>jsonToBson ( &amp;obj, r ) ;</p>
          <p>// collection 为集合 bar 的句柄</p>
          <p>sdbCreateIndex ( collection, &amp;obj, "testIndex", FALSE, FALSE )</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select * from students limit 20 skip 10</stentry>
        <stentry>db.foo.bar.find().limit(20).skip(10)</stentry>
        <stentry>// collection 为集合 bar 的句柄，cursor 为返回查询结果的句柄 <p>sdbQuery ( collection, NULL, NULL,
            NULL, NULL, 10, 20, cursor ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select count(*) from students where age>20</stentry>
        <stentry>db.foo.bar.find({age:{$gt:20}}).count()</stentry>
        <stentry> const char *r ="{age:{$gt:20}}" ; <p>// jsonToBson 将一个 json 字符串转换为 bson 对象</p>
          <p>jsonToBson ( &amp;condition, r ) ;</p>
          <p>// collection 为集合 bar 的句柄，count 为返回总数</p>
          <p>sdbGetCount ( collection, &amp; condition, &amp;count );</p>
        </stentry>
      </strow>
      <strow>
        <stentry>update students set a=a+2 where b=-1</stentry>
        <stentry>db.foo.bar.update({$set:{a:2}},{b:-1})</stentry>
        <stentry>const char *r1 ="{$set:{a:2}}" ;
          <p>const char *r2 ="{b:-1}" ;</p>
          <p>// jsonToBson 将一个 json 字符串转换为 bson 对象</p>
          <p>jsonToBson ( &amp;rule, r1 ) ;</p>
          <p>jsonToBson ( &amp;condition, r2 ) ;</p>
          <p>// collection 为集合 bar 的句柄</p>
          <p>sdbUpdate (collection, &amp;rule, &amp;condition, NULL ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>delete from students where a=1</stentry>
        <stentry>db.foo.bar.remove({a:1})</stentry>
        <stentry>const char *r ="{a:1}" ;
          <p>// jsonToBson 将一个 json 字符串转换为 bson 对象</p>
          <p>jsonToBson ( &amp;condition, r ) ;</p>
          <p>// collection 为集合 bar 的句柄</p>
          sdbDelete ( collection, &amp; condition, NULL ) ;</stentry>
      </strow>
    </simpletable>
  </body>
  <related-links>
    <link href="../../../../references/sqlmapping/topics/sqlmapping.dita" format="dita" type="topics"></link>
  </related-links>
</topic>
