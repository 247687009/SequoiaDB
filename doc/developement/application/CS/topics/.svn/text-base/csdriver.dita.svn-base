<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="application_cs_driver">
  <title>C# 驱动</title>
  <body>
    <section>
      <title>概述</title>
        <p>SequoiaDB C# 驱动提供了数据库操作和集群操作的接口。数据库操作包括数据库的连接，用户的创建删除，数据的增删改查，索引的创建删除，快照的获取与重置，以及集合与集合空间的创建删除操作等操作。集群操作包括管理分区组和数据节点的各种操作，譬如启动，停止分区组，启动，停止数据节点，获取主从数据节点，集合分区等。</p>        
    </section>
      <section>
          <title>C# 类实例</title>
          <p>C# 驱动的有两种类实例。一种用于<b>数据库操作</b>，另一种用于<b>集群操作</b>。</p>
          <ul>
              <li>数据库操作实例<p>SequoiaDB 数据库中的数据存放分为三个级别：</p><p><b>1）数据库</b></p><p><b>2）集合空间</b></p><p><b>3）集合 </b></p>
                  <p>因此，在数据库操作中，可用3个类来分别表示连接，集合空间，集合实例，另1个类表示游标实例：</p>
          <simpletable>
              <strow>
                  <stentry>SequoiaDB</stentry>
                  <stentry>数据库实例</stentry>
                  <stentry>代表一个单独的数据库连接</stentry>
              </strow>
              <strow>
                  <stentry>CollectionSpace</stentry>
                  <stentry>集合空间实例</stentry>
                  <stentry>代表一个单独的集合空间</stentry>
              </strow>
              <strow>
                  <stentry>DBCollection</stentry>
                  <stentry>集合实例</stentry>
                  <stentry>代表一个单独的集合</stentry>
              </strow>
              <strow>
                  <stentry>DBCursor</stentry>
                  <stentry>游标实例</stentry> 
                  <stentry>代表一个查询产生的结果集</stentry> 
              </strow>              
          </simpletable>
                  <p>C# 驱动需要使用不同的实例进行操作。譬如读取数据的操作需要游标实例，而创建表空间则需要数据库实例。</p>
              </li>
              <li>集群操作实例<p>SequoiaDB 数据库中的集群操作分为两个级别：1）分区组 2）数据节点</p>
                    <note>分区组包含三种类型：协调分区组，编目分区组，数据分区组。</note>
                    <p>分区组实例和数据节点实例可以用以下两种类的实例表示。</p>
                    <simpletable>
                        <strow>
                            <stentry>ReplicaGroup</stentry>
                            <stentry>分区组类</stentry>
                            <stentry>分区组实例代表一个单独的分区组</stentry>
                        </strow>
                        <strow>
                            <stentry>Node</stentry>
                            <stentry>数据节点类</stentry>
                            <stentry>数据节点实例代表一个单独的数据节点</stentry>
                        </strow>
                    </simpletable>
                  <p>无疑与集群相关的操作需要使用分区组及数据节点实例。</p>
                  <p>ReplicaGroup 的实例用于管理分区组。其操作包括启动，停止分区组，获取分区组中节点的状态，名称信息，数目信息。</p>
                  <p>Node 的实例用于管理节点。其操作包括启动，停止指定的节点，获取指定节点实例，获取主从节点实例，获取数据节点地址信息。</p></li>
          </ul>
      </section>      
      <section>
          <title>线程安全性</title>
          <p>对于每一个连接，其产生的集合空间，集合公用一个套接字。因此在多线程系统中，必须确保每个线程不会同时针对同一套接字，在同一时间发送或接收数据。一般来说，不建议使用多个线程共同操作一个连接实例与其产生的其它实例。如果每个线程使用自己的连接实例以及其它产生的实例，则可以保证线程安全。</p>          
      </section>
      <section>
          <title>错误信息</title>
          <p>每一个接口都会抛出 SequoiaDB.BaseException 和 System.Exception 异常，分别对应于数据库引擎返回的异常信息和客户端本地的异常信息，其中 BaseException 的异常信息可以通过该异常类的 ErrorCode，ErrorType 和 Message 属性获得。</p>          
      </section> 
  </body>
</topic>