<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SequoiaDB: sdbclient::sdb Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SequoiaDB
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacesdbclient.html">sdbclient</a></li><li class="navelem"><a class="el" href="classsdbclient_1_1sdb.html">sdb</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classsdbclient_1_1sdb-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sdbclient::sdb Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Database operation interfaces of admin.  
 <a href="classsdbclient_1_1sdb.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="client_8hpp_source.html">client.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a16b2e22380557fac09a3d332fe765935"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a16b2e22380557fac09a3d332fe765935"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a16b2e22380557fac09a3d332fe765935">sdb</a> ()</td></tr>
<tr class="memdesc:a16b2e22380557fac09a3d332fe765935"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor. <br/></td></tr>
<tr class="separator:a16b2e22380557fac09a3d332fe765935"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29075dbfd22146fc8090fb1a1609b5f9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a29075dbfd22146fc8090fb1a1609b5f9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a29075dbfd22146fc8090fb1a1609b5f9">~sdb</a> ()</td></tr>
<tr class="memdesc:a29075dbfd22146fc8090fb1a1609b5f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br/></td></tr>
<tr class="separator:a29075dbfd22146fc8090fb1a1609b5f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41960ef1b7c1d2914c59247309c17b53"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a41960ef1b7c1d2914c59247309c17b53">connect</a> (const CHAR *pHostName, UINT16 port)</td></tr>
<tr class="memdesc:a41960ef1b7c1d2914c59247309c17b53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connect to remote Database Server.  <a href="#a41960ef1b7c1d2914c59247309c17b53"></a><br/></td></tr>
<tr class="separator:a41960ef1b7c1d2914c59247309c17b53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32b0e972d5aa6f3e58fb102ce3d4eded"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a32b0e972d5aa6f3e58fb102ce3d4eded">connect</a> (const CHAR *pHostName, UINT16 port, const CHAR *pUsrName, const CHAR *pPasswd)</td></tr>
<tr class="memdesc:a32b0e972d5aa6f3e58fb102ce3d4eded"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connect to remote Database Server.  <a href="#a32b0e972d5aa6f3e58fb102ce3d4eded"></a><br/></td></tr>
<tr class="separator:a32b0e972d5aa6f3e58fb102ce3d4eded"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1ffa2592e22ed4d0e98c9dbe8f937e6"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#aa1ffa2592e22ed4d0e98c9dbe8f937e6">connect</a> (const CHAR *pHostName, const CHAR *pServiceName)</td></tr>
<tr class="memdesc:aa1ffa2592e22ed4d0e98c9dbe8f937e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connect to remote Database Server.  <a href="#aa1ffa2592e22ed4d0e98c9dbe8f937e6"></a><br/></td></tr>
<tr class="separator:aa1ffa2592e22ed4d0e98c9dbe8f937e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97c1f8b762abebfeec2b550f803490de"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a97c1f8b762abebfeec2b550f803490de">connect</a> (const CHAR *pHostName, const CHAR *pServiceName, const CHAR *pUsrName, const CHAR *pPasswd)</td></tr>
<tr class="memdesc:a97c1f8b762abebfeec2b550f803490de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connect to remote Database Server.  <a href="#a97c1f8b762abebfeec2b550f803490de"></a><br/></td></tr>
<tr class="separator:a97c1f8b762abebfeec2b550f803490de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34313780f36d821b9a6627f0ca743a01"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a34313780f36d821b9a6627f0ca743a01">connect</a> (const CHAR **pConnAddrs, INT32 arrSize, const CHAR *pUsrName, const CHAR *pPasswd)</td></tr>
<tr class="memdesc:a34313780f36d821b9a6627f0ca743a01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connect to database used a random valid address in the array.  <a href="#a34313780f36d821b9a6627f0ca743a01"></a><br/></td></tr>
<tr class="separator:a34313780f36d821b9a6627f0ca743a01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6f6df869718e162c3dea937f3cd39e8"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#ac6f6df869718e162c3dea937f3cd39e8">createUsr</a> (const CHAR *pUsrName, const CHAR *pPasswd)</td></tr>
<tr class="memdesc:ac6f6df869718e162c3dea937f3cd39e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add an user in current database.  <a href="#ac6f6df869718e162c3dea937f3cd39e8"></a><br/></td></tr>
<tr class="separator:ac6f6df869718e162c3dea937f3cd39e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7af0eff344dd4df557434709072a87a"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#ac7af0eff344dd4df557434709072a87a">removeUsr</a> (const CHAR *pUsrName, const CHAR *pPasswd)</td></tr>
<tr class="memdesc:ac7af0eff344dd4df557434709072a87a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove the spacified user from current database.  <a href="#ac7af0eff344dd4df557434709072a87a"></a><br/></td></tr>
<tr class="separator:ac7af0eff344dd4df557434709072a87a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cb2e09ad40b95a4dcfc58c45a75f76e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7cb2e09ad40b95a4dcfc58c45a75f76e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a7cb2e09ad40b95a4dcfc58c45a75f76e">disconnect</a> ()</td></tr>
<tr class="memdesc:a7cb2e09ad40b95a4dcfc58c45a75f76e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disconnect the remote Database Server. <br/></td></tr>
<tr class="separator:a7cb2e09ad40b95a4dcfc58c45a75f76e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55951b2e82b306a098e92b1dbfa70898"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a55951b2e82b306a098e92b1dbfa70898">getSnapshot</a> (<a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;cursor, INT32 snapType, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)</td></tr>
<tr class="memdesc:a55951b2e82b306a098e92b1dbfa70898"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the snapshots of specified type.  <a href="#a55951b2e82b306a098e92b1dbfa70898"></a><br/></td></tr>
<tr class="separator:a55951b2e82b306a098e92b1dbfa70898"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d2bfc2655dbda9d732cffe5c8c747fa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9d2bfc2655dbda9d732cffe5c8c747fa"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>getSnapshot</b> (<a class="el" href="classsdbclient_1_1__sdbCursor.html">_sdbCursor</a> **cursor, INT32 snapType, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)</td></tr>
<tr class="separator:a9d2bfc2655dbda9d732cffe5c8c747fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a383aabfb1934f9ca0f68df9c81b443"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a1a383aabfb1934f9ca0f68df9c81b443">resetSnapshot</a> (const bson::BSONObj &amp;condition=_sdbStaticObject)</td></tr>
<tr class="memdesc:a1a383aabfb1934f9ca0f68df9c81b443"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset the snapshot.  <a href="#a1a383aabfb1934f9ca0f68df9c81b443"></a><br/></td></tr>
<tr class="separator:a1a383aabfb1934f9ca0f68df9c81b443"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf639b39637058839cf754cb2c8a4778"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acf639b39637058839cf754cb2c8a4778"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>getList</b> (<a class="el" href="classsdbclient_1_1__sdbCursor.html">_sdbCursor</a> **cursor, INT32 listType, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)</td></tr>
<tr class="separator:acf639b39637058839cf754cb2c8a4778"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeea45d0324323901f01f9d6fed6573a1"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#aeea45d0324323901f01f9d6fed6573a1">getList</a> (<a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;cursor, INT32 listType, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)</td></tr>
<tr class="memdesc:aeea45d0324323901f01f9d6fed6573a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the informations of specified type.  <a href="#aeea45d0324323901f01f9d6fed6573a1"></a><br/></td></tr>
<tr class="separator:aeea45d0324323901f01f9d6fed6573a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3112896f50931eb3ecb1a9bbc9ae91b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad3112896f50931eb3ecb1a9bbc9ae91b"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>getCollection</b> (const CHAR *pCollectionFullName, <a class="el" href="classsdbclient_1_1__sdbCollection.html">_sdbCollection</a> **collection)</td></tr>
<tr class="separator:ad3112896f50931eb3ecb1a9bbc9ae91b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bf440b551fcc12eb7b04de01be67d70"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a3bf440b551fcc12eb7b04de01be67d70">getCollection</a> (const CHAR *pCollectionFullName, <a class="el" href="classsdbclient_1_1sdbCollection.html">sdbCollection</a> &amp;collection)</td></tr>
<tr class="separator:a3bf440b551fcc12eb7b04de01be67d70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f7dc4f70171f0140e2a5bb780c3fb3c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4f7dc4f70171f0140e2a5bb780c3fb3c"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>getCollectionSpace</b> (const CHAR *pCollectionSpaceName, <a class="el" href="classsdbclient_1_1__sdbCollectionSpace.html">_sdbCollectionSpace</a> **cs)</td></tr>
<tr class="separator:a4f7dc4f70171f0140e2a5bb780c3fb3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8e86fe77eebbec8ae3bc1786c259b17"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#af8e86fe77eebbec8ae3bc1786c259b17">getCollectionSpace</a> (const CHAR *pCollectionSpaceName, <a class="el" href="classsdbclient_1_1sdbCollectionSpace.html">sdbCollectionSpace</a> &amp;cs)</td></tr>
<tr class="memdesc:af8e86fe77eebbec8ae3bc1786c259b17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the specified collection space.  <a href="#af8e86fe77eebbec8ae3bc1786c259b17"></a><br/></td></tr>
<tr class="separator:af8e86fe77eebbec8ae3bc1786c259b17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af50c46e31a1606a9caa9f289553a175e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af50c46e31a1606a9caa9f289553a175e"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>createCollectionSpace</b> (const CHAR *pCollectionSpaceName, INT32 iPageSize, <a class="el" href="classsdbclient_1_1__sdbCollectionSpace.html">_sdbCollectionSpace</a> **cs)</td></tr>
<tr class="separator:af50c46e31a1606a9caa9f289553a175e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52f05987880262c5f1451b71aac819ae"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a52f05987880262c5f1451b71aac819ae">createCollectionSpace</a> (const CHAR *pCollectionSpaceName, INT32 iPageSize, <a class="el" href="classsdbclient_1_1sdbCollectionSpace.html">sdbCollectionSpace</a> &amp;cs)</td></tr>
<tr class="memdesc:a52f05987880262c5f1451b71aac819ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create collection space with specified pagesize.  <a href="#a52f05987880262c5f1451b71aac819ae"></a><br/></td></tr>
<tr class="separator:a52f05987880262c5f1451b71aac819ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d082a5292b3bf2aa2e9925c8c3d953e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4d082a5292b3bf2aa2e9925c8c3d953e"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>createCollectionSpace</b> (const CHAR *pCollectionSpaceName, const bson::BSONObj &amp;options, <a class="el" href="classsdbclient_1_1sdbCollectionSpace.html">sdbCollectionSpace</a> &amp;cs)</td></tr>
<tr class="separator:a4d082a5292b3bf2aa2e9925c8c3d953e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c100a59139cfbf4eaf05c67eb2c98d4"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a0c100a59139cfbf4eaf05c67eb2c98d4">dropCollectionSpace</a> (const CHAR *pCollectionSpaceName)</td></tr>
<tr class="memdesc:a0c100a59139cfbf4eaf05c67eb2c98d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove the specified collection space.  <a href="#a0c100a59139cfbf4eaf05c67eb2c98d4"></a><br/></td></tr>
<tr class="separator:a0c100a59139cfbf4eaf05c67eb2c98d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00e796ebd3194636d05ace4040475494"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a00e796ebd3194636d05ace4040475494"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>listCollectionSpaces</b> (<a class="el" href="classsdbclient_1_1__sdbCursor.html">_sdbCursor</a> **result)</td></tr>
<tr class="separator:a00e796ebd3194636d05ace4040475494"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6df92cd59b5a2f633b9066da31ee0532"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a6df92cd59b5a2f633b9066da31ee0532">listCollectionSpaces</a> (<a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;result)</td></tr>
<tr class="memdesc:a6df92cd59b5a2f633b9066da31ee0532"><td class="mdescLeft">&#160;</td><td class="mdescRight">List all collection space of current database(include temporary collection space).  <a href="#a6df92cd59b5a2f633b9066da31ee0532"></a><br/></td></tr>
<tr class="separator:a6df92cd59b5a2f633b9066da31ee0532"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95c52e39f5b5816a215b32862f45841f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a95c52e39f5b5816a215b32862f45841f"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>listCollections</b> (<a class="el" href="classsdbclient_1_1__sdbCursor.html">_sdbCursor</a> **result)</td></tr>
<tr class="separator:a95c52e39f5b5816a215b32862f45841f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b618a8d7b260fde115f35f627949f76"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a5b618a8d7b260fde115f35f627949f76">listCollections</a> (<a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;result)</td></tr>
<tr class="memdesc:a5b618a8d7b260fde115f35f627949f76"><td class="mdescLeft">&#160;</td><td class="mdescRight">list all collections in current database.  <a href="#a5b618a8d7b260fde115f35f627949f76"></a><br/></td></tr>
<tr class="separator:a5b618a8d7b260fde115f35f627949f76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67fdb8db42c6784cac42ce3348f784f9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a67fdb8db42c6784cac42ce3348f784f9"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>listReplicaGroups</b> (<a class="el" href="classsdbclient_1_1__sdbCursor.html">_sdbCursor</a> **result)</td></tr>
<tr class="separator:a67fdb8db42c6784cac42ce3348f784f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e6d3ba5eef8738e6b92c82d386aa465"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a6e6d3ba5eef8738e6b92c82d386aa465">listReplicaGroups</a> (<a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;result)</td></tr>
<tr class="memdesc:a6e6d3ba5eef8738e6b92c82d386aa465"><td class="mdescLeft">&#160;</td><td class="mdescRight">List all replica groups of current database.  <a href="#a6e6d3ba5eef8738e6b92c82d386aa465"></a><br/></td></tr>
<tr class="separator:a6e6d3ba5eef8738e6b92c82d386aa465"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae62754dec273fa14fd0a775b1e8f0446"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae62754dec273fa14fd0a775b1e8f0446"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>getReplicaGroup</b> (const CHAR *pName, <a class="el" href="classsdbclient_1_1__sdbReplicaGroup.html">_sdbReplicaGroup</a> **result)</td></tr>
<tr class="separator:ae62754dec273fa14fd0a775b1e8f0446"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58d0bc33aa136c21ead0b0fea747fe42"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a58d0bc33aa136c21ead0b0fea747fe42">getReplicaGroup</a> (const CHAR *pName, <a class="el" href="classsdbclient_1_1sdbReplicaGroup.html">sdbReplicaGroup</a> &amp;result)</td></tr>
<tr class="memdesc:a58d0bc33aa136c21ead0b0fea747fe42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the specified replica group.  <a href="#a58d0bc33aa136c21ead0b0fea747fe42"></a><br/></td></tr>
<tr class="separator:a58d0bc33aa136c21ead0b0fea747fe42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34c9413cca4cea66615c67ca51d3eba2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a34c9413cca4cea66615c67ca51d3eba2"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>getReplicaGroup</b> (INT32 id, <a class="el" href="classsdbclient_1_1__sdbReplicaGroup.html">_sdbReplicaGroup</a> **result)</td></tr>
<tr class="separator:a34c9413cca4cea66615c67ca51d3eba2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae580ee35cce39c18b54e54cc91c2089e"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#ae580ee35cce39c18b54e54cc91c2089e">getReplicaGroup</a> (INT32 id, <a class="el" href="classsdbclient_1_1sdbReplicaGroup.html">sdbReplicaGroup</a> &amp;result)</td></tr>
<tr class="memdesc:ae580ee35cce39c18b54e54cc91c2089e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the specified replica group.  <a href="#ae580ee35cce39c18b54e54cc91c2089e"></a><br/></td></tr>
<tr class="separator:ae580ee35cce39c18b54e54cc91c2089e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af79e91ec055a25cf0cd372ca9b660920"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af79e91ec055a25cf0cd372ca9b660920"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>createReplicaGroup</b> (const CHAR *pName, <a class="el" href="classsdbclient_1_1__sdbReplicaGroup.html">_sdbReplicaGroup</a> **replicaGroup)</td></tr>
<tr class="separator:af79e91ec055a25cf0cd372ca9b660920"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35d94e0a21b14c5bc4aee19ca7b06d79"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a35d94e0a21b14c5bc4aee19ca7b06d79">createReplicaGroup</a> (const CHAR *pName, <a class="el" href="classsdbclient_1_1sdbReplicaGroup.html">sdbReplicaGroup</a> &amp;replicaGroup)</td></tr>
<tr class="memdesc:a35d94e0a21b14c5bc4aee19ca7b06d79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the specified replica group.  <a href="#a35d94e0a21b14c5bc4aee19ca7b06d79"></a><br/></td></tr>
<tr class="separator:a35d94e0a21b14c5bc4aee19ca7b06d79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac30034579825cdc0deeb553d9726f54a"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#ac30034579825cdc0deeb553d9726f54a">removeReplicaGroup</a> (const CHAR *pName)</td></tr>
<tr class="memdesc:ac30034579825cdc0deeb553d9726f54a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove the specified replica group.  <a href="#ac30034579825cdc0deeb553d9726f54a"></a><br/></td></tr>
<tr class="separator:ac30034579825cdc0deeb553d9726f54a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b36154a0f5ac15e885e567b78b7bf01"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a3b36154a0f5ac15e885e567b78b7bf01">createReplicaCataGroup</a> (const CHAR *pHostName, const CHAR *pServiceName, const CHAR *pDatabasePath, const bson::BSONObj &amp;configure)</td></tr>
<tr class="memdesc:a3b36154a0f5ac15e885e567b78b7bf01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a catalog replica group.  <a href="#a3b36154a0f5ac15e885e567b78b7bf01"></a><br/></td></tr>
<tr class="separator:a3b36154a0f5ac15e885e567b78b7bf01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab02022c1b298708e333b984ff930cc9b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab02022c1b298708e333b984ff930cc9b"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>activateReplicaGroup</b> (const CHAR *pName, <a class="el" href="classsdbclient_1_1__sdbReplicaGroup.html">_sdbReplicaGroup</a> **replicaGroup)</td></tr>
<tr class="separator:ab02022c1b298708e333b984ff930cc9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12e050b3c04d3bc374db41f813983110"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a12e050b3c04d3bc374db41f813983110">activateReplicaGroup</a> (const CHAR *pName, <a class="el" href="classsdbclient_1_1sdbReplicaGroup.html">sdbReplicaGroup</a> &amp;replicaGroup)</td></tr>
<tr class="memdesc:a12e050b3c04d3bc374db41f813983110"><td class="mdescLeft">&#160;</td><td class="mdescRight">Activate the specified replica group.  <a href="#a12e050b3c04d3bc374db41f813983110"></a><br/></td></tr>
<tr class="separator:a12e050b3c04d3bc374db41f813983110"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08d7daff3410df13b1e43a70f78d0763"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a08d7daff3410df13b1e43a70f78d0763">execUpdate</a> (const CHAR *sql)</td></tr>
<tr class="memdesc:a08d7daff3410df13b1e43a70f78d0763"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executing SQL command for updating.  <a href="#a08d7daff3410df13b1e43a70f78d0763"></a><br/></td></tr>
<tr class="separator:a08d7daff3410df13b1e43a70f78d0763"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc88450bc9c13f3df9b7ef307488311a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acc88450bc9c13f3df9b7ef307488311a"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>exec</b> (const CHAR *sql, <a class="el" href="classsdbclient_1_1__sdbCursor.html">_sdbCursor</a> **result)</td></tr>
<tr class="separator:acc88450bc9c13f3df9b7ef307488311a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accf2d097734510d47fca51634a553677"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#accf2d097734510d47fca51634a553677">exec</a> (const CHAR *sql, <a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;result)</td></tr>
<tr class="memdesc:accf2d097734510d47fca51634a553677"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executing SQL command.  <a href="#accf2d097734510d47fca51634a553677"></a><br/></td></tr>
<tr class="separator:accf2d097734510d47fca51634a553677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39f0ea7e6afbbc3b7d8fffb1ede58931"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a39f0ea7e6afbbc3b7d8fffb1ede58931">transactionBegin</a> ()</td></tr>
<tr class="memdesc:a39f0ea7e6afbbc3b7d8fffb1ede58931"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transaction commit.  <a href="#a39f0ea7e6afbbc3b7d8fffb1ede58931"></a><br/></td></tr>
<tr class="separator:a39f0ea7e6afbbc3b7d8fffb1ede58931"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa5c0dc1adbcbba19147405dbd636bb8"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#aaa5c0dc1adbcbba19147405dbd636bb8">transactionCommit</a> ()</td></tr>
<tr class="memdesc:aaa5c0dc1adbcbba19147405dbd636bb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transaction commit.  <a href="#aaa5c0dc1adbcbba19147405dbd636bb8"></a><br/></td></tr>
<tr class="separator:aaa5c0dc1adbcbba19147405dbd636bb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ee11643fceec45166e8761f758dd259"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a7ee11643fceec45166e8761f758dd259">transactionRollback</a> ()</td></tr>
<tr class="memdesc:a7ee11643fceec45166e8761f758dd259"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transaction rollback.  <a href="#a7ee11643fceec45166e8761f758dd259"></a><br/></td></tr>
<tr class="separator:a7ee11643fceec45166e8761f758dd259"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f64ee8f658595ed4582cc094caf526b"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a4f64ee8f658595ed4582cc094caf526b">flushConfigure</a> (const bson::BSONObj &amp;options)</td></tr>
<tr class="memdesc:a4f64ee8f658595ed4582cc094caf526b"><td class="mdescLeft">&#160;</td><td class="mdescRight">flush the options to configure file.  <a href="#a4f64ee8f658595ed4582cc094caf526b"></a><br/></td></tr>
<tr class="separator:a4f64ee8f658595ed4582cc094caf526b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04fabc0ba18b7ee81bdf0a5f7267e485"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a04fabc0ba18b7ee81bdf0a5f7267e485">crtJSProcedure</a> (const CHAR *code)</td></tr>
<tr class="memdesc:a04fabc0ba18b7ee81bdf0a5f7267e485"><td class="mdescLeft">&#160;</td><td class="mdescRight">create a store procedures.  <a href="#a04fabc0ba18b7ee81bdf0a5f7267e485"></a><br/></td></tr>
<tr class="separator:a04fabc0ba18b7ee81bdf0a5f7267e485"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24d5014faeb2d424b9f80942c81f3a41"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a24d5014faeb2d424b9f80942c81f3a41">rmProcedure</a> (const CHAR *spName)</td></tr>
<tr class="memdesc:a24d5014faeb2d424b9f80942c81f3a41"><td class="mdescLeft">&#160;</td><td class="mdescRight">remove a store procedure.  <a href="#a24d5014faeb2d424b9f80942c81f3a41"></a><br/></td></tr>
<tr class="separator:a24d5014faeb2d424b9f80942c81f3a41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf13cf86c9ca28a408442f63bb315996"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adf13cf86c9ca28a408442f63bb315996"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>listProcedures</b> (<a class="el" href="classsdbclient_1_1__sdbCursor.html">_sdbCursor</a> **cursor, const bson::BSONObj &amp;condition)</td></tr>
<tr class="separator:adf13cf86c9ca28a408442f63bb315996"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a2fa83aaae147419194df4cd9df9a86"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a5a2fa83aaae147419194df4cd9df9a86">listProcedures</a> (<a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;cursor, const bson::BSONObj &amp;condition)</td></tr>
<tr class="memdesc:a5a2fa83aaae147419194df4cd9df9a86"><td class="mdescLeft">&#160;</td><td class="mdescRight">list store procedures.  <a href="#a5a2fa83aaae147419194df4cd9df9a86"></a><br/></td></tr>
<tr class="separator:a5a2fa83aaae147419194df4cd9df9a86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addedc70eadc484dd680bce3a4f2902e0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="addedc70eadc484dd680bce3a4f2902e0"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>evalJS</b> (<a class="el" href="classsdbclient_1_1__sdbCursor.html">_sdbCursor</a> **cursor, const CHAR *code, SDB_SPD_RES_TYPE *type, const bson::BSONObj &amp;errmsg)</td></tr>
<tr class="separator:addedc70eadc484dd680bce3a4f2902e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe6d396da0d2bfd5e7ce595e69b38f70"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#afe6d396da0d2bfd5e7ce595e69b38f70">evalJS</a> (<a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;cursor, const CHAR *code, SDB_SPD_RES_TYPE *type, const bson::BSONObj &amp;errmsg)</td></tr>
<tr class="memdesc:afe6d396da0d2bfd5e7ce595e69b38f70"><td class="mdescLeft">&#160;</td><td class="mdescRight">eval a func. \ type is declared in spd.h. see SDB_FMP_RES_TYPE.  <a href="#afe6d396da0d2bfd5e7ce595e69b38f70"></a><br/></td></tr>
<tr class="separator:afe6d396da0d2bfd5e7ce595e69b38f70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ab7c326d10a759bf2922f708baa7d16"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a1ab7c326d10a759bf2922f708baa7d16">backupOffline</a> (const bson::BSONObj &amp;options)</td></tr>
<tr class="memdesc:a1ab7c326d10a759bf2922f708baa7d16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Backup the whole database or specifed replica group.  <a href="#a1ab7c326d10a759bf2922f708baa7d16"></a><br/></td></tr>
<tr class="separator:a1ab7c326d10a759bf2922f708baa7d16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fbe6480fc5744b908e22087d00724b8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2fbe6480fc5744b908e22087d00724b8"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>listBackup</b> (<a class="el" href="classsdbclient_1_1__sdbCursor.html">_sdbCursor</a> **cursor, const bson::BSONObj &amp;options, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)</td></tr>
<tr class="separator:a2fbe6480fc5744b908e22087d00724b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7c8dbc2c79d0b3b501f906fa7a415fa"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#ad7c8dbc2c79d0b3b501f906fa7a415fa">listBackup</a> (<a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;cursor, const bson::BSONObj &amp;options, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)</td></tr>
<tr class="memdesc:ad7c8dbc2c79d0b3b501f906fa7a415fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">List the backups.  <a href="#ad7c8dbc2c79d0b3b501f906fa7a415fa"></a><br/></td></tr>
<tr class="separator:ad7c8dbc2c79d0b3b501f906fa7a415fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a797f130822fe81c5cc3ea378e02a31b6"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a797f130822fe81c5cc3ea378e02a31b6">removeBackup</a> (const bson::BSONObj &amp;options)</td></tr>
<tr class="memdesc:a797f130822fe81c5cc3ea378e02a31b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove the backups.  <a href="#a797f130822fe81c5cc3ea378e02a31b6"></a><br/></td></tr>
<tr class="separator:a797f130822fe81c5cc3ea378e02a31b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae76710138c208e12c2ab98600dedb35f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae76710138c208e12c2ab98600dedb35f"></a>
INT32&#160;</td><td class="memItemRight" valign="bottom"><b>listTasks</b> (<a class="el" href="classsdbclient_1_1__sdbCursor.html">_sdbCursor</a> **cursor, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject, const bson::BSONObj &amp;hint=_sdbStaticObject)</td></tr>
<tr class="separator:ae76710138c208e12c2ab98600dedb35f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6cfedca719dce5d3b2c2362bb1dc42e"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#ab6cfedca719dce5d3b2c2362bb1dc42e">listTasks</a> (<a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;cursor, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject, const bson::BSONObj &amp;hint=_sdbStaticObject)</td></tr>
<tr class="memdesc:ab6cfedca719dce5d3b2c2362bb1dc42e"><td class="mdescLeft">&#160;</td><td class="mdescRight">List the tasks.  <a href="#ab6cfedca719dce5d3b2c2362bb1dc42e"></a><br/></td></tr>
<tr class="separator:ab6cfedca719dce5d3b2c2362bb1dc42e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7927ebb2fb8706d5d8eba031a9e2bf91"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a7927ebb2fb8706d5d8eba031a9e2bf91">waitTasks</a> (const SINT64 *taskIDs, SINT32 num)</td></tr>
<tr class="memdesc:a7927ebb2fb8706d5d8eba031a9e2bf91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait the tasks to finish.  <a href="#a7927ebb2fb8706d5d8eba031a9e2bf91"></a><br/></td></tr>
<tr class="separator:a7927ebb2fb8706d5d8eba031a9e2bf91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d79a58d3b826b19f1dbf20d0e3a59f0"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a8d79a58d3b826b19f1dbf20d0e3a59f0">cancelTask</a> (SINT64 taskID, BOOLEAN isAsync)</td></tr>
<tr class="memdesc:a8d79a58d3b826b19f1dbf20d0e3a59f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cancel the specified task.  <a href="#a8d79a58d3b826b19f1dbf20d0e3a59f0"></a><br/></td></tr>
<tr class="separator:a8d79a58d3b826b19f1dbf20d0e3a59f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2052443a0e641164ac89ca54f87a5f3e"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a2052443a0e641164ac89ca54f87a5f3e">setSessionAttr</a> (const bson::BSONObj &amp;options=_sdbStaticObject)</td></tr>
<tr class="memdesc:a2052443a0e641164ac89ca54f87a5f3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the attributes of the session.  <a href="#a2052443a0e641164ac89ca54f87a5f3e"></a><br/></td></tr>
<tr class="separator:a2052443a0e641164ac89ca54f87a5f3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2052673f94c49d421bed64e096553093"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a2052673f94c49d421bed64e096553093">closeAllCursors</a> ()</td></tr>
<tr class="memdesc:a2052673f94c49d421bed64e096553093"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close all the cursors in current thread, we can't use those cursors to get data again.  <a href="#a2052673f94c49d421bed64e096553093"></a><br/></td></tr>
<tr class="separator:a2052673f94c49d421bed64e096553093"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a587e82a600dfefaab2872df189e08ca4"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a587e82a600dfefaab2872df189e08ca4">isValid</a> (BOOLEAN *result)</td></tr>
<tr class="memdesc:a587e82a600dfefaab2872df189e08ca4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Judge whether the connection is valid.  <a href="#a587e82a600dfefaab2872df189e08ca4"></a><br/></td></tr>
<tr class="separator:a587e82a600dfefaab2872df189e08ca4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a615990b4893d5c2e41629c22b8c16997"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a615990b4893d5c2e41629c22b8c16997">createDomain</a> (const CHAR *pDomainName, const bson::BSONObj &amp;options, <a class="el" href="classsdbclient_1_1sdbDomain.html">sdbDomain</a> &amp;domain)</td></tr>
<tr class="memdesc:a615990b4893d5c2e41629c22b8c16997"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a domain.  <a href="#a615990b4893d5c2e41629c22b8c16997"></a><br/></td></tr>
<tr class="separator:a615990b4893d5c2e41629c22b8c16997"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a062ae778caaa1d4171e497d3fd253614"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a062ae778caaa1d4171e497d3fd253614">dropDomain</a> (const CHAR *pDomainName)</td></tr>
<tr class="memdesc:a062ae778caaa1d4171e497d3fd253614"><td class="mdescLeft">&#160;</td><td class="mdescRight">Drop a domain.  <a href="#a062ae778caaa1d4171e497d3fd253614"></a><br/></td></tr>
<tr class="separator:a062ae778caaa1d4171e497d3fd253614"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac869176932b4251ff276736996e9c875"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#ac869176932b4251ff276736996e9c875">getDomain</a> (const CHAR *pDomainName, <a class="el" href="classsdbclient_1_1sdbDomain.html">sdbDomain</a> &amp;domain)</td></tr>
<tr class="memdesc:ac869176932b4251ff276736996e9c875"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a domain.  <a href="#ac869176932b4251ff276736996e9c875"></a><br/></td></tr>
<tr class="separator:ac869176932b4251ff276736996e9c875"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a507853027ef45972e5dffdd1c5d53621"><td class="memItemLeft" align="right" valign="top">INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#a507853027ef45972e5dffdd1c5d53621">listDomains</a> (<a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;cursor, const bson::BSONObj &amp;condition, const bson::BSONObj &amp;selector, const bson::BSONObj &amp;orderBy, const bson::BSONObj &amp;hint)</td></tr>
<tr class="memdesc:a507853027ef45972e5dffdd1c5d53621"><td class="mdescLeft">&#160;</td><td class="mdescRight">List the domains.  <a href="#a507853027ef45972e5dffdd1c5d53621"></a><br/></td></tr>
<tr class="separator:a507853027ef45972e5dffdd1c5d53621"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ac2c38ba2117a2053533e3fcea06fa97b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsdbclient_1_1__sdb.html">_sdb</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsdbclient_1_1sdb.html#ac2c38ba2117a2053533e3fcea06fa97b">pSDB</a></td></tr>
<tr class="separator:ac2c38ba2117a2053533e3fcea06fa97b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Database operation interfaces of admin. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a12e050b3c04d3bc374db41f813983110"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::activateReplicaGroup </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbReplicaGroup.html">sdbReplicaGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>replicaGroup</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Activate the specified replica group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pName</td><td>The name of the replica group </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">replicaGroup</td><td>The return <a class="el" href="classsdbclient_1_1sdbReplicaGroup.html" title="Database operation interfaces of replica group.">sdbReplicaGroup</a> object </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1ab7c326d10a759bf2922f708baa7d16"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::backupOffline </td>
          <td>(</td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>options</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Backup the whole database or specifed replica group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Contains a series of backup configuration infomations. Backup the whole cluster if null. The "options" contains 5 options as below. All the elements in options are optional. eg: {"GroupName":["rgName1", "rgName2"], "Path":"/opt/sequoiadb/backup", "Name":"backupName", "Description":description, "EnsureInc":true, "OverWrite":true} <pre class="fragment">GroupID     : The id(s) of replica group(s) which to be backuped
GroupName   : The replica groups which to be backuped
Path        : The backup path, if not assign, use the backup path assigned in the configuration file,
              the path support to use wildcard(%g/%G:group name, %h/%H:host name, %s/%S:service name). e.g.  {Path:"/opt/sequoiadb/backup/%g"}
isSubDir    : Whether the path specified by paramer "Path" is a subdirectory of the path specified in the configuration file, default to be false
Name        : The name for the backup
Prefix      : The prefix of name for the backup, default to be null. e.g. {Prefix:"%g_bk_"}
EnableDateDir : Whether turn on the feature which will create subdirectory named to current date like "YYYY-MM-DD" automatically, default to be false
Description : The description for the backup
EnsureInc   : Whether excute increment synchronization, default to be false
OverWrite   : Whether overwrite the old backup file, default to be false
</pre> </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8d79a58d3b826b19f1dbf20d0e3a59f0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::cancelTask </td>
          <td>(</td>
          <td class="paramtype">SINT64&#160;</td>
          <td class="paramname"><em>taskID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BOOLEAN&#160;</td>
          <td class="paramname"><em>isAsync</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Cancel the specified task. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">taskID</td><td>The task id </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isAsync</td><td>The operation "cancel task" is async or not, "true" for async, "false" for sync. Default sync </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2052673f94c49d421bed64e096553093"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::closeAllCursors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Close all the cursors in current thread, we can't use those cursors to get data again. </p>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a41960ef1b7c1d2914c59247309c17b53"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::connect </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pHostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT16&#160;</td>
          <td class="paramname"><em>port</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Connect to remote Database Server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pHostName</td><td>The Host Name or IP Address of Database Server. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">port</td><td>The Port of Database Server. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a32b0e972d5aa6f3e58fb102ce3d4eded"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::connect </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pHostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT16&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pUsrName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pPasswd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Connect to remote Database Server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pHostName</td><td>The Host Name or IP Address of Database Server. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">port</td><td>The Port of Database Server. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pUsrName</td><td>The connection user name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pPasswd</td><td>The connection password. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa1ffa2592e22ed4d0e98c9dbe8f937e6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::connect </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pHostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pServiceName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Connect to remote Database Server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pHostName</td><td>The Host Name or IP Address of Database Server. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pServiceName</td><td>The Service Name of Database Server. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a97c1f8b762abebfeec2b550f803490de"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::connect </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pHostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pServiceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pUsrName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pPasswd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Connect to remote Database Server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pHostName</td><td>The Host Name or IP Address of Database Server. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pServiceName</td><td>The Service Name of Database Server. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pUsrName</td><td>The connection user name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pPasswd</td><td>The connection password. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a34313780f36d821b9a6627f0ca743a01"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::connect </td>
          <td>(</td>
          <td class="paramtype">const CHAR **&#160;</td>
          <td class="paramname"><em>pConnAddrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>arrSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pUsrName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pPasswd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Connect to database used a random valid address in the array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pConnAddrs</td><td>The array of the coord's address </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arrSize</td><td>The size of the array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pUsrName</td><td>The connection user name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pPasswd</td><td>The connection password. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a52f05987880262c5f1451b71aac819ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::createCollectionSpace </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionSpaceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>iPageSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCollectionSpace.html">sdbCollectionSpace</a> &amp;&#160;</td>
          <td class="paramname"><em>cs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create collection space with specified pagesize. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionSpaceName</td><td>The name of collection space. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">iPageSize</td><td>The Page Size as below <pre class="fragment">SDB_PAGESIZE_4K
SDB_PAGESIZE_8K
SDB_PAGESIZE_16K
SDB_PAGESIZE_32K
SDB_PAGESIZE_64K
SDB_PAGESIZE_DEFAULT
</pre> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cs</td><td>The return collection space object of creation. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a615990b4893d5c2e41629c22b8c16997"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::createDomain </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pDomainName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbDomain.html">sdbDomain</a> &amp;&#160;</td>
          <td class="paramname"><em>domain</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a domain. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pDomainName</td><td>The name of the domain </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>The options for the domain. The options are as below: <pre class="fragment">Group: The list of name for replica groups that the domain contains.
       eg: { "Group": [ "group1", "group2", "group3" ] }
       If this argument is not included, the domain will contain all replica groups in the cluster.
</pre> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">domain</td><td>The created <a class="el" href="classsdbclient_1_1sdbDomain.html" title="Database operation interfaces of domain.">sdbDomain</a> object </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3b36154a0f5ac15e885e567b78b7bf01"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::createReplicaCataGroup </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pHostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pServiceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pDatabasePath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>configure</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a catalog replica group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pHostName</td><td>The hostname for the catalog replica group </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pServiceName</td><td>The servicename for the catalog replica group </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pDatabasePath</td><td>The path for the catalog replica group </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">configure</td><td>The configurations for the catalog replica group </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a35d94e0a21b14c5bc4aee19ca7b06d79"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::createReplicaGroup </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbReplicaGroup.html">sdbReplicaGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>replicaGroup</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create the specified replica group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pName</td><td>The name of the replica group. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">replicaGroup</td><td>The return <a class="el" href="classsdbclient_1_1sdbReplicaGroup.html" title="Database operation interfaces of replica group.">sdbReplicaGroup</a> object. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac6f6df869718e162c3dea937f3cd39e8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::createUsr </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pUsrName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pPasswd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add an user in current database. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pUsrName</td><td>The connection user name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pPasswd</td><td>The connection password. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a04fabc0ba18b7ee81bdf0a5f7267e485"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::crtJSProcedure </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>code</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>create a store procedures. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">code</td><td>The code of store procedures </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0c100a59139cfbf4eaf05c67eb2c98d4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::dropCollectionSpace </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionSpaceName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Remove the specified collection space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionSpaceName</td><td>The name of collection space. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a062ae778caaa1d4171e497d3fd253614"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::dropDomain </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pDomainName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Drop a domain. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pDomainName</td><td>The name of the domain </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afe6d396da0d2bfd5e7ce595e69b38f70"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::evalJS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;&#160;</td>
          <td class="paramname"><em>cursor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SDB_SPD_RES_TYPE *&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>errmsg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>eval a func. \ type is declared in spd.h. see SDB_FMP_RES_TYPE. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">code</td><td>The code to eval </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">type</td><td>The type of value </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cursor</td><td>The cursor handle of current eval </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">errmsg</td><td>The errmsg from eval </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="accf2d097734510d47fca51634a553677"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::exec </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>sql</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Executing SQL command. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sql</td><td>The SQL command. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>The return cursor object of matching documents. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a08d7daff3410df13b1e43a70f78d0763"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::execUpdate </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>sql</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Executing SQL command for updating. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sql</td><td>The SQL command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4f64ee8f658595ed4582cc094caf526b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::flushConfigure </td>
          <td>(</td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>options</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>flush the options to configure file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>The configure infomation, pass {"Global":true} or {"Global":false} In cluster environment, passing {"Global":true} will flush data's and catalog's configuration file, while passing {"Global":false} will flush coord's configuration file. In stand-alone environment, both them have the same behaviour. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3bf440b551fcc12eb7b04de01be67d70"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::getCollection </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionFullName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCollection.html">sdbCollection</a> &amp;&#160;</td>
          <td class="paramname"><em>collection</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the specified collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionFullName</td><td>The full name of collection. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">collection</td><td>The return collection object of query. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af8e86fe77eebbec8ae3bc1786c259b17"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::getCollectionSpace </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionSpaceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCollectionSpace.html">sdbCollectionSpace</a> &amp;&#160;</td>
          <td class="paramname"><em>cs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the specified collection space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionSpaceName</td><td>The name of collection space. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cs</td><td>The return collection space object of query. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac869176932b4251ff276736996e9c875"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::getDomain </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pDomainName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbDomain.html">sdbDomain</a> &amp;&#160;</td>
          <td class="paramname"><em>domain</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a domain. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pDomainName</td><td>The name of the domain </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">domain</td><td>The <a class="el" href="classsdbclient_1_1sdbDomain.html" title="Database operation interfaces of domain.">sdbDomain</a> object to get </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aeea45d0324323901f01f9d6fed6573a1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::getList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;&#160;</td>
          <td class="paramname"><em>cursor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>listType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>condition</em> = <code>_sdbStaticObject</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>selector</em> = <code>_sdbStaticObject</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>orderBy</em> = <code>_sdbStaticObject</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the informations of specified type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">listType</td><td>The list type as below <pre class="fragment">SDB_LIST_CONTEXTS         : Get all contexts list
SDB_LIST_CONTEXTS_CURRENT : Get contexts list for the current session
SDB_LIST_SESSIONS         : Get all sessions list
SDB_LIST_SESSIONS_CURRENT : Get the current session
SDB_LIST_COLLECTIONS      : Get all collections list
SDB_LIST_COLLECTIONSPACES : Get all collecion spaces' list
SDB_LIST_STORAGEUNITS     : Get storage units list
SDB_LIST_GROUPS           : Get replicaGroup list ( only applicable in sharding env )
</pre> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, match all the documents if null. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">select</td><td>The selective rule, return the whole document if null. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cursor</td><td>The return cursor object of query. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a58d0bc33aa136c21ead0b0fea747fe42"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::getReplicaGroup </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbReplicaGroup.html">sdbReplicaGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the specified replica group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pName</td><td>The name of replica group. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>The <a class="el" href="classsdbclient_1_1sdbReplicaGroup.html" title="Database operation interfaces of replica group.">sdbReplicaGroup</a> object. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae580ee35cce39c18b54e54cc91c2089e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::getReplicaGroup </td>
          <td>(</td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbReplicaGroup.html">sdbReplicaGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the specified replica group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>The id of replica group. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>The <a class="el" href="classsdbclient_1_1sdbReplicaGroup.html" title="Database operation interfaces of replica group.">sdbReplicaGroup</a> object. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a55951b2e82b306a098e92b1dbfa70898"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::getSnapshot </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;&#160;</td>
          <td class="paramname"><em>cursor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>snapType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>condition</em> = <code>_sdbStaticObject</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>selector</em> = <code>_sdbStaticObject</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>orderBy</em> = <code>_sdbStaticObject</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the snapshots of specified type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">snapType</td><td>The snapshot type as below <pre class="fragment">SDB_SNAP_CONTEXTS         : Get all contexts' snapshot
SDB_SNAP_CONTEXTS_CURRENT : Get the current context's snapshot
SDB_SNAP_SESSIONS         : Get all sessions' snapshot
SDB_SNAP_SESSIONS_CURRENT : Get the current session's snapshot
SDB_SNAP_COLLECTIONS        : Get the collections' snapshot
SDB_SNAP_COLLECTIONSPACES        : Get the collection spaces' snapshot
SDB_SNAP_DATABASE         : Get database's snapshot
SDB_SNAP_SYSTEM           : Get system's snapshot
SDB_SNAP_CATA           : Get catalog's snapshot
</pre> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, match all the documents if not provided. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">select</td><td>The selective rule, return the whole document if not provided. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, result set is unordered if not provided. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cursor</td><td>The return cursor object of query. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a587e82a600dfefaab2872df189e08ca4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::isValid </td>
          <td>(</td>
          <td class="paramtype">BOOLEAN *&#160;</td>
          <td class="paramname"><em>result</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Judge whether the connection is valid. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>the output result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad7c8dbc2c79d0b3b501f906fa7a415fa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::listBackup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;&#160;</td>
          <td class="paramname"><em>cursor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>condition</em> = <code>_sdbStaticObject</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>selector</em> = <code>_sdbStaticObject</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>orderBy</em> = <code>_sdbStaticObject</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>List the backups. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Contains configuration infomations for remove backups, list all the backups in the default backup path if null. The "options" contains 3 options as below. All the elements in options are optional. eg: {"GroupName":["rgame1", "rgName2"], "Path":"/opt/sequoiadb/backup", "Name":"backupName"} <pre class="fragment">GroupName   : Assign the backups of specifed replica groups to be list
Path        : Assign the backups in specifed path to be list, if not assign, use the backup path asigned in the configuration file
Name        : Assign the backups with specifed name to be list
</pre> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return all the documents if not provided </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">selector</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cursor</td><td>The cusor handle of result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5b618a8d7b260fde115f35f627949f76"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::listCollections </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>list all collections in current database. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>The return cursor object of query. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6df92cd59b5a2f633b9066da31ee0532"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::listCollectionSpaces </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>List all collection space of current database(include temporary collection space). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>The return cursor object of query. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a507853027ef45972e5dffdd1c5d53621"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::listDomains </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;&#160;</td>
          <td class="paramname"><em>cursor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>selector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>orderBy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>hint</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>List the domains. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">selector</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, automatically match the optimal hint if null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cursor</td><td>The <a class="el" href="classsdbclient_1_1sdbCursor.html" title="Database operation interfaces of cursor.">sdbCursor</a> object of result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5a2fa83aaae147419194df4cd9df9a86"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::listProcedures </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;&#160;</td>
          <td class="paramname"><em>cursor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>condition</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>list store procedures. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The condition of list </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cursor</td><td>The cursor of the result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6e6d3ba5eef8738e6b92c82d386aa465"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::listReplicaGroups </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>List all replica groups of current database. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>The return cursor object of query. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab6cfedca719dce5d3b2c2362bb1dc42e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::listTasks </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsdbclient_1_1sdbCursor.html">sdbCursor</a> &amp;&#160;</td>
          <td class="paramname"><em>cursor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>condition</em> = <code>_sdbStaticObject</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>selector</em> = <code>_sdbStaticObject</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>orderBy</em> = <code>_sdbStaticObject</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>hint</em> = <code>_sdbStaticObject</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>List the tasks. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">selector</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, automatically match the optimal hint if null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cursor</td><td>The connection handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a797f130822fe81c5cc3ea378e02a31b6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::removeBackup </td>
          <td>(</td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>options</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Remove the backups. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Contains configuration infomations for remove backups, remove all the backups in the default backup path if null. The "options" contains 3 options as below. All the elements in options are optional. eg: {"GroupName":["rgName1", "rgName2"], "Path":"/opt/sequoiadb/backup", "Name":"backupName"} <pre class="fragment">GroupName   : Assign the backups of specifed replica groups to be remove
Path        : Assign the backups in specifed path to be remove, if not assign, use the backup path asigned in the configuration file
Name        : Assign the backups with specifed name to be remove
</pre> </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac30034579825cdc0deeb553d9726f54a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::removeReplicaGroup </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Remove the specified replica group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pName</td><td>The name of the replica group </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac7af0eff344dd4df557434709072a87a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::removeUsr </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pUsrName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pPasswd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Remove the spacified user from current database. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pUsrName</td><td>The connection user name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pPasswd</td><td>The connection password. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1a383aabfb1934f9ca0f68df9c81b443"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::resetSnapshot </td>
          <td>(</td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>condition</em> = <code>_sdbStaticObject</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reset the snapshot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, usually specifies the node in sharding environment, in standalone mode, this option is ignored. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a24d5014faeb2d424b9f80942c81f3a41"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::rmProcedure </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>spName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>remove a store procedure. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">spName</td><td>The name of store procedure </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2052443a0e641164ac89ca54f87a5f3e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::setSessionAttr </td>
          <td>(</td>
          <td class="paramtype">const bson::BSONObj &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code>_sdbStaticObject</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the attributes of the session. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>The configuration options for session.The options are as below: <pre class="fragment">PreferedInstance : indicate which instance to respond read request in current session.
                  eg:{"PreferedInstance":"m"/"M"/"s"/"S"/"a"/"A"/1-7},
                  prefer to choose "read and write instance"/"read only instance"/"anyone instance"/instance1-insatance7,
                  default to be {"PreferedInstance":"A"}, means would like to choose anyone instance to respond read request such as query. 
</pre> </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a39f0ea7e6afbbc3b7d8fffb1ede58931"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::transactionBegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Transaction commit. </p>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aaa5c0dc1adbcbba19147405dbd636bb8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::transactionCommit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Transaction commit. </p>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7ee11643fceec45166e8761f758dd259"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::transactionRollback </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Transaction rollback. </p>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7927ebb2fb8706d5d8eba031a9e2bf91"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbclient::sdb::waitTasks </td>
          <td>(</td>
          <td class="paramtype">const SINT64 *&#160;</td>
          <td class="paramname"><em>taskIDs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT32&#160;</td>
          <td class="paramname"><em>num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Wait the tasks to finish. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">taskIDs</td><td>The array of task id </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num</td><td>The number of task id </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ac2c38ba2117a2053533e3fcea06fa97b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sdbclient::sdb::pSDB</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>A pointer of virtual base class <a class="el" href="classsdbclient_1_1__sdb.html">_sdb</a></p>
<p>Class sdb is a shell for <a class="el" href="classsdbclient_1_1__sdb.html">_sdb</a>. We use pSDB to call the methods in class <a class="el" href="classsdbclient_1_1__sdb.html">_sdb</a>. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>E:/sequoiadb/client/include/<a class="el" href="client_8hpp_source.html">client.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri Oct 24 2014 13:32:16 for SequoiaDB by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.2
</small></address>
</body>
</html>
