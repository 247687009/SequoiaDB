<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SequoiaDB: E:/sequoiadb/client/include/client.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SequoiaDB
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Macros</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_db3a54907829b36871118d03417739cd.html">client</a></li><li class="navelem"><a class="el" href="dir_5c23080e296bbe846f4ed2d01d7b595d.html">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">client.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>C Client Driver.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;core.h&quot;</code><br/>
<code>#include &quot;ossTypes.h&quot;</code><br/>
<code>#include &quot;bson/bson.h&quot;</code><br/>
<code>#include &quot;jstobs.h&quot;</code><br/>
<code>#include &quot;spd.h&quot;</code><br/>
</div>
<p><a href="client_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a416bab94768827d4268d54fbff819b28"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a416bab94768827d4268d54fbff819b28"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SDB_PAGESIZE_4K</b>&#160;&#160;&#160;4096</td></tr>
<tr class="separator:a416bab94768827d4268d54fbff819b28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecaf810b5402f6eaa62e5ef9c80849d9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aecaf810b5402f6eaa62e5ef9c80849d9"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SDB_PAGESIZE_8K</b>&#160;&#160;&#160;8192</td></tr>
<tr class="separator:aecaf810b5402f6eaa62e5ef9c80849d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26fe3c52bb15a243b8523ee5da681db6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a26fe3c52bb15a243b8523ee5da681db6"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SDB_PAGESIZE_16K</b>&#160;&#160;&#160;16384</td></tr>
<tr class="separator:a26fe3c52bb15a243b8523ee5da681db6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a573f80ddc3fe5686aed5bf3958fc3a90"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a573f80ddc3fe5686aed5bf3958fc3a90"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SDB_PAGESIZE_32K</b>&#160;&#160;&#160;32768</td></tr>
<tr class="separator:a573f80ddc3fe5686aed5bf3958fc3a90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb7d089652956f01eb67ab6f3ba878d4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abb7d089652956f01eb67ab6f3ba878d4"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SDB_PAGESIZE_64K</b>&#160;&#160;&#160;65536</td></tr>
<tr class="separator:abb7d089652956f01eb67ab6f3ba878d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72a3a2a84925f6f11cd00a17b701eed9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a72a3a2a84925f6f11cd00a17b701eed9">SDB_PAGESIZE_DEFAULT</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:a72a3a2a84925f6f11cd00a17b701eed9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff79f9a8b1a394de4285ed060708dfed"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aff79f9a8b1a394de4285ed060708dfed"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SDB_INVALID_HANDLE</b>&#160;&#160;&#160;((ossValuePtr) 0)</td></tr>
<tr class="separator:aff79f9a8b1a394de4285ed060708dfed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae154732f092cf6846a20ec92b485b6a4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ae154732f092cf6846a20ec92b485b6a4">sdbCreateReplicaNode</a>&#160;&#160;&#160;<a class="el" href="client_8h.html#a2e31cbaffe6f067797ccd0091a920d92">sdbCreateNode</a></td></tr>
<tr class="separator:ae154732f092cf6846a20ec92b485b6a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af49ba435da89b47faaeb751894a89144"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#af49ba435da89b47faaeb751894a89144">sdbRemoveReplicaNode</a>&#160;&#160;&#160;<a class="el" href="client_8h.html#a723476a2f912a185156d461e3a52a9bd">sdbRemoveNode</a></td></tr>
<tr class="separator:af49ba435da89b47faaeb751894a89144"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd733af3d51c43578dc299838f46e78e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#abd733af3d51c43578dc299838f46e78e">sdbGetReplicaNodeMaster</a>&#160;&#160;&#160;<a class="el" href="client_8h.html#a3eace1c57b76f33e4fb190654091c6c2">sdbGetNodeMaster</a></td></tr>
<tr class="separator:abd733af3d51c43578dc299838f46e78e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c359e2bf6c9ce50abda0529359d08c2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a9c359e2bf6c9ce50abda0529359d08c2">sdbGetReplicaNodeSlave</a>&#160;&#160;&#160;<a class="el" href="client_8h.html#a1b1fc1ba88e7d9bd793d4e5af4ad7c11">sdbGetNodeSlave</a></td></tr>
<tr class="separator:a9c359e2bf6c9ce50abda0529359d08c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8badb505c6e2f194a54aa848472e23b0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a8badb505c6e2f194a54aa848472e23b0">sdbGetReplicaNodeByName</a>&#160;&#160;&#160;<a class="el" href="client_8h.html#a0cd5c07a110bcdce3fcad7da84d88738">sdbGetNodeByName</a></td></tr>
<tr class="separator:a8badb505c6e2f194a54aa848472e23b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9c6383673f8cafe131f5118abcb7346"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aa9c6383673f8cafe131f5118abcb7346">sdbGetReplicaNodeByHost</a>&#160;&#160;&#160;<a class="el" href="client_8h.html#aac1300aec73c81c8f57163ffe505a312">sdbGetNodeByHost</a></td></tr>
<tr class="separator:aa9c6383673f8cafe131f5118abcb7346"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b30514e6a6298fd41bf5891755351df"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a7b30514e6a6298fd41bf5891755351df">sdbGetReplicaNodeSddr</a>&#160;&#160;&#160;<a class="el" href="client_8h.html#aad4b783665b37aadf01a92a48fd9b415">sdbGetNodeAddr</a></td></tr>
<tr class="separator:a7b30514e6a6298fd41bf5891755351df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5df69135412d77b60b03c6a5d517738"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ac5df69135412d77b60b03c6a5d517738">sdbStartReplicaNode</a>&#160;&#160;&#160;<a class="el" href="client_8h.html#aaac01736049b5416e5f713a18d929494">sdbStartNode</a></td></tr>
<tr class="separator:ac5df69135412d77b60b03c6a5d517738"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6bc991da64375fa75effd3da6d22282"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ae6bc991da64375fa75effd3da6d22282">sdbStopReplicaNode</a>&#160;&#160;&#160;<a class="el" href="client_8h.html#aa939e94c8f7d14f6db9ea71b9355f0f4">sdbStopNode</a></td></tr>
<tr class="separator:ae6bc991da64375fa75effd3da6d22282"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50124c49264e9aa08d02f5a873a39a10"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a50124c49264e9aa08d02f5a873a39a10">sdbReleaseReplicaNode</a>&#160;&#160;&#160;<a class="el" href="client_8h.html#a9b01999a1061ab7def7196f670201aec">sdbReleaseNode</a></td></tr>
<tr class="separator:a50124c49264e9aa08d02f5a873a39a10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5387deee4c330c29a64ae8da60dde03a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5387deee4c330c29a64ae8da60dde03a"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>FLG_INSERT_CONTONDUP</b>&#160;&#160;&#160;0x00000001</td></tr>
<tr class="separator:a5387deee4c330c29a64ae8da60dde03a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ad20d32488ed10e7c0af08f2b5ca97750"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad20d32488ed10e7c0af08f2b5ca97750"></a>
typedef enum <a class="el" href="client_8h.html#ab325438708db06790ad8bc61f3ab9990">_SDB_LOB_OPEN_MODE</a>&#160;</td><td class="memItemRight" valign="bottom"><b>SDB_LOB_OPEN_MODE</b></td></tr>
<tr class="separator:ad20d32488ed10e7c0af08f2b5ca97750"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ef2169f0e520a6f14273df64c4c5c4c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0ef2169f0e520a6f14273df64c4c5c4c"></a>
typedef enum <a class="el" href="client_8h.html#af77505dd6aeb8e9158f66f01f60ba37a">_SDB_LOB_SEEK</a>&#160;</td><td class="memItemRight" valign="bottom"><b>SDB_LOB_SEEK</b></td></tr>
<tr class="separator:a0ef2169f0e520a6f14273df64c4c5c4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e461b90db036710370cfdbccaf557e7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8e461b90db036710370cfdbccaf557e7"></a>
typedef ossValuePtr&#160;</td><td class="memItemRight" valign="bottom"><b>sdbConnectionHandle</b></td></tr>
<tr class="separator:a8e461b90db036710370cfdbccaf557e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab89ad7ea003e52e1262c7e5859e51fe5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab89ad7ea003e52e1262c7e5859e51fe5"></a>
typedef ossValuePtr&#160;</td><td class="memItemRight" valign="bottom"><b>sdbCSHandle</b></td></tr>
<tr class="separator:ab89ad7ea003e52e1262c7e5859e51fe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad75d06e563e24499d8e5e466106b080a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad75d06e563e24499d8e5e466106b080a"></a>
typedef ossValuePtr&#160;</td><td class="memItemRight" valign="bottom"><b>sdbCollectionHandle</b></td></tr>
<tr class="separator:ad75d06e563e24499d8e5e466106b080a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac96c5d358a411f8d8467b4bb132e5a21"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac96c5d358a411f8d8467b4bb132e5a21"></a>
typedef ossValuePtr&#160;</td><td class="memItemRight" valign="bottom"><b>sdbCursorHandle</b></td></tr>
<tr class="separator:ac96c5d358a411f8d8467b4bb132e5a21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbe97b4aa9a068da4b81e66ee2d74584"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abbe97b4aa9a068da4b81e66ee2d74584"></a>
typedef ossValuePtr&#160;</td><td class="memItemRight" valign="bottom"><b>sdbReplicaGroupHandle</b></td></tr>
<tr class="separator:abbe97b4aa9a068da4b81e66ee2d74584"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe076525efda13ee1bd98150818ad3d5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afe076525efda13ee1bd98150818ad3d5"></a>
typedef ossValuePtr&#160;</td><td class="memItemRight" valign="bottom"><b>sdbNodeHandle</b></td></tr>
<tr class="separator:afe076525efda13ee1bd98150818ad3d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac88f3c83ffab6364a06319a3bf23883b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac88f3c83ffab6364a06319a3bf23883b"></a>
typedef ossValuePtr&#160;</td><td class="memItemRight" valign="bottom"><b>sdbDomainHandle</b></td></tr>
<tr class="separator:ac88f3c83ffab6364a06319a3bf23883b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f211e33ef04959d59aa7c9956607710"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9f211e33ef04959d59aa7c9956607710"></a>
typedef ossValuePtr&#160;</td><td class="memItemRight" valign="bottom"><b>sdbLobHandle</b></td></tr>
<tr class="separator:a9f211e33ef04959d59aa7c9956607710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8dc7a8e34d7d2d5a742de634b7d7956"><td class="memItemLeft" align="right" valign="top">typedef sdbNodeHandle&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ab8dc7a8e34d7d2d5a742de634b7d7956">sdbReplicaNodeHandle</a></td></tr>
<tr class="separator:ab8dc7a8e34d7d2d5a742de634b7d7956"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a98041827bff0c9494091863444ddc690"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690">SDB_SNAP_TYPE</a> { <br/>
&#160;&#160;<a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690a7210debb74b81380d3a1a1e1596adfc5">SDB_SNAP_CONTEXTS</a> = 0, 
<a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690a6a3019ae64b86df9f06fea6fff3be3f6">SDB_SNAP_CONTEXTS_CURRENT</a>, 
<a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690a9acbfe5507ebddf9b4dad210c238ab71">SDB_SNAP_SESSIONS</a>, 
<a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690adde45c257158aa2303759097d621c4fb">SDB_SNAP_SESSIONS_CURRENT</a>, 
<br/>
&#160;&#160;<a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690a806f7dc03a0454839a469ee08fa22bfe">SDB_SNAP_COLLECTIONS</a>, 
<a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690af2f34aff1971650e7f3fe734b589bdc6">SDB_SNAP_COLLECTIONSPACES</a>, 
<a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690aa8af162b151dd24462d1338fce4599a7">SDB_SNAP_DATABASE</a>, 
<a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690a958835534c0d93efd59f1317046f229a">SDB_SNAP_SYSTEM</a>, 
<br/>
&#160;&#160;<a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690af4639f253945be503456e7a64f3f608e">SDB_SNAP_CATALOG</a>, 
<a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690a4ed6d2100be0fe9f8c1600d90e34bf23">SDB_SNAP_END</a>
<br/>
 }</td></tr>
<tr class="separator:a98041827bff0c9494091863444ddc690"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64fae029b89fcfd99538e07e790abf41"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41">SDB_LIST_TYPE</a> { <br/>
&#160;&#160;<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41a6d2411afc0bdd2f11ffb9503e981106e">SDB_LIST_CONTEXTS</a> = 0, 
<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41a571270a7f9df759b6769f94adf59c233">SDB_LIST_CONTEXTS_CURRENT</a>, 
<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41aa7eb7e9b7c034ad122db3dcb5067df5a">SDB_LIST_SESSIONS</a>, 
<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41aa1a07c12efb4c147aa45dd2e8292a8c6">SDB_LIST_SESSIONS_CURRENT</a>, 
<br/>
&#160;&#160;<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41abe9f56cf0f8a9bd27c12f4663797e853">SDB_LIST_COLLECTIONS</a>, 
<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41ab31ba5691c0b587d313e2c667dd4bdd5">SDB_LIST_COLLECTIONSPACES</a>, 
<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41a0aef36e5875efb0801c5a37ed8bdff72">SDB_LIST_STORAGEUNITS</a>, 
<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41a15d2d4d1888797d33f7cf23c476d9c1f">SDB_LIST_GROUPS</a>, 
<br/>
&#160;&#160;<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41a232c5caab007abff5e19bae6906bf198">SDB_LIST_STOREPROCEDURES</a>, 
<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41a3ebeef2822a556abf2bd4cf1bc67fb7d">SDB_LIST_DOMAINS</a>, 
<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41aac85981cee14b8fed1bd829668f97a56">SDB_LIST_TASKS</a>, 
<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41ac37d213d9a8f24931c51512990762855">SDB_LIST_CS_IN_DOMAIN</a>, 
<br/>
&#160;&#160;<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41a5f731c52f01bcceef04125169c64cd9c">SDB_LIST_CL_IN_DOMAIN</a>, 
<a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41a90878f9cc04c1059b2abb0c9cbb4af2f">SDB_LIST_END</a>
<br/>
 }</td></tr>
<tr class="separator:a64fae029b89fcfd99538e07e790abf41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab325438708db06790ad8bc61f3ab9990"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ab325438708db06790ad8bc61f3ab9990">_SDB_LOB_OPEN_MODE</a> { <a class="el" href="client_8h.html#ab325438708db06790ad8bc61f3ab9990a3d615de5227b528e3d0f1ec2f30a654d">SDB_LOB_CREATEONLY</a> = 0x00000001, 
<a class="el" href="client_8h.html#ab325438708db06790ad8bc61f3ab9990a933574507f86ae84dc2e8c8eee2e3c5b">SDB_LOB_READ</a> = 0x00000004
 }</td></tr>
<tr class="separator:ab325438708db06790ad8bc61f3ab9990"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af77505dd6aeb8e9158f66f01f60ba37a"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#af77505dd6aeb8e9158f66f01f60ba37a">_SDB_LOB_SEEK</a> { <a class="el" href="client_8h.html#af77505dd6aeb8e9158f66f01f60ba37aafec176c8b54770ddbe02a20167f6ac60">SDB_LOB_SEEK_SET</a> = 0, 
<a class="el" href="client_8h.html#af77505dd6aeb8e9158f66f01f60ba37aabc01f3f0d8f8ae95d519854301181e9b">SDB_LOB_SEEK_CUR</a>, 
<a class="el" href="client_8h.html#af77505dd6aeb8e9158f66f01f60ba37aaa13ce8e7163da3d6f35842ec5946e8f2">SDB_LOB_SEEK_END</a>
 }</td></tr>
<tr class="separator:af77505dd6aeb8e9158f66f01f60ba37a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a46b76f04cc409c570827ef801f4073d6"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a46b76f04cc409c570827ef801f4073d6">sdbConnect</a> (const CHAR *pHostName, const CHAR *pServiceName, const CHAR *pUsrName, const CHAR *pPasswd, sdbConnectionHandle *handle)</td></tr>
<tr class="memdesc:a46b76f04cc409c570827ef801f4073d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connect to database.  <a href="#a46b76f04cc409c570827ef801f4073d6"></a><br/></td></tr>
<tr class="separator:a46b76f04cc409c570827ef801f4073d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdc94c5daa2f681d93b4c17437451464"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#afdc94c5daa2f681d93b4c17437451464">sdbConnect1</a> (const CHAR **pConnAddrs, INT32 arrSize, const CHAR *pUsrName, const CHAR *pPasswd, sdbConnectionHandle *handle)</td></tr>
<tr class="memdesc:afdc94c5daa2f681d93b4c17437451464"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connect to database used a random valid address in the array.  <a href="#afdc94c5daa2f681d93b4c17437451464"></a><br/></td></tr>
<tr class="separator:afdc94c5daa2f681d93b4c17437451464"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b6ee0ada5b847277ccdae9d7c6da371"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a1b6ee0ada5b847277ccdae9d7c6da371">sdbDisconnect</a> (sdbConnectionHandle handle)</td></tr>
<tr class="memdesc:a1b6ee0ada5b847277ccdae9d7c6da371"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disconnect to database.  <a href="#a1b6ee0ada5b847277ccdae9d7c6da371"></a><br/></td></tr>
<tr class="separator:a1b6ee0ada5b847277ccdae9d7c6da371"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24b519519d11fcfb416addd078404981"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a24b519519d11fcfb416addd078404981">sdbCreateUsr</a> (sdbConnectionHandle cHandle, const CHAR *pUsrName, const CHAR *pPasswd)</td></tr>
<tr class="memdesc:a24b519519d11fcfb416addd078404981"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an account.  <a href="#a24b519519d11fcfb416addd078404981"></a><br/></td></tr>
<tr class="separator:a24b519519d11fcfb416addd078404981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a817ec7acf875dd9393773418917bb6be"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a817ec7acf875dd9393773418917bb6be">sdbRemoveUsr</a> (sdbConnectionHandle cHandle, const CHAR *pUsrName, const CHAR *pPasswd)</td></tr>
<tr class="memdesc:a817ec7acf875dd9393773418917bb6be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Delete an account.  <a href="#a817ec7acf875dd9393773418917bb6be"></a><br/></td></tr>
<tr class="separator:a817ec7acf875dd9393773418917bb6be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaeff788b930df93dda0e736fbf79f034"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aaeff788b930df93dda0e736fbf79f034">sdbGetDataBlocks</a> (sdbCollectionHandle cHandle, bson *condition, bson *select, bson *orderBy, bson *hint, INT64 numToSkip, INT64 numToReturn, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:aaeff788b930df93dda0e736fbf79f034"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the data blocks' infomation for concurrent query.  <a href="#aaeff788b930df93dda0e736fbf79f034"></a><br/></td></tr>
<tr class="separator:aaeff788b930df93dda0e736fbf79f034"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97987a147b1f95ba874d2811897ce68e"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a97987a147b1f95ba874d2811897ce68e">sdbGetQueryMeta</a> (sdbCollectionHandle cHandle, bson *condition, bson *orderBy, bson *hint, INT64 numToSkip, INT64 numToReturn, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:a97987a147b1f95ba874d2811897ce68e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the index blocks' or data blocks' infomations for concurrent query.  <a href="#a97987a147b1f95ba874d2811897ce68e"></a><br/></td></tr>
<tr class="separator:a97987a147b1f95ba874d2811897ce68e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f78763177713c1d33c48a19e299620d"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a8f78763177713c1d33c48a19e299620d">sdbGetSnapshot</a> (sdbConnectionHandle cHandle, INT32 snapType, bson *condition, bson *selector, bson *orderBy, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:a8f78763177713c1d33c48a19e299620d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the snapshot.  <a href="#a8f78763177713c1d33c48a19e299620d"></a><br/></td></tr>
<tr class="separator:a8f78763177713c1d33c48a19e299620d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84b96ce32fe1cb77aab5d2e0548cdcd8"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a84b96ce32fe1cb77aab5d2e0548cdcd8">sdbResetSnapshot</a> (sdbConnectionHandle cHandle, bson *condition)</td></tr>
<tr class="memdesc:a84b96ce32fe1cb77aab5d2e0548cdcd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset the snapshot.  <a href="#a84b96ce32fe1cb77aab5d2e0548cdcd8"></a><br/></td></tr>
<tr class="separator:a84b96ce32fe1cb77aab5d2e0548cdcd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae94493815e240596b22abd310c19f366"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ae94493815e240596b22abd310c19f366">sdbTraceStart</a> (sdbConnectionHandle cHandle, UINT32 traceBufferSize, CHAR *component, CHAR *breakPoint)</td></tr>
<tr class="memdesc:ae94493815e240596b22abd310c19f366"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start trace with given trace buffer size and component list.  <a href="#ae94493815e240596b22abd310c19f366"></a><br/></td></tr>
<tr class="separator:ae94493815e240596b22abd310c19f366"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74365c8b08d4c2ff869c3bf7fbc7b0f6"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a74365c8b08d4c2ff869c3bf7fbc7b0f6">sdbTraceResume</a> (sdbConnectionHandle cHandle)</td></tr>
<tr class="memdesc:a74365c8b08d4c2ff869c3bf7fbc7b0f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resume trace.  <a href="#a74365c8b08d4c2ff869c3bf7fbc7b0f6"></a><br/></td></tr>
<tr class="separator:a74365c8b08d4c2ff869c3bf7fbc7b0f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa749db8aae32173840201f1882bde6b"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aaa749db8aae32173840201f1882bde6b">sdbTraceStop</a> (sdbConnectionHandle cHandle, const CHAR *pDumpFileName)</td></tr>
<tr class="memdesc:aaa749db8aae32173840201f1882bde6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop trace and dump into file.  <a href="#aaa749db8aae32173840201f1882bde6b"></a><br/></td></tr>
<tr class="separator:aaa749db8aae32173840201f1882bde6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25ddd54c0f87c9764777e609add98289"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a25ddd54c0f87c9764777e609add98289">sdbTraceStatus</a> (sdbConnectionHandle cHandle, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:a25ddd54c0f87c9764777e609add98289"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current status for trace.  <a href="#a25ddd54c0f87c9764777e609add98289"></a><br/></td></tr>
<tr class="separator:a25ddd54c0f87c9764777e609add98289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8626be21460510bba019286d454daf69"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a8626be21460510bba019286d454daf69">sdbGetList</a> (sdbConnectionHandle cHandle, INT32 listType, bson *condition, bson *selector, bson *orderBy, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:a8626be21460510bba019286d454daf69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the specified list.  <a href="#a8626be21460510bba019286d454daf69"></a><br/></td></tr>
<tr class="separator:a8626be21460510bba019286d454daf69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab971237aa48c3d373d8a553848bd8060"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ab971237aa48c3d373d8a553848bd8060">sdbGetCollection</a> (sdbConnectionHandle cHandle, const CHAR *pCollectionFullName, sdbCollectionHandle *handle)</td></tr>
<tr class="memdesc:ab971237aa48c3d373d8a553848bd8060"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the specified collection.  <a href="#ab971237aa48c3d373d8a553848bd8060"></a><br/></td></tr>
<tr class="separator:ab971237aa48c3d373d8a553848bd8060"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfd02cc33e7dcc38d53c8c06f0b43e99"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#adfd02cc33e7dcc38d53c8c06f0b43e99">sdbGetCollectionSpace</a> (sdbConnectionHandle cHandle, const CHAR *pCollectionSpaceName, sdbCSHandle *handle)</td></tr>
<tr class="memdesc:adfd02cc33e7dcc38d53c8c06f0b43e99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the specified collection space.  <a href="#adfd02cc33e7dcc38d53c8c06f0b43e99"></a><br/></td></tr>
<tr class="separator:adfd02cc33e7dcc38d53c8c06f0b43e99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade4f8173f8f85f0d2b635920f4228c01"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ade4f8173f8f85f0d2b635920f4228c01">sdbGetReplicaGroup</a> (sdbConnectionHandle cHandle, const CHAR *pShardName, sdbReplicaGroupHandle *handle)</td></tr>
<tr class="memdesc:ade4f8173f8f85f0d2b635920f4228c01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the specified shard.  <a href="#ade4f8173f8f85f0d2b635920f4228c01"></a><br/></td></tr>
<tr class="separator:ade4f8173f8f85f0d2b635920f4228c01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5a36ce99ec6b67e3bc1ecd9ca91651f"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#af5a36ce99ec6b67e3bc1ecd9ca91651f">sdbGetReplicaGroup1</a> (sdbConnectionHandle cHandle, UINT32 id, sdbReplicaGroupHandle *handle)</td></tr>
<tr class="memdesc:af5a36ce99ec6b67e3bc1ecd9ca91651f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the specified shard.  <a href="#af5a36ce99ec6b67e3bc1ecd9ca91651f"></a><br/></td></tr>
<tr class="separator:af5a36ce99ec6b67e3bc1ecd9ca91651f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38e5ec26f26caecd771f6626956e28df"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a38e5ec26f26caecd771f6626956e28df">sdbGetReplicaGroupName</a> (sdbReplicaGroupHandle cHandle, CHAR **ppShardName)</td></tr>
<tr class="memdesc:a38e5ec26f26caecd771f6626956e28df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the specified shard name.  <a href="#a38e5ec26f26caecd771f6626956e28df"></a><br/></td></tr>
<tr class="separator:a38e5ec26f26caecd771f6626956e28df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad47c76c04466fa7329c45c1eedad710"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT BOOLEAN&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aad47c76c04466fa7329c45c1eedad710">sdbIsReplicaGroupCatalog</a> (sdbReplicaGroupHandle cHandle)</td></tr>
<tr class="memdesc:aad47c76c04466fa7329c45c1eedad710"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test whether the specified shard is catalog.  <a href="#aad47c76c04466fa7329c45c1eedad710"></a><br/></td></tr>
<tr class="separator:aad47c76c04466fa7329c45c1eedad710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dcd0cb6d5b03d1ba0c3c4ff49d34269"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a6dcd0cb6d5b03d1ba0c3c4ff49d34269">sdbCreateCollectionSpace</a> (sdbConnectionHandle cHandle, const CHAR *pCollectionSpaceName, INT32 iPageSize, sdbCSHandle *handle)</td></tr>
<tr class="memdesc:a6dcd0cb6d5b03d1ba0c3c4ff49d34269"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the specified collection space.  <a href="#a6dcd0cb6d5b03d1ba0c3c4ff49d34269"></a><br/></td></tr>
<tr class="separator:a6dcd0cb6d5b03d1ba0c3c4ff49d34269"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d091041d635a6bd730ff2ac2d19998e"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a2d091041d635a6bd730ff2ac2d19998e">sdbCreateCollectionSpaceV2</a> (sdbConnectionHandle cHandle, const CHAR *pCollectionSpaceName, bson *options, sdbCSHandle *handle)</td></tr>
<tr class="memdesc:a2d091041d635a6bd730ff2ac2d19998e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the specified collection space.  <a href="#a2d091041d635a6bd730ff2ac2d19998e"></a><br/></td></tr>
<tr class="separator:a2d091041d635a6bd730ff2ac2d19998e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdf033199f44a300b00eb0ffa8e9ca7e"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#acdf033199f44a300b00eb0ffa8e9ca7e">sdbDropCollectionSpace</a> (sdbConnectionHandle cHandle, const CHAR *pCollectionSpaceName)</td></tr>
<tr class="memdesc:acdf033199f44a300b00eb0ffa8e9ca7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Drop the specified collection space.  <a href="#acdf033199f44a300b00eb0ffa8e9ca7e"></a><br/></td></tr>
<tr class="separator:acdf033199f44a300b00eb0ffa8e9ca7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4d5837af5f9857e386d17c612395061"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ae4d5837af5f9857e386d17c612395061">sdbCreateReplicaGroup</a> (sdbConnectionHandle cHandle, const CHAR *pShardName, sdbReplicaGroupHandle *handle)</td></tr>
<tr class="memdesc:ae4d5837af5f9857e386d17c612395061"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the specified shard.  <a href="#ae4d5837af5f9857e386d17c612395061"></a><br/></td></tr>
<tr class="separator:ae4d5837af5f9857e386d17c612395061"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6981d1af29ed418b36c0af64b77804fd"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a6981d1af29ed418b36c0af64b77804fd">sdbRemoveReplicaGroup</a> (sdbConnectionHandle cHandle, const CHAR *pShardName)</td></tr>
<tr class="memdesc:a6981d1af29ed418b36c0af64b77804fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove the specified shard.  <a href="#a6981d1af29ed418b36c0af64b77804fd"></a><br/></td></tr>
<tr class="separator:a6981d1af29ed418b36c0af64b77804fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bdab5caaed8b3139b0ad2add6e1f8ed"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a1bdab5caaed8b3139b0ad2add6e1f8ed">sdbStartReplicaGroup</a> (sdbReplicaGroupHandle cHandle)</td></tr>
<tr class="memdesc:a1bdab5caaed8b3139b0ad2add6e1f8ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start and activate the specified shard.  <a href="#a1bdab5caaed8b3139b0ad2add6e1f8ed"></a><br/></td></tr>
<tr class="separator:a1bdab5caaed8b3139b0ad2add6e1f8ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3eace1c57b76f33e4fb190654091c6c2"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a3eace1c57b76f33e4fb190654091c6c2">sdbGetNodeMaster</a> (sdbReplicaGroupHandle cHandle, sdbNodeHandle *handle)</td></tr>
<tr class="memdesc:a3eace1c57b76f33e4fb190654091c6c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the master node of the specified shard.  <a href="#a3eace1c57b76f33e4fb190654091c6c2"></a><br/></td></tr>
<tr class="separator:a3eace1c57b76f33e4fb190654091c6c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b1fc1ba88e7d9bd793d4e5af4ad7c11"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a1b1fc1ba88e7d9bd793d4e5af4ad7c11">sdbGetNodeSlave</a> (sdbReplicaGroupHandle cHandle, sdbNodeHandle *handle)</td></tr>
<tr class="memdesc:a1b1fc1ba88e7d9bd793d4e5af4ad7c11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get one of slave node of the specified shard, if no slave exists then get master.  <a href="#a1b1fc1ba88e7d9bd793d4e5af4ad7c11"></a><br/></td></tr>
<tr class="separator:a1b1fc1ba88e7d9bd793d4e5af4ad7c11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cd5c07a110bcdce3fcad7da84d88738"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a0cd5c07a110bcdce3fcad7da84d88738">sdbGetNodeByName</a> (sdbReplicaGroupHandle cHandle, const CHAR *pNodeName, sdbNodeHandle *handle)</td></tr>
<tr class="memdesc:a0cd5c07a110bcdce3fcad7da84d88738"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the node from the specified shard.  <a href="#a0cd5c07a110bcdce3fcad7da84d88738"></a><br/></td></tr>
<tr class="separator:a0cd5c07a110bcdce3fcad7da84d88738"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac1300aec73c81c8f57163ffe505a312"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aac1300aec73c81c8f57163ffe505a312">sdbGetNodeByHost</a> (sdbReplicaGroupHandle cHandle, const CHAR *pHostName, const CHAR *pServiceName, sdbNodeHandle *handle)</td></tr>
<tr class="memdesc:aac1300aec73c81c8f57163ffe505a312"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the node from the specified shard.  <a href="#aac1300aec73c81c8f57163ffe505a312"></a><br/></td></tr>
<tr class="separator:aac1300aec73c81c8f57163ffe505a312"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad4b783665b37aadf01a92a48fd9b415"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aad4b783665b37aadf01a92a48fd9b415">sdbGetNodeAddr</a> (sdbNodeHandle cHandle, const CHAR **ppHostName, const CHAR **ppServiceName, const CHAR **ppNodeName, INT32 *pNodeID)</td></tr>
<tr class="memdesc:aad4b783665b37aadf01a92a48fd9b415"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the host and service name for the specified node.  <a href="#aad4b783665b37aadf01a92a48fd9b415"></a><br/></td></tr>
<tr class="separator:aad4b783665b37aadf01a92a48fd9b415"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaac01736049b5416e5f713a18d929494"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aaac01736049b5416e5f713a18d929494">sdbStartNode</a> (sdbNodeHandle cHandle)</td></tr>
<tr class="memdesc:aaac01736049b5416e5f713a18d929494"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start up the specified node.  <a href="#aaac01736049b5416e5f713a18d929494"></a><br/></td></tr>
<tr class="separator:aaac01736049b5416e5f713a18d929494"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa939e94c8f7d14f6db9ea71b9355f0f4"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aa939e94c8f7d14f6db9ea71b9355f0f4">sdbStopNode</a> (sdbNodeHandle cHandle)</td></tr>
<tr class="memdesc:aa939e94c8f7d14f6db9ea71b9355f0f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop the specified node.  <a href="#aa939e94c8f7d14f6db9ea71b9355f0f4"></a><br/></td></tr>
<tr class="separator:aa939e94c8f7d14f6db9ea71b9355f0f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae64d2aea7f111bdc10cae164fe2adeaf"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ae64d2aea7f111bdc10cae164fe2adeaf">sdbStopReplicaGroup</a> (sdbReplicaGroupHandle cHandle)</td></tr>
<tr class="memdesc:ae64d2aea7f111bdc10cae164fe2adeaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop the specified shard.  <a href="#ae64d2aea7f111bdc10cae164fe2adeaf"></a><br/></td></tr>
<tr class="separator:ae64d2aea7f111bdc10cae164fe2adeaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0759323c27fe53a47c58ff6ee3dc81e3"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a0759323c27fe53a47c58ff6ee3dc81e3">sdbCreateReplicaCataGroup</a> (sdbConnectionHandle cHandle, const CHAR *pHostName, const CHAR *pServiceName, const CHAR *pDatabasePath, bson *configure)</td></tr>
<tr class="memdesc:a0759323c27fe53a47c58ff6ee3dc81e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a catalog shard.  <a href="#a0759323c27fe53a47c58ff6ee3dc81e3"></a><br/></td></tr>
<tr class="separator:a0759323c27fe53a47c58ff6ee3dc81e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e31cbaffe6f067797ccd0091a920d92"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a2e31cbaffe6f067797ccd0091a920d92">sdbCreateNode</a> (sdbReplicaGroupHandle cHandle, const CHAR *pHostName, const CHAR *pServiceName, const CHAR *pDatabasePath, bson *configure)</td></tr>
<tr class="memdesc:a2e31cbaffe6f067797ccd0091a920d92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create node in a given shard.  <a href="#a2e31cbaffe6f067797ccd0091a920d92"></a><br/></td></tr>
<tr class="separator:a2e31cbaffe6f067797ccd0091a920d92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a723476a2f912a185156d461e3a52a9bd"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a723476a2f912a185156d461e3a52a9bd">sdbRemoveNode</a> (sdbReplicaGroupHandle cHandle, const CHAR *pHostName, const CHAR *pServiceName, bson *configure)</td></tr>
<tr class="memdesc:a723476a2f912a185156d461e3a52a9bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">remove node in a given shard  <a href="#a723476a2f912a185156d461e3a52a9bd"></a><br/></td></tr>
<tr class="separator:a723476a2f912a185156d461e3a52a9bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb311f4062f247f47801ddd13a83a342"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#acb311f4062f247f47801ddd13a83a342">sdbListCollectionSpaces</a> (sdbConnectionHandle cHandle, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:acb311f4062f247f47801ddd13a83a342"><td class="mdescLeft">&#160;</td><td class="mdescRight">List all collection space of current database(include temporary collection space)  <a href="#acb311f4062f247f47801ddd13a83a342"></a><br/></td></tr>
<tr class="separator:acb311f4062f247f47801ddd13a83a342"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17a21e8ec710429171929ed2b55a0f96"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a17a21e8ec710429171929ed2b55a0f96">sdbListCollections</a> (sdbConnectionHandle cHandle, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:a17a21e8ec710429171929ed2b55a0f96"><td class="mdescLeft">&#160;</td><td class="mdescRight">List all collection of current database(not include temporary collection of temporary collection space)  <a href="#a17a21e8ec710429171929ed2b55a0f96"></a><br/></td></tr>
<tr class="separator:a17a21e8ec710429171929ed2b55a0f96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed46f4108418dfe2bc77cc4729f3d985"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aed46f4108418dfe2bc77cc4729f3d985">sdbListReplicaGroups</a> (sdbConnectionHandle cHandle, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:aed46f4108418dfe2bc77cc4729f3d985"><td class="mdescLeft">&#160;</td><td class="mdescRight">List all shards of current database.  <a href="#aed46f4108418dfe2bc77cc4729f3d985"></a><br/></td></tr>
<tr class="separator:aed46f4108418dfe2bc77cc4729f3d985"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f3ffe9a71e0cc872a4025b1a0b80d84"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a6f3ffe9a71e0cc872a4025b1a0b80d84">sdbFlushConfigure</a> (sdbConnectionHandle cHandle, bson *options)</td></tr>
<tr class="memdesc:a6f3ffe9a71e0cc872a4025b1a0b80d84"><td class="mdescLeft">&#160;</td><td class="mdescRight">flush the options to configure file.  <a href="#a6f3ffe9a71e0cc872a4025b1a0b80d84"></a><br/></td></tr>
<tr class="separator:a6f3ffe9a71e0cc872a4025b1a0b80d84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad46f5a3cfc88fa71108494861f0d0f3d"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ad46f5a3cfc88fa71108494861f0d0f3d">sdbCrtJSProcedure</a> (sdbConnectionHandle cHandle, const CHAR *code)</td></tr>
<tr class="memdesc:ad46f5a3cfc88fa71108494861f0d0f3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">create a store procedure.  <a href="#ad46f5a3cfc88fa71108494861f0d0f3d"></a><br/></td></tr>
<tr class="separator:ad46f5a3cfc88fa71108494861f0d0f3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ec17406ed6e93c68777a02f8004db2b"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a8ec17406ed6e93c68777a02f8004db2b">sdbRmProcedure</a> (sdbConnectionHandle cHandle, const CHAR *spName)</td></tr>
<tr class="memdesc:a8ec17406ed6e93c68777a02f8004db2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">remove a store procedure.  <a href="#a8ec17406ed6e93c68777a02f8004db2b"></a><br/></td></tr>
<tr class="separator:a8ec17406ed6e93c68777a02f8004db2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad57bf123984366e3bf51c518a323dc8f"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ad57bf123984366e3bf51c518a323dc8f">sdbListProcedures</a> (sdbConnectionHandle cHandle, bson *condition, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:ad57bf123984366e3bf51c518a323dc8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">List store procedures.  <a href="#ad57bf123984366e3bf51c518a323dc8f"></a><br/></td></tr>
<tr class="separator:ad57bf123984366e3bf51c518a323dc8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8afc8a8992be36a495cb5146f286eb5"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ab8afc8a8992be36a495cb5146f286eb5">sdbEvalJS</a> (sdbConnectionHandle cHandle, const CHAR *code, SDB_SPD_RES_TYPE *type, sdbCursorHandle *handle, bson *errmsg)</td></tr>
<tr class="memdesc:ab8afc8a8992be36a495cb5146f286eb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Eval a func. \ type is declared in spd.h. see SDB_FMP_RES_TYPE.  <a href="#ab8afc8a8992be36a495cb5146f286eb5"></a><br/></td></tr>
<tr class="separator:ab8afc8a8992be36a495cb5146f286eb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f4e5edd958ca1e1accceaaebbe0fab9"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a3f4e5edd958ca1e1accceaaebbe0fab9">sdbGetCollection1</a> (sdbCSHandle cHandle, const CHAR *pCollectionName, sdbCollectionHandle *handle)</td></tr>
<tr class="memdesc:a3f4e5edd958ca1e1accceaaebbe0fab9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the specified collection of current collection space.  <a href="#a3f4e5edd958ca1e1accceaaebbe0fab9"></a><br/></td></tr>
<tr class="separator:a3f4e5edd958ca1e1accceaaebbe0fab9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae18d74861837f51a856b86b8f1d7cca3"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ae18d74861837f51a856b86b8f1d7cca3">sdbCreateCollection</a> (sdbCSHandle cHandle, const CHAR *pCollectionName, sdbCollectionHandle *handle)</td></tr>
<tr class="memdesc:ae18d74861837f51a856b86b8f1d7cca3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the specified collection in current collection space This function creates a non-sharded collection with default replsize.  <a href="#ae18d74861837f51a856b86b8f1d7cca3"></a><br/></td></tr>
<tr class="separator:ae18d74861837f51a856b86b8f1d7cca3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5104603247e71e4df8e8a1cbdb82a32b"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a5104603247e71e4df8e8a1cbdb82a32b">sdbCreateCollection1</a> (sdbCSHandle cHandle, const CHAR *pCollectionName, bson *options, sdbCollectionHandle *handle)</td></tr>
<tr class="memdesc:a5104603247e71e4df8e8a1cbdb82a32b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the specified collection in current collection space.  <a href="#a5104603247e71e4df8e8a1cbdb82a32b"></a><br/></td></tr>
<tr class="separator:a5104603247e71e4df8e8a1cbdb82a32b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5645263c7ff024bab0eae498596f8221"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a5645263c7ff024bab0eae498596f8221">sdbAlterCollection</a> (sdbCollectionHandle cHandle, bson *options)</td></tr>
<tr class="memdesc:a5645263c7ff024bab0eae498596f8221"><td class="mdescLeft">&#160;</td><td class="mdescRight">Alter the specified collection.  <a href="#a5645263c7ff024bab0eae498596f8221"></a><br/></td></tr>
<tr class="separator:a5645263c7ff024bab0eae498596f8221"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4422c40ed5213c789bdbadcdc9d48e0c"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a4422c40ed5213c789bdbadcdc9d48e0c">sdbDropCollection</a> (sdbCSHandle cHandle, const CHAR *pCollectionName)</td></tr>
<tr class="memdesc:a4422c40ed5213c789bdbadcdc9d48e0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Drop the specified collection in current collection space.  <a href="#a4422c40ed5213c789bdbadcdc9d48e0c"></a><br/></td></tr>
<tr class="separator:a4422c40ed5213c789bdbadcdc9d48e0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ca043778df737ec3cf43d260853435a"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a3ca043778df737ec3cf43d260853435a">sdbGetCSName</a> (sdbCSHandle cHandle, CHAR **ppCSName)</td></tr>
<tr class="memdesc:a3ca043778df737ec3cf43d260853435a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the specified collection space name.  <a href="#a3ca043778df737ec3cf43d260853435a"></a><br/></td></tr>
<tr class="separator:a3ca043778df737ec3cf43d260853435a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdd8024467bb9cebeb56ed0860a900ef"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#afdd8024467bb9cebeb56ed0860a900ef">sdbSplitCollection</a> (sdbCollectionHandle cHandle, const CHAR *pSourceShard, const CHAR *pTargetShard, const bson *pSplitCondition, const bson *pSplitEndCondition)</td></tr>
<tr class="memdesc:afdd8024467bb9cebeb56ed0860a900ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Split the specified collection from source shard to target by range.  <a href="#afdd8024467bb9cebeb56ed0860a900ef"></a><br/></td></tr>
<tr class="separator:afdd8024467bb9cebeb56ed0860a900ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98715ae6dbc5cecc9034319f349f8888"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a98715ae6dbc5cecc9034319f349f8888">sdbSplitCLAsync</a> (sdbCollectionHandle cHandle, const CHAR *pSourceShard, const CHAR *pTargetShard, const bson *pSplitCondition, const bson *pSplitEndCondition, SINT64 *taskID)</td></tr>
<tr class="memdesc:a98715ae6dbc5cecc9034319f349f8888"><td class="mdescLeft">&#160;</td><td class="mdescRight">Split the specified collection from source shard to target by range.  <a href="#a98715ae6dbc5cecc9034319f349f8888"></a><br/></td></tr>
<tr class="separator:a98715ae6dbc5cecc9034319f349f8888"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6edac6a62e5cb478bb9ccf336885fadc"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a6edac6a62e5cb478bb9ccf336885fadc">sdbSplitCollectionByPercent</a> (sdbCollectionHandle cHandle, const CHAR *pSourceShard, const CHAR *pTargetShard, FLOAT64 percent)</td></tr>
<tr class="memdesc:a6edac6a62e5cb478bb9ccf336885fadc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Split the specified collection from source shard to target by percent.  <a href="#a6edac6a62e5cb478bb9ccf336885fadc"></a><br/></td></tr>
<tr class="separator:a6edac6a62e5cb478bb9ccf336885fadc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e360779023d86ccfc388d853a1b9018"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a9e360779023d86ccfc388d853a1b9018">sdbSplitCLByPercentAsync</a> (sdbCollectionHandle cHandle, const CHAR *pSourceShard, const CHAR *pTargetShard, FLOAT64 percent, SINT64 *taskID)</td></tr>
<tr class="memdesc:a9e360779023d86ccfc388d853a1b9018"><td class="mdescLeft">&#160;</td><td class="mdescRight">Split the specified collection from source shard to target by percent.  <a href="#a9e360779023d86ccfc388d853a1b9018"></a><br/></td></tr>
<tr class="separator:a9e360779023d86ccfc388d853a1b9018"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e6abb2fb667c4665b3ed9f123bc65f4"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a1e6abb2fb667c4665b3ed9f123bc65f4">sdbCreateIndex</a> (sdbCollectionHandle cHandle, bson *indexDef, const CHAR *pIndexName, BOOLEAN isUnique, BOOLEAN isEnforced)</td></tr>
<tr class="memdesc:a1e6abb2fb667c4665b3ed9f123bc65f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the index in current collection.  <a href="#a1e6abb2fb667c4665b3ed9f123bc65f4"></a><br/></td></tr>
<tr class="separator:a1e6abb2fb667c4665b3ed9f123bc65f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2b70e43cec2f47e2ee197f22b643cf2"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ac2b70e43cec2f47e2ee197f22b643cf2">sdbGetIndexes</a> (sdbCollectionHandle cHandle, const CHAR *pIndexName, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:ac2b70e43cec2f47e2ee197f22b643cf2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get all of or one of the indexes in current collection.  <a href="#ac2b70e43cec2f47e2ee197f22b643cf2"></a><br/></td></tr>
<tr class="separator:ac2b70e43cec2f47e2ee197f22b643cf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bd708dddfeba28c21983b0aece87706"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a1bd708dddfeba28c21983b0aece87706">sdbDropIndex</a> (sdbCollectionHandle cHandle, const CHAR *pIndexName)</td></tr>
<tr class="memdesc:a1bd708dddfeba28c21983b0aece87706"><td class="mdescLeft">&#160;</td><td class="mdescRight">Drop the index in current collection.  <a href="#a1bd708dddfeba28c21983b0aece87706"></a><br/></td></tr>
<tr class="separator:a1bd708dddfeba28c21983b0aece87706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53c12a745313ebba4fe775f9e9e4d55f"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a53c12a745313ebba4fe775f9e9e4d55f">sdbGetCount</a> (sdbCollectionHandle cHandle, bson *condition, SINT64 *count)</td></tr>
<tr class="memdesc:a53c12a745313ebba4fe775f9e9e4d55f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the count of documents in specified collection.  <a href="#a53c12a745313ebba4fe775f9e9e4d55f"></a><br/></td></tr>
<tr class="separator:a53c12a745313ebba4fe775f9e9e4d55f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fec2af13aa58dd072b613e0dbb13013"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a9fec2af13aa58dd072b613e0dbb13013">sdbGetCount1</a> (sdbCollectionHandle cHandle, bson *condition, bson *hint, SINT64 *count)</td></tr>
<tr class="memdesc:a9fec2af13aa58dd072b613e0dbb13013"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the count of documents in specified collection.  <a href="#a9fec2af13aa58dd072b613e0dbb13013"></a><br/></td></tr>
<tr class="separator:a9fec2af13aa58dd072b613e0dbb13013"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91b2c3ee458cf02dfa4b33b873f6c4b5"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a91b2c3ee458cf02dfa4b33b873f6c4b5">sdbInsert</a> (sdbCollectionHandle cHandle, bson *obj)</td></tr>
<tr class="memdesc:a91b2c3ee458cf02dfa4b33b873f6c4b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Insert a bson object into current collection.  <a href="#a91b2c3ee458cf02dfa4b33b873f6c4b5"></a><br/></td></tr>
<tr class="separator:a91b2c3ee458cf02dfa4b33b873f6c4b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a796324abbb96cb8a2edd6bb28d9868bb"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a796324abbb96cb8a2edd6bb28d9868bb">sdbInsert1</a> (sdbCollectionHandle cHandle, bson *obj, bson_iterator *id)</td></tr>
<tr class="memdesc:a796324abbb96cb8a2edd6bb28d9868bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Insert a bson object into current collection.  <a href="#a796324abbb96cb8a2edd6bb28d9868bb"></a><br/></td></tr>
<tr class="separator:a796324abbb96cb8a2edd6bb28d9868bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42e4bc8674da51ab5459fdf84e5c02b3"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a42e4bc8674da51ab5459fdf84e5c02b3">sdbBulkInsert</a> (sdbCollectionHandle cHandle, SINT32 flags, bson **obj, SINT32 num)</td></tr>
<tr class="memdesc:a42e4bc8674da51ab5459fdf84e5c02b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Insert a bulk of bson objects into current collection.  <a href="#a42e4bc8674da51ab5459fdf84e5c02b3"></a><br/></td></tr>
<tr class="separator:a42e4bc8674da51ab5459fdf84e5c02b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc06f96d5957884294f2ba0da4d810e4"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#adc06f96d5957884294f2ba0da4d810e4">sdbUpdate</a> (sdbCollectionHandle cHandle, bson *rule, bson *condition, bson *hint)</td></tr>
<tr class="memdesc:adc06f96d5957884294f2ba0da4d810e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the matching documents in current collection.  <a href="#adc06f96d5957884294f2ba0da4d810e4"></a><br/></td></tr>
<tr class="separator:adc06f96d5957884294f2ba0da4d810e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b63de6126ba54457ea7476a036e8869"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a9b63de6126ba54457ea7476a036e8869">sdbUpsert</a> (sdbCollectionHandle cHandle, bson *rule, bson *condition, bson *hint)</td></tr>
<tr class="memdesc:a9b63de6126ba54457ea7476a036e8869"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the matching documents in current collection, insert if no matching.  <a href="#a9b63de6126ba54457ea7476a036e8869"></a><br/></td></tr>
<tr class="separator:a9b63de6126ba54457ea7476a036e8869"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf027cb1e46bd11980da26cbf38d2b80"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#abf027cb1e46bd11980da26cbf38d2b80">sdbDelete</a> (sdbCollectionHandle cHandle, bson *condition, bson *hint)</td></tr>
<tr class="memdesc:abf027cb1e46bd11980da26cbf38d2b80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Delete the matching documents in current collection, never rollback if failed.  <a href="#abf027cb1e46bd11980da26cbf38d2b80"></a><br/></td></tr>
<tr class="separator:abf027cb1e46bd11980da26cbf38d2b80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f19793c0471593bbf4beb4722237f6c"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a9f19793c0471593bbf4beb4722237f6c">sdbQuery1</a> (sdbCollectionHandle cHandle, bson *condition, bson *select, bson *orderBy, bson *hint, INT64 numToSkip, INT64 numToReturn, INT32 flag, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:a9f19793c0471593bbf4beb4722237f6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the matching documents in current collection.  <a href="#a9f19793c0471593bbf4beb4722237f6c"></a><br/></td></tr>
<tr class="separator:a9f19793c0471593bbf4beb4722237f6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac440372f496d8d0998091549d80a3b76"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ac440372f496d8d0998091549d80a3b76">sdbQuery</a> (sdbCollectionHandle cHandle, bson *condition, bson *select, bson *orderBy, bson *hint, INT64 numToSkip, INT64 numToReturn, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:ac440372f496d8d0998091549d80a3b76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the matching documents in current collection.  <a href="#ac440372f496d8d0998091549d80a3b76"></a><br/></td></tr>
<tr class="separator:ac440372f496d8d0998091549d80a3b76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38c2547605239b6f0c5ba892b8f4ff6b"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a38c2547605239b6f0c5ba892b8f4ff6b">sdbExplain</a> (sdbCollectionHandle cHandle, bson *condition, bson *select, bson *orderBy, bson *hint, INT32 flags, INT64 numToSkip, INT64 numToReturn, bson *options, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:a38c2547605239b6f0c5ba892b8f4ff6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">get access plan of query  <a href="#a38c2547605239b6f0c5ba892b8f4ff6b"></a><br/></td></tr>
<tr class="separator:a38c2547605239b6f0c5ba892b8f4ff6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f51279ca4717bed0d1a3db9542eb95d"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a7f51279ca4717bed0d1a3db9542eb95d">sdbNext</a> (sdbCursorHandle cHandle, bson *obj)</td></tr>
<tr class="memdesc:a7f51279ca4717bed0d1a3db9542eb95d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the next document of current cursor, and move forward.  <a href="#a7f51279ca4717bed0d1a3db9542eb95d"></a><br/></td></tr>
<tr class="separator:a7f51279ca4717bed0d1a3db9542eb95d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1eacbd9fe97c4b5da544a13d45836c26"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a1eacbd9fe97c4b5da544a13d45836c26">sdbCurrent</a> (sdbCursorHandle cHandle, bson *obj)</td></tr>
<tr class="memdesc:a1eacbd9fe97c4b5da544a13d45836c26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the current document of cursor, and don't move.  <a href="#a1eacbd9fe97c4b5da544a13d45836c26"></a><br/></td></tr>
<tr class="separator:a1eacbd9fe97c4b5da544a13d45836c26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af300b292db92e2dd767f944d0201b1b8"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#af300b292db92e2dd767f944d0201b1b8">sdbCloseCursor</a> (sdbCursorHandle cHandle)</td></tr>
<tr class="memdesc:af300b292db92e2dd767f944d0201b1b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close the cursor's connection to database, we can't use this handle to get data again.  <a href="#af300b292db92e2dd767f944d0201b1b8"></a><br/></td></tr>
<tr class="separator:af300b292db92e2dd767f944d0201b1b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87a41e0e0c39372ad29e00a8a1c715ae"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a87a41e0e0c39372ad29e00a8a1c715ae">sdbCloseAllCursors</a> (sdbConnectionHandle cHandle)</td></tr>
<tr class="memdesc:a87a41e0e0c39372ad29e00a8a1c715ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close all the cursors in current thread, we can't use those cursors to get data anymore.  <a href="#a87a41e0e0c39372ad29e00a8a1c715ae"></a><br/></td></tr>
<tr class="separator:a87a41e0e0c39372ad29e00a8a1c715ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac645b3df9ee4252c360396c8094ac7c2"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ac645b3df9ee4252c360396c8094ac7c2">sdbExec</a> (sdbConnectionHandle cHandle, const CHAR *sql, sdbCursorHandle *result)</td></tr>
<tr class="memdesc:ac645b3df9ee4252c360396c8094ac7c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executing SQL command.  <a href="#ac645b3df9ee4252c360396c8094ac7c2"></a><br/></td></tr>
<tr class="separator:ac645b3df9ee4252c360396c8094ac7c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6f0d1b3b0cff7ca80ad738121c74395"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#af6f0d1b3b0cff7ca80ad738121c74395">sdbExecUpdate</a> (sdbConnectionHandle cHandle, const CHAR *sql)</td></tr>
<tr class="memdesc:af6f0d1b3b0cff7ca80ad738121c74395"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executing SQL command for updating.  <a href="#af6f0d1b3b0cff7ca80ad738121c74395"></a><br/></td></tr>
<tr class="separator:af6f0d1b3b0cff7ca80ad738121c74395"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cd033383bdfa72c7d5a41138f96ea87"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a7cd033383bdfa72c7d5a41138f96ea87">sdbTransactionBegin</a> (sdbConnectionHandle cHandle)</td></tr>
<tr class="memdesc:a7cd033383bdfa72c7d5a41138f96ea87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transaction begin.  <a href="#a7cd033383bdfa72c7d5a41138f96ea87"></a><br/></td></tr>
<tr class="separator:a7cd033383bdfa72c7d5a41138f96ea87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a115edc69ce14ef4dde88ac63089dbd02"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a115edc69ce14ef4dde88ac63089dbd02">sdbTransactionCommit</a> (sdbConnectionHandle cHandle)</td></tr>
<tr class="memdesc:a115edc69ce14ef4dde88ac63089dbd02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transaction commit.  <a href="#a115edc69ce14ef4dde88ac63089dbd02"></a><br/></td></tr>
<tr class="separator:a115edc69ce14ef4dde88ac63089dbd02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a299542497f6a905756c27b694348482b"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a299542497f6a905756c27b694348482b">sdbTransactionRollback</a> (sdbConnectionHandle cHandle)</td></tr>
<tr class="memdesc:a299542497f6a905756c27b694348482b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transaction rollback.  <a href="#a299542497f6a905756c27b694348482b"></a><br/></td></tr>
<tr class="separator:a299542497f6a905756c27b694348482b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03106641cb3c3cb077df3bfac8a9c135"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a03106641cb3c3cb077df3bfac8a9c135">sdbReleaseConnection</a> (sdbConnectionHandle cHandle)</td></tr>
<tr class="memdesc:a03106641cb3c3cb077df3bfac8a9c135"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release the database connection handle.  <a href="#a03106641cb3c3cb077df3bfac8a9c135"></a><br/></td></tr>
<tr class="separator:a03106641cb3c3cb077df3bfac8a9c135"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6a0f8fb1e63b52d9279fecec56dc495"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ae6a0f8fb1e63b52d9279fecec56dc495">sdbReleaseCollection</a> (sdbCollectionHandle cHandle)</td></tr>
<tr class="memdesc:ae6a0f8fb1e63b52d9279fecec56dc495"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release collection handle, the cursor handle of this collection will still available.  <a href="#ae6a0f8fb1e63b52d9279fecec56dc495"></a><br/></td></tr>
<tr class="separator:ae6a0f8fb1e63b52d9279fecec56dc495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4793b898ad8a8accfe099941f4a0b9a1"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a4793b898ad8a8accfe099941f4a0b9a1">sdbReleaseCS</a> (sdbCSHandle cHandle)</td></tr>
<tr class="memdesc:a4793b898ad8a8accfe099941f4a0b9a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release the collection space handle, the collecion and cursor handle of this collection space will still available.  <a href="#a4793b898ad8a8accfe099941f4a0b9a1"></a><br/></td></tr>
<tr class="separator:a4793b898ad8a8accfe099941f4a0b9a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77c5fe8bdc275da433c59c95773c783e"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a77c5fe8bdc275da433c59c95773c783e">sdbReleaseCursor</a> (sdbCursorHandle cHandle)</td></tr>
<tr class="memdesc:a77c5fe8bdc275da433c59c95773c783e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release the cursor handle.  <a href="#a77c5fe8bdc275da433c59c95773c783e"></a><br/></td></tr>
<tr class="separator:a77c5fe8bdc275da433c59c95773c783e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d460c17d6c3a21e7637c1b681801831"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a1d460c17d6c3a21e7637c1b681801831">sdbReleaseReplicaGroup</a> (sdbReplicaGroupHandle cHandle)</td></tr>
<tr class="memdesc:a1d460c17d6c3a21e7637c1b681801831"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release the shard handle.  <a href="#a1d460c17d6c3a21e7637c1b681801831"></a><br/></td></tr>
<tr class="separator:a1d460c17d6c3a21e7637c1b681801831"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b01999a1061ab7def7196f670201aec"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a9b01999a1061ab7def7196f670201aec">sdbReleaseNode</a> (sdbNodeHandle cHandle)</td></tr>
<tr class="memdesc:a9b01999a1061ab7def7196f670201aec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release the node handle.  <a href="#a9b01999a1061ab7def7196f670201aec"></a><br/></td></tr>
<tr class="separator:a9b01999a1061ab7def7196f670201aec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3842610e8f6b748a2636ca3c2ab29b2f"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a3842610e8f6b748a2636ca3c2ab29b2f">sdbReleaseDomain</a> (sdbDomainHandle cHandle)</td></tr>
<tr class="memdesc:a3842610e8f6b748a2636ca3c2ab29b2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release the domain handle.  <a href="#a3842610e8f6b748a2636ca3c2ab29b2f"></a><br/></td></tr>
<tr class="separator:a3842610e8f6b748a2636ca3c2ab29b2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4258c78ef84179f740d917748c092fd"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aa4258c78ef84179f740d917748c092fd">sdbAggregate</a> (sdbCollectionHandle cHandle, bson **obj, SINT32 num, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:aa4258c78ef84179f740d917748c092fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute aggregate operation in specified collection.  <a href="#aa4258c78ef84179f740d917748c092fd"></a><br/></td></tr>
<tr class="separator:aa4258c78ef84179f740d917748c092fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a856b9ef9d1511f8d39071fc0cc9286b7"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a856b9ef9d1511f8d39071fc0cc9286b7">sdbAttachCollection</a> (sdbCollectionHandle cHandle, const CHAR *subClFullName, bson *options)</td></tr>
<tr class="memdesc:a856b9ef9d1511f8d39071fc0cc9286b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attach the specified collection.  <a href="#a856b9ef9d1511f8d39071fc0cc9286b7"></a><br/></td></tr>
<tr class="separator:a856b9ef9d1511f8d39071fc0cc9286b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16f4f27dfaf5b02a2dd9fe5ec8802a4f"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a16f4f27dfaf5b02a2dd9fe5ec8802a4f">sdbDetachCollection</a> (sdbCollectionHandle cHandle, const CHAR *subClFullName)</td></tr>
<tr class="memdesc:a16f4f27dfaf5b02a2dd9fe5ec8802a4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detach the specified collection.  <a href="#a16f4f27dfaf5b02a2dd9fe5ec8802a4f"></a><br/></td></tr>
<tr class="separator:a16f4f27dfaf5b02a2dd9fe5ec8802a4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a226cdd6bd12bc76e1c0aa4e4cd8f6a69"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a226cdd6bd12bc76e1c0aa4e4cd8f6a69">sdbBackupOffline</a> (sdbConnectionHandle cHandle, bson *options)</td></tr>
<tr class="memdesc:a226cdd6bd12bc76e1c0aa4e4cd8f6a69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Backup the whole database or specifed shard.  <a href="#a226cdd6bd12bc76e1c0aa4e4cd8f6a69"></a><br/></td></tr>
<tr class="separator:a226cdd6bd12bc76e1c0aa4e4cd8f6a69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06a57a52d4cd712932a5a61ab761dafd"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a06a57a52d4cd712932a5a61ab761dafd">sdbListBackup</a> (sdbConnectionHandle cHandle, bson *options, bson *condition, bson *selector, bson *orderBy, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:a06a57a52d4cd712932a5a61ab761dafd"><td class="mdescLeft">&#160;</td><td class="mdescRight">List the backups.  <a href="#a06a57a52d4cd712932a5a61ab761dafd"></a><br/></td></tr>
<tr class="separator:a06a57a52d4cd712932a5a61ab761dafd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac78aa54d3018dbbe8dfefe3ed07cd772"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ac78aa54d3018dbbe8dfefe3ed07cd772">sdbRemoveBackup</a> (sdbConnectionHandle cHandle, bson *options)</td></tr>
<tr class="memdesc:ac78aa54d3018dbbe8dfefe3ed07cd772"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove the backups.  <a href="#ac78aa54d3018dbbe8dfefe3ed07cd772"></a><br/></td></tr>
<tr class="separator:ac78aa54d3018dbbe8dfefe3ed07cd772"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f38ac58336c5f70acf6e3472a672674"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a2f38ac58336c5f70acf6e3472a672674">sdbListTasks</a> (sdbConnectionHandle cHandle, bson *condition, bson *selector, bson *orderBy, bson *hint, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:a2f38ac58336c5f70acf6e3472a672674"><td class="mdescLeft">&#160;</td><td class="mdescRight">List the tasks.  <a href="#a2f38ac58336c5f70acf6e3472a672674"></a><br/></td></tr>
<tr class="separator:a2f38ac58336c5f70acf6e3472a672674"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a487b4a3fbe98f2cd8a2496c2a15cfec6"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a487b4a3fbe98f2cd8a2496c2a15cfec6">sdbWaitTasks</a> (sdbConnectionHandle cHandle, const SINT64 *taskIDs, SINT32 num)</td></tr>
<tr class="memdesc:a487b4a3fbe98f2cd8a2496c2a15cfec6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait the tasks to finish.  <a href="#a487b4a3fbe98f2cd8a2496c2a15cfec6"></a><br/></td></tr>
<tr class="separator:a487b4a3fbe98f2cd8a2496c2a15cfec6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac029248a456673d6f9c153f4aa3572f"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aac029248a456673d6f9c153f4aa3572f">sdbCancelTask</a> (sdbConnectionHandle cHandle, SINT64 taskID, BOOLEAN isAsync)</td></tr>
<tr class="memdesc:aac029248a456673d6f9c153f4aa3572f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cancel the specified task.  <a href="#aac029248a456673d6f9c153f4aa3572f"></a><br/></td></tr>
<tr class="separator:aac029248a456673d6f9c153f4aa3572f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a006c3ff5dfeef9d670c25c49ca682584"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a006c3ff5dfeef9d670c25c49ca682584">sdbSetSessionAttr</a> (sdbConnectionHandle cHandle, bson *options)</td></tr>
<tr class="memdesc:a006c3ff5dfeef9d670c25c49ca682584"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the attributes of the session.  <a href="#a006c3ff5dfeef9d670c25c49ca682584"></a><br/></td></tr>
<tr class="separator:a006c3ff5dfeef9d670c25c49ca682584"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1202fb36bfd55e630011a1cf37abeec5"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a1202fb36bfd55e630011a1cf37abeec5">sdbIsValid</a> (sdbConnectionHandle cHandle, BOOLEAN *result)</td></tr>
<tr class="memdesc:a1202fb36bfd55e630011a1cf37abeec5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Judge whether the connection is valid.  <a href="#a1202fb36bfd55e630011a1cf37abeec5"></a><br/></td></tr>
<tr class="separator:a1202fb36bfd55e630011a1cf37abeec5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af97d45a21c94e5ffb6036e0096be737e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af97d45a21c94e5ffb6036e0096be737e"></a>
SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><b>_sdbMsg</b> (sdbConnectionHandle cHandle, const CHAR *msg)</td></tr>
<tr class="separator:af97d45a21c94e5ffb6036e0096be737e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a062587507c73f8a789f2fe72cf2808b6"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a062587507c73f8a789f2fe72cf2808b6">sdbCreateDomain</a> (sdbConnectionHandle cHandle, const CHAR *pDomainName, bson *options, sdbDomainHandle *handle)</td></tr>
<tr class="memdesc:a062587507c73f8a789f2fe72cf2808b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a domain.  <a href="#a062587507c73f8a789f2fe72cf2808b6"></a><br/></td></tr>
<tr class="separator:a062587507c73f8a789f2fe72cf2808b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc7e70d29899c270f5b32b40de54a6e3"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#adc7e70d29899c270f5b32b40de54a6e3">sdbDropDomain</a> (sdbConnectionHandle cHandle, const CHAR *pDomainName)</td></tr>
<tr class="memdesc:adc7e70d29899c270f5b32b40de54a6e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a domain.  <a href="#adc7e70d29899c270f5b32b40de54a6e3"></a><br/></td></tr>
<tr class="separator:adc7e70d29899c270f5b32b40de54a6e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c6549b272617a83386bb9a4de674b33"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a7c6549b272617a83386bb9a4de674b33">sdbGetDomain</a> (sdbConnectionHandle cHandle, const CHAR *pDomainName, sdbDomainHandle *handle)</td></tr>
<tr class="memdesc:a7c6549b272617a83386bb9a4de674b33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a domain.  <a href="#a7c6549b272617a83386bb9a4de674b33"></a><br/></td></tr>
<tr class="separator:a7c6549b272617a83386bb9a4de674b33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dd88300784507649e3b95d15e2d7c41"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a5dd88300784507649e3b95d15e2d7c41">sdbListDomains</a> (sdbConnectionHandle cHandle, bson *condition, bson *selector, bson *orderBy, sdbCursorHandle *handle)</td></tr>
<tr class="memdesc:a5dd88300784507649e3b95d15e2d7c41"><td class="mdescLeft">&#160;</td><td class="mdescRight">List the domains.  <a href="#a5dd88300784507649e3b95d15e2d7c41"></a><br/></td></tr>
<tr class="separator:a5dd88300784507649e3b95d15e2d7c41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e0f5374ef4f6a0ea3bcee786651a90f"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a9e0f5374ef4f6a0ea3bcee786651a90f">sdbAlterDomain</a> (sdbDomainHandle cHandle, const bson *options)</td></tr>
<tr class="memdesc:a9e0f5374ef4f6a0ea3bcee786651a90f"><td class="mdescLeft">&#160;</td><td class="mdescRight">alter the domains.  <a href="#a9e0f5374ef4f6a0ea3bcee786651a90f"></a><br/></td></tr>
<tr class="separator:a9e0f5374ef4f6a0ea3bcee786651a90f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6d4d7eeeff9ac9a6849959df8d51b34"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aa6d4d7eeeff9ac9a6849959df8d51b34">sdbListCollectionSpacesInDomain</a> (sdbDomainHandle cHandle, sdbCursorHandle *cursor)</td></tr>
<tr class="memdesc:aa6d4d7eeeff9ac9a6849959df8d51b34"><td class="mdescLeft">&#160;</td><td class="mdescRight">list the collection spaces in domain.  <a href="#aa6d4d7eeeff9ac9a6849959df8d51b34"></a><br/></td></tr>
<tr class="separator:aa6d4d7eeeff9ac9a6849959df8d51b34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77de96243b2649ba3ae110c4afee4647"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a77de96243b2649ba3ae110c4afee4647">sdbListCollectionsInDomain</a> (sdbDomainHandle cHandle, sdbCursorHandle *cursor)</td></tr>
<tr class="memdesc:a77de96243b2649ba3ae110c4afee4647"><td class="mdescLeft">&#160;</td><td class="mdescRight">list the collections in domain.  <a href="#a77de96243b2649ba3ae110c4afee4647"></a><br/></td></tr>
<tr class="separator:a77de96243b2649ba3ae110c4afee4647"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a002d23a4b7205c5e903fff039c14ca25"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a002d23a4b7205c5e903fff039c14ca25">sdbInvalidateCache</a> (sdbConnectionHandle cHandle, bson *condition)</td></tr>
<tr class="memdesc:a002d23a4b7205c5e903fff039c14ca25"><td class="mdescLeft">&#160;</td><td class="mdescRight">invalidate cache on specified nodes.  <a href="#a002d23a4b7205c5e903fff039c14ca25"></a><br/></td></tr>
<tr class="separator:a002d23a4b7205c5e903fff039c14ca25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afab1c20c215205d0233e5173a9c52a6b"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#afab1c20c215205d0233e5173a9c52a6b">sdbForceSession</a> (sdbConnectionHandle cHandle, SINT64 sessionID)</td></tr>
<tr class="memdesc:afab1c20c215205d0233e5173a9c52a6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">interrupte the session  <a href="#afab1c20c215205d0233e5173a9c52a6b"></a><br/></td></tr>
<tr class="separator:afab1c20c215205d0233e5173a9c52a6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2abc650e8e968d8716cceb2f3a030ae"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ae2abc650e8e968d8716cceb2f3a030ae">sdbOpenLob</a> (sdbCollectionHandle cHandle, const bson_oid_t *oid, INT32 mode, sdbLobHandle *lobHandle)</td></tr>
<tr class="memdesc:ae2abc650e8e968d8716cceb2f3a030ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">create a large object  <a href="#ae2abc650e8e968d8716cceb2f3a030ae"></a><br/></td></tr>
<tr class="separator:ae2abc650e8e968d8716cceb2f3a030ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a974974b64b16e1f1808e929788bd6d08"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a974974b64b16e1f1808e929788bd6d08">sdbWriteLob</a> (sdbLobHandle lobHandle, const CHAR *buf, UINT32 len)</td></tr>
<tr class="memdesc:a974974b64b16e1f1808e929788bd6d08"><td class="mdescLeft">&#160;</td><td class="mdescRight">write lob  <a href="#a974974b64b16e1f1808e929788bd6d08"></a><br/></td></tr>
<tr class="separator:a974974b64b16e1f1808e929788bd6d08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9ebe005f3c9ef0509dea453b13a9e95"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aa9ebe005f3c9ef0509dea453b13a9e95">sdbReadLob</a> (sdbLobHandle lobHandle, UINT32 len, CHAR *buf, UINT32 *read)</td></tr>
<tr class="memdesc:aa9ebe005f3c9ef0509dea453b13a9e95"><td class="mdescLeft">&#160;</td><td class="mdescRight">read lob  <a href="#aa9ebe005f3c9ef0509dea453b13a9e95"></a><br/></td></tr>
<tr class="separator:aa9ebe005f3c9ef0509dea453b13a9e95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb9fe703333e67b6c65ad5b8ba8d2661"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#afb9fe703333e67b6c65ad5b8ba8d2661">sdbCloseLob</a> (sdbLobHandle *lobHandle)</td></tr>
<tr class="memdesc:afb9fe703333e67b6c65ad5b8ba8d2661"><td class="mdescLeft">&#160;</td><td class="mdescRight">close lob  <a href="#afb9fe703333e67b6c65ad5b8ba8d2661"></a><br/></td></tr>
<tr class="separator:afb9fe703333e67b6c65ad5b8ba8d2661"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60532913ce2b87b8cfc5cf31eb54f76a"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a60532913ce2b87b8cfc5cf31eb54f76a">sdbRemoveLob</a> (sdbCollectionHandle cHandle, const bson_oid_t *oid)</td></tr>
<tr class="memdesc:a60532913ce2b87b8cfc5cf31eb54f76a"><td class="mdescLeft">&#160;</td><td class="mdescRight">remove lob  <a href="#a60532913ce2b87b8cfc5cf31eb54f76a"></a><br/></td></tr>
<tr class="separator:a60532913ce2b87b8cfc5cf31eb54f76a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a902286fb1830f90849ffd5291ade101c"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a902286fb1830f90849ffd5291ade101c">sdbGetLobSize</a> (sdbLobHandle lobHandle, SINT64 *size)</td></tr>
<tr class="memdesc:a902286fb1830f90849ffd5291ade101c"><td class="mdescLeft">&#160;</td><td class="mdescRight">get the lob's size  <a href="#a902286fb1830f90849ffd5291ade101c"></a><br/></td></tr>
<tr class="separator:a902286fb1830f90849ffd5291ade101c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab90f576717b9d416027390b36f783546"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ab90f576717b9d416027390b36f783546">sdbGetLobCreateTime</a> (sdbLobHandle lobHandle, UINT64 *millis)</td></tr>
<tr class="memdesc:ab90f576717b9d416027390b36f783546"><td class="mdescLeft">&#160;</td><td class="mdescRight">get lob's create time  <a href="#ab90f576717b9d416027390b36f783546"></a><br/></td></tr>
<tr class="separator:ab90f576717b9d416027390b36f783546"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a692f6e159b4312c14f4bc89dd5b78e57"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a692f6e159b4312c14f4bc89dd5b78e57">sdbSeekLob</a> (sdbLobHandle lobHandle, SINT64 size, SDB_LOB_SEEK whence)</td></tr>
<tr class="memdesc:a692f6e159b4312c14f4bc89dd5b78e57"><td class="mdescLeft">&#160;</td><td class="mdescRight">seek the place to read  <a href="#a692f6e159b4312c14f4bc89dd5b78e57"></a><br/></td></tr>
<tr class="separator:a692f6e159b4312c14f4bc89dd5b78e57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40a36bfde58fd6b3199db60838970060"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a40a36bfde58fd6b3199db60838970060">sdbListLobs</a> (sdbCollectionHandle cHandle, sdbCursorHandle *cursor)</td></tr>
<tr class="memdesc:a40a36bfde58fd6b3199db60838970060"><td class="mdescLeft">&#160;</td><td class="mdescRight">list all the lobs' meta data in current collection  <a href="#a40a36bfde58fd6b3199db60838970060"></a><br/></td></tr>
<tr class="separator:a40a36bfde58fd6b3199db60838970060"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd9f14b11631d48a17b6dd32a891a6dd"><td class="memItemLeft" align="right" valign="top">SDB_EXPORT INT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#afd9f14b11631d48a17b6dd32a891a6dd">sdbListLobPieces</a> (sdbCollectionHandle cHandle, sdbCursorHandle *cursor)</td></tr>
<tr class="memdesc:afd9f14b11631d48a17b6dd32a891a6dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">list all the pieces in the lob  <a href="#afd9f14b11631d48a17b6dd32a891a6dd"></a><br/></td></tr>
<tr class="separator:afd9f14b11631d48a17b6dd32a891a6dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>C Client Driver. </p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a72a3a2a84925f6f11cd00a17b701eed9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SDB_PAGESIZE_DEFAULT&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>0 means using database's default pagesize, it 64k now </p>

</div>
</div>
<a class="anchor" id="ae154732f092cf6846a20ec92b485b6a4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sdbCreateReplicaNode&#160;&#160;&#160;<a class="el" href="client_8h.html#a2e31cbaffe6f067797ccd0091a920d92">sdbCreateNode</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sdbCreateReplicaNode will be deprecated in version 2.x, use sdbCreateNode instead of it. </p>

</div>
</div>
<a class="anchor" id="aa9c6383673f8cafe131f5118abcb7346"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sdbGetReplicaNodeByHost&#160;&#160;&#160;<a class="el" href="client_8h.html#aac1300aec73c81c8f57163ffe505a312">sdbGetNodeByHost</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sdbGetReplicaNodeByHost will be deprecated in version 2.x, use sdbGetNodeByHost instead of it. </p>

</div>
</div>
<a class="anchor" id="a8badb505c6e2f194a54aa848472e23b0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sdbGetReplicaNodeByName&#160;&#160;&#160;<a class="el" href="client_8h.html#a0cd5c07a110bcdce3fcad7da84d88738">sdbGetNodeByName</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sdbGetReplicaNodeByName will be deprecated in version 2.x, use sdbGetNodeByName instead of it. </p>

</div>
</div>
<a class="anchor" id="abd733af3d51c43578dc299838f46e78e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sdbGetReplicaNodeMaster&#160;&#160;&#160;<a class="el" href="client_8h.html#a3eace1c57b76f33e4fb190654091c6c2">sdbGetNodeMaster</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sdbGetReplicaNodeMaster will be deprecated in version 2.x, use sdbGetNodeMaster instead of it. </p>

</div>
</div>
<a class="anchor" id="a7b30514e6a6298fd41bf5891755351df"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sdbGetReplicaNodeSddr&#160;&#160;&#160;<a class="el" href="client_8h.html#aad4b783665b37aadf01a92a48fd9b415">sdbGetNodeAddr</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sdbGetReplicaNodeSddr will be deprecated in version 2.x, use sdbGetNodeAddr instead of it. </p>

</div>
</div>
<a class="anchor" id="a9c359e2bf6c9ce50abda0529359d08c2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sdbGetReplicaNodeSlave&#160;&#160;&#160;<a class="el" href="client_8h.html#a1b1fc1ba88e7d9bd793d4e5af4ad7c11">sdbGetNodeSlave</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sdbGetReplicaNodeSlave will be deprecated in version 2.x, use sdbGetNodeSlave instead of it. </p>

</div>
</div>
<a class="anchor" id="a50124c49264e9aa08d02f5a873a39a10"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sdbReleaseReplicaNode&#160;&#160;&#160;<a class="el" href="client_8h.html#a9b01999a1061ab7def7196f670201aec">sdbReleaseNode</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sdbReleaseReplicaNode will be deprecated in version 2.x, use sdbReleaseNode instead of it. </p>

</div>
</div>
<a class="anchor" id="af49ba435da89b47faaeb751894a89144"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sdbRemoveReplicaNode&#160;&#160;&#160;<a class="el" href="client_8h.html#a723476a2f912a185156d461e3a52a9bd">sdbRemoveNode</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sdbRemoveReplicaNode will be deprecated in version 2.x, use sdbRemoveNode instead of it. </p>

</div>
</div>
<a class="anchor" id="ac5df69135412d77b60b03c6a5d517738"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sdbStartReplicaNode&#160;&#160;&#160;<a class="el" href="client_8h.html#aaac01736049b5416e5f713a18d929494">sdbStartNode</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sdbStartReplicaNode will be deprecated in version 2.x, use sdbStartNode instead of it. </p>

</div>
</div>
<a class="anchor" id="ae6bc991da64375fa75effd3da6d22282"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sdbStopReplicaNode&#160;&#160;&#160;<a class="el" href="client_8h.html#aa939e94c8f7d14f6db9ea71b9355f0f4">sdbStopNode</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sdbStopReplicaNode will be deprecated in version 2.x, use sdbStopNode instead of it. </p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="ab8dc7a8e34d7d2d5a742de634b7d7956"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef sdbNodeHandle <a class="el" href="client_8h.html#ab8dc7a8e34d7d2d5a742de634b7d7956">sdbReplicaNodeHandle</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sdbReplicaNodeHandle will be deprecated in version 2.x, use sdbNodeHandle instead of it. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="ab325438708db06790ad8bc61f3ab9990"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="client_8h.html#ab325438708db06790ad8bc61f3ab9990">_SDB_LOB_OPEN_MODE</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ab325438708db06790ad8bc61f3ab9990a3d615de5227b528e3d0f1ec2f30a654d"></a>SDB_LOB_CREATEONLY</em>&nbsp;</td><td>
<p>Open a new lob only </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ab325438708db06790ad8bc61f3ab9990a933574507f86ae84dc2e8c8eee2e3c5b"></a>SDB_LOB_READ</em>&nbsp;</td><td>
<p>Open an existing lob to read </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="af77505dd6aeb8e9158f66f01f60ba37a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="client_8h.html#af77505dd6aeb8e9158f66f01f60ba37a">_SDB_LOB_SEEK</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="af77505dd6aeb8e9158f66f01f60ba37aafec176c8b54770ddbe02a20167f6ac60"></a>SDB_LOB_SEEK_SET</em>&nbsp;</td><td>
<p>Seek from the beginning of file </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="af77505dd6aeb8e9158f66f01f60ba37aabc01f3f0d8f8ae95d519854301181e9b"></a>SDB_LOB_SEEK_CUR</em>&nbsp;</td><td>
<p>Seek from the current place </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="af77505dd6aeb8e9158f66f01f60ba37aaa13ce8e7163da3d6f35842ec5946e8f2"></a>SDB_LOB_SEEK_END</em>&nbsp;</td><td>
<p>Seek from the end of file </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="a64fae029b89fcfd99538e07e790abf41"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="client_8h.html#a64fae029b89fcfd99538e07e790abf41">SDB_LIST_TYPE</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41a6d2411afc0bdd2f11ffb9503e981106e"></a>SDB_LIST_CONTEXTS</em>&nbsp;</td><td>
<p>Get the list of the contexts </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41a571270a7f9df759b6769f94adf59c233"></a>SDB_LIST_CONTEXTS_CURRENT</em>&nbsp;</td><td>
<p>Get the list of current context </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41aa7eb7e9b7c034ad122db3dcb5067df5a"></a>SDB_LIST_SESSIONS</em>&nbsp;</td><td>
<p>Get the list of the sessions </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41aa1a07c12efb4c147aa45dd2e8292a8c6"></a>SDB_LIST_SESSIONS_CURRENT</em>&nbsp;</td><td>
<p>Get the list of current session </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41abe9f56cf0f8a9bd27c12f4663797e853"></a>SDB_LIST_COLLECTIONS</em>&nbsp;</td><td>
<p>Get the list of the collections </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41ab31ba5691c0b587d313e2c667dd4bdd5"></a>SDB_LIST_COLLECTIONSPACES</em>&nbsp;</td><td>
<p>Get the list of the collecion spaces </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41a0aef36e5875efb0801c5a37ed8bdff72"></a>SDB_LIST_STORAGEUNITS</em>&nbsp;</td><td>
<p>Get the list of the storage units </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41a15d2d4d1888797d33f7cf23c476d9c1f"></a>SDB_LIST_GROUPS</em>&nbsp;</td><td>
<p>Get the list of the replica groups ( only applicable in sharding env ) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41a232c5caab007abff5e19bae6906bf198"></a>SDB_LIST_STOREPROCEDURES</em>&nbsp;</td><td>
<p>Get the list of the stored procedures ( only applicable in sharding env ) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41a3ebeef2822a556abf2bd4cf1bc67fb7d"></a>SDB_LIST_DOMAINS</em>&nbsp;</td><td>
<p>Get the list of the domains ( only applicable in sharding env ) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41aac85981cee14b8fed1bd829668f97a56"></a>SDB_LIST_TASKS</em>&nbsp;</td><td>
<p>Get the list of the tasks ( only applicable in sharding env ) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41ac37d213d9a8f24931c51512990762855"></a>SDB_LIST_CS_IN_DOMAIN</em>&nbsp;</td><td>
<p>Get the list of the collection spaces in specified domain </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41a5f731c52f01bcceef04125169c64cd9c"></a>SDB_LIST_CL_IN_DOMAIN</em>&nbsp;</td><td>
<p>Get the list of the collections in specified domain </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fae029b89fcfd99538e07e790abf41a90878f9cc04c1059b2abb0c9cbb4af2f"></a>SDB_LIST_END</em>&nbsp;</td><td>
<p>Not a list type, just use to mark the end of current enum </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="a98041827bff0c9494091863444ddc690"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="client_8h.html#a98041827bff0c9494091863444ddc690">SDB_SNAP_TYPE</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a98041827bff0c9494091863444ddc690a7210debb74b81380d3a1a1e1596adfc5"></a>SDB_SNAP_CONTEXTS</em>&nbsp;</td><td>
<p>Get the snapshot of all the contexts </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a98041827bff0c9494091863444ddc690a6a3019ae64b86df9f06fea6fff3be3f6"></a>SDB_SNAP_CONTEXTS_CURRENT</em>&nbsp;</td><td>
<p>Get the snapshot of current context </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a98041827bff0c9494091863444ddc690a9acbfe5507ebddf9b4dad210c238ab71"></a>SDB_SNAP_SESSIONS</em>&nbsp;</td><td>
<p>Get the snapshot of all the sessions </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a98041827bff0c9494091863444ddc690adde45c257158aa2303759097d621c4fb"></a>SDB_SNAP_SESSIONS_CURRENT</em>&nbsp;</td><td>
<p>Get the snapshot of current session </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a98041827bff0c9494091863444ddc690a806f7dc03a0454839a469ee08fa22bfe"></a>SDB_SNAP_COLLECTIONS</em>&nbsp;</td><td>
<p>Get the snapshot of all the collections </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a98041827bff0c9494091863444ddc690af2f34aff1971650e7f3fe734b589bdc6"></a>SDB_SNAP_COLLECTIONSPACES</em>&nbsp;</td><td>
<p>Get the snapshot of all the collection spaces </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a98041827bff0c9494091863444ddc690aa8af162b151dd24462d1338fce4599a7"></a>SDB_SNAP_DATABASE</em>&nbsp;</td><td>
<p>Get the snapshot of the database </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a98041827bff0c9494091863444ddc690a958835534c0d93efd59f1317046f229a"></a>SDB_SNAP_SYSTEM</em>&nbsp;</td><td>
<p>Get the snapshot of the system </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a98041827bff0c9494091863444ddc690af4639f253945be503456e7a64f3f608e"></a>SDB_SNAP_CATALOG</em>&nbsp;</td><td>
<p>Get the snapshot of the catalog </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a98041827bff0c9494091863444ddc690a4ed6d2100be0fe9f8c1600d90e34bf23"></a>SDB_SNAP_END</em>&nbsp;</td><td>
<p>Not a snapshot type, just use to mark the end of current enum </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="aa4258c78ef84179f740d917748c092fd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbAggregate </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson **&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT32&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Execute aggregate operation in specified collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">obj</td><td>The array of bson objects </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num</td><td>The number of inserted bson objects </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail <div class="fragment"><div class="line">INT32 rc = 0 ;</div>
<div class="line">INT32 i = 0 ;</div>
<div class="line"><span class="keyword">const</span> INT32 num = 10 ;</div>
<div class="line">bson* obj[num] ;</div>
<div class="line"><span class="comment">// create bson poiter array</span></div>
<div class="line"><span class="keywordflow">for</span> ( i = 0; i &lt; num; i++ )</div>
<div class="line">{</div>
<div class="line">   obj[i] = bson_create();</div>
<div class="line">   rc = bson_append_int( obj[i], <span class="stringliteral">&quot;num&quot;</span>, i ) ;</div>
<div class="line">   <span class="keywordflow">if</span> ( rc != 0 )</div>
<div class="line">      printf ( <span class="stringliteral">&quot;something wrong.\n&quot;</span> ) ;</div>
<div class="line">   rc = bson_finish ( obj[i] ) ;</div>
<div class="line">   <span class="keywordflow">if</span> ( rc != 0 )</div>
<div class="line">      printf ( <span class="stringliteral">&quot;something wrong.\n&quot;</span> ) ;</div>
<div class="line">}</div>
<div class="line"><span class="comment">// TODO:</span></div>
<div class="line">rc = <a class="code" href="client_8h.html#aa4258c78ef84179f740d917748c092fd" title="Execute aggregate operation in specified collection.">sdbAggregate</a> ( cl, obj, num, &amp;cursor ) ;</div>
<div class="line"><span class="keywordflow">if</span> ( rc )</div>
<div class="line">   printf ( <span class="stringliteral">&quot;something wrong, rc = %d.\n&quot;</span>, rc ) ;</div>
<div class="line"><span class="comment">// free memory</span></div>
<div class="line"><span class="keywordflow">for</span> ( i = 0; i &lt; num; i++ )</div>
<div class="line">{</div>
<div class="line">   bson_dispose ( obj[i] ) ;</div>
<div class="line">}</div>
</div><!-- fragment --> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5645263c7ff024bab0eae498596f8221"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbAlterCollection </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Alter the specified collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The colleciton handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>The modified options as following: ReplSize Number of replnodes for sync write </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9e0f5374ef4f6a0ea3bcee786651a90f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbAlterDomain </td>
          <td>(</td>
          <td class="paramtype">sdbDomainHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson *&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>alter the domains. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The domain handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>The options user wants to alter </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a856b9ef9d1511f8d39071fc0cc9286b7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbAttachCollection </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>subClFullName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Attach the specified collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">subClFullName</td><td>The name of the subcollection </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>The low boudary and up boudary eg: {"LowBound":{a:1},"UpBound":{a:100}} </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a226cdd6bd12bc76e1c0aa4e4cd8f6a69"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbBackupOffline </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Backup the whole database or specifed shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Contains a series of backup configuration infomations. Backup the whole cluster if null. The "options" contains 5 options as below. All the elements in options are optional. eg: {"GroupName":["shardName1", "shardName2"], "Path":"/opt/sequoiadb/backup", "Name":"backupName", "Description":description, "EnsureInc":true, "OverWrite":true} <pre class="fragment">GroupID     : The id(s) of replica group(s) which to be backuped
GroupName   : The replica groups which to be backuped
Path        : The backup path, if not assign, use the backup path assigned in the configuration file,
              the path support to use wildcard(%g/%G:group name, %h/%H:host name, %s/%S:service name). e.g.  {Path:"/opt/sequoiadb/backup/%g"}
isSubDir    : Whether the path specified by paramer "Path" is a subdirectory of the path specified in the configuration file, default to be false
Name        : The name for the backup
Prefix      : The prefix of name for the backup, default to be null. e.g. {Prefix:"%g_bk_"}
EnableDateDir : Whether turn on the feature which will create subdirectory named to current date like "YYYY-MM-DD" automatically, default to be false
Description : The description for the backup
EnsureInc   : Whether excute increment synchronization, default to be false
OverWrite   : Whether overwrite the old backup file, default to be false
</pre> </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a42e4bc8674da51ab5459fdf84e5c02b3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbBulkInsert </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT32&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson **&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT32&#160;</td>
          <td class="paramname"><em>num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Insert a bulk of bson objects into current collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flags</td><td>FLG_INSERT_CONTONDUP or 0. While FLG_INSERT_CONTONDUP is set, database will not stop inserting when some records contain the same field "_id". However, while 0 is set, database will stop inserting in that case, and return errno code. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">obj</td><td>The array of inserted bson objects, cannot be null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num</td><td>The number of inserted bson objects </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail <div class="fragment"><div class="line">INT32 rc = 0 ;</div>
<div class="line">INT32 i = 0 ;</div>
<div class="line"><span class="keyword">const</span> INT32 num = 10 ;</div>
<div class="line">bson* obj[num] ;</div>
<div class="line"><span class="comment">// create bson poiter array</span></div>
<div class="line"><span class="keywordflow">for</span> ( i = 0; i &lt; num; i++ )</div>
<div class="line">{</div>
<div class="line">   obj[i] = bson_create();</div>
<div class="line">   rc = bson_append_int( obj[i], <span class="stringliteral">&quot;num&quot;</span>, i ) ;</div>
<div class="line">   <span class="keywordflow">if</span> ( rc != 0 )</div>
<div class="line">      printf ( <span class="stringliteral">&quot;something wrong.\n&quot;</span> ) ;</div>
<div class="line">   rc = bson_finish ( obj[i] ) ;</div>
<div class="line">   <span class="keywordflow">if</span> ( rc != 0 )</div>
<div class="line">      printf ( <span class="stringliteral">&quot;something wrong.\n&quot;</span> ) ;</div>
<div class="line">}</div>
<div class="line"><span class="comment">// TODO:</span></div>
<div class="line">rc = <a class="code" href="client_8h.html#a42e4bc8674da51ab5459fdf84e5c02b3" title="Insert a bulk of bson objects into current collection.">sdbBulkInsert</a> ( cl, 0, obj, num ) ;</div>
<div class="line"><span class="keywordflow">if</span> ( rc )</div>
<div class="line">   printf ( <span class="stringliteral">&quot;something wrong, rc = %d.\n&quot;</span>, rc ) ;</div>
<div class="line"><span class="comment">// free memory</span></div>
<div class="line"><span class="keywordflow">for</span> ( i = 0; i &lt; num; i++ )</div>
<div class="line">{</div>
<div class="line">   bson_dispose ( obj[i] ) ;</div>
<div class="line">}</div>
</div><!-- fragment --> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aac029248a456673d6f9c153f4aa3572f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCancelTask </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT64&#160;</td>
          <td class="paramname"><em>taskID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BOOLEAN&#160;</td>
          <td class="paramname"><em>isAsync</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Cancel the specified task. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">taskID</td><td>The task id </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isAsync</td><td>The operation "cancel task" is async or not, "true" for async, "false" for sync. Default sync. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a87a41e0e0c39372ad29e00a8a1c715ae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCloseAllCursors </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Close all the cursors in current thread, we can't use those cursors to get data anymore. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af300b292db92e2dd767f944d0201b1b8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCloseCursor </td>
          <td>(</td>
          <td class="paramtype">sdbCursorHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Close the cursor's connection to database, we can't use this handle to get data again. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The cursor handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Don't call this method after the connection handle had been released. </dd></dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afb9fe703333e67b6c65ad5b8ba8d2661"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCloseLob </td>
          <td>(</td>
          <td class="paramtype">sdbLobHandle *&#160;</td>
          <td class="paramname"><em>lobHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>close lob </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lobHandle</td><td>The large object handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a46b76f04cc409c570827ef801f4073d6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbConnect </td>
          <td>(</td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pHostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pServiceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pUsrName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pPasswd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbConnectionHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Connect to database. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pHostName</td><td>The Host Name or IP Address of Database Server </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pServiceName</td><td>The Service Name or Port of Database Server </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pUsrName</td><td>The User's Name of the account </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pPasswd</td><td>The Password of the account </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The database connection handle, when fail to connect, *handle == SDB_INVALID_HANDLE and error code is return </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Connection Success </td></tr>
    <tr><td class="paramname">Others</td><td>Connection Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afdc94c5daa2f681d93b4c17437451464"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbConnect1 </td>
          <td>(</td>
          <td class="paramtype">const CHAR **&#160;</td>
          <td class="paramname"><em>pConnAddrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>arrSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pUsrName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pPasswd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbConnectionHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Connect to database used a random valid address in the array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pConnAddrs</td><td>The array of the coord's address </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arrSize</td><td>The size of the array </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pUsrName</td><td>The User's Name of the account </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pPasswd</td><td>The Password of the account </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The database connection handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Connection Success </td></tr>
    <tr><td class="paramname">Others</td><td>Connection Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae18d74861837f51a856b86b8f1d7cca3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCreateCollection </td>
          <td>(</td>
          <td class="paramtype">sdbCSHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCollectionHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the specified collection in current collection space This function creates a non-sharded collection with default replsize. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection space handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionName</td><td>The collection name </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The collection handle, when fail to create collection, *handle == -1 and error code is return </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5104603247e71e4df8e8a1cbdb82a32b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCreateCollection1 </td>
          <td>(</td>
          <td class="paramtype">sdbCSHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCollectionHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the specified collection in current collection space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection space handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionName</td><td>The collection name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>The options for creating collection, including "ShardingKey", "ReplSize", "IsMainCL" and "Compressed" informations, no options, if null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The collection handle when fail to create collection, *handle == -1 and error code is return </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6dcd0cb6d5b03d1ba0c3c4ff49d34269"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCreateCollectionSpace </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionSpaceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>iPageSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCSHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the specified collection space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionSpaceName</td><td>The name of collection space </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">iPageSize</td><td>The Page Size as below <pre class="fragment">SDB_PAGESIZE_4K
SDB_PAGESIZE_8K
SDB_PAGESIZE_16K
SDB_PAGESIZE_32K
SDB_PAGESIZE_64K
SDB_PAGESIZE_DEFAULT
</pre> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The collection space handle when fail to create collection space, *handle == -1 and error code is return </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2d091041d635a6bd730ff2ac2d19998e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCreateCollectionSpaceV2 </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionSpaceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCSHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the specified collection space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionSpaceName</td><td>The name of collection space </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>The options specified by user</td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The collection space handle when fail to create collection space, *handle == -1 and error code is return </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a062587507c73f8a789f2fe72cf2808b6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCreateDomain </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pDomainName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbDomainHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a domain. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pDomainName</td><td>The name of the domain </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>The options for the domain. The options are as below: <pre class="fragment">Group: The list of name for replica groups that the domain contains.
       eg: { "Group": [ "group1", "group2", "group3" ] }
       If this argument is not included, the domain will contain all replica groups in the cluster.
</pre> </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The domain handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1e6abb2fb667c4665b3ed9f123bc65f4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCreateIndex </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>indexDef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pIndexName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BOOLEAN&#160;</td>
          <td class="paramname"><em>isUnique</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BOOLEAN&#160;</td>
          <td class="paramname"><em>isEnforced</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the index in current collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">indexDef</td><td>The bson structure of index element, e.g. {name:1, age:-1} </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pIndexName</td><td>The index name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isUnique</td><td>Whether the index elements are unique or not </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isEnforced</td><td>Whether the index is enforced unique This element is meaningful when isUnique is set to true </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2e31cbaffe6f067797ccd0091a920d92"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCreateNode </td>
          <td>(</td>
          <td class="paramtype">sdbReplicaGroupHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pHostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pServiceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pDatabasePath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>configure</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create node in a given shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The shard handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pHostName</td><td>The hostname for the node </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pServiceName</td><td>The servicename for the node </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pDatabasePath</td><td>The database path for the node </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">configure</td><td>The configurations for the node </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0759323c27fe53a47c58ff6ee3dc81e3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCreateReplicaCataGroup </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pHostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pServiceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pDatabasePath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>configure</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a catalog shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pHostName</td><td>The hostname for the catalog shard </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pServiceName</td><td>The servicename for the catalog shard </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pDatabasePath</td><td>The path for the catalog shard </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">configure</td><td>The configurations for the catalog shard </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae4d5837af5f9857e386d17c612395061"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCreateReplicaGroup </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pShardName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbReplicaGroupHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the specified shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pShardName</td><td>The name of the shard </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The shard handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a24b519519d11fcfb416addd078404981"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCreateUsr </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pUsrName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pPasswd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create an account. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pUsrName</td><td>The User's Name of the account </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pPasswd</td><td>The Password of the account </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Connection Success </td></tr>
    <tr><td class="paramname">Others</td><td>Connection Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad46f5a3cfc88fa71108494861f0d0f3d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCrtJSProcedure </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>code</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>create a store procedure. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection space space handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">code</td><td>The code of store procedures </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1eacbd9fe97c4b5da544a13d45836c26"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbCurrent </td>
          <td>(</td>
          <td class="paramtype">sdbCursorHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>obj</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the current document of cursor, and don't move. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The cursor handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">obj</td><td>The return bson object </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abf027cb1e46bd11980da26cbf38d2b80"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbDelete </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>hint</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Delete the matching documents in current collection, never rollback if failed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, delete all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, automatically match the optimal hint if null </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a16f4f27dfaf5b02a2dd9fe5ec8802a4f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbDetachCollection </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>subClFullName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Detach the specified collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">subClFullName</td><td>The name of the subcollection </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1b6ee0ada5b847277ccdae9d7c6da371"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sdbDisconnect </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disconnect to database. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>The database connection handle </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4422c40ed5213c789bdbadcdc9d48e0c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbDropCollection </td>
          <td>(</td>
          <td class="paramtype">sdbCSHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Drop the specified collection in current collection space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection space handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionName</td><td>The collection name </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="acdf033199f44a300b00eb0ffa8e9ca7e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbDropCollectionSpace </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionSpaceName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Drop the specified collection space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionSpaceName</td><td>The name of collection space </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="adc7e70d29899c270f5b32b40de54a6e3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbDropDomain </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pDomainName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a domain. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pDomainName</td><td>The name of the domain </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1bd708dddfeba28c21983b0aece87706"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbDropIndex </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pIndexName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Drop the index in current collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pIndexName</td><td>The index name </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab8afc8a8992be36a495cb5146f286eb5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbEvalJS </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SDB_SPD_RES_TYPE *&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>errmsg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Eval a func. \ type is declared in spd.h. see SDB_FMP_RES_TYPE. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection space space handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">code</td><td>The code to eval </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">type</td><td>The type of value </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of current eval </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">errmsg</td><td>The errmsg from eval </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac645b3df9ee4252c360396c8094ac7c2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbExec </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>sql</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Executing SQL command. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">sql</td><td>The SQL command. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>The return cursor handle of matching documents. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af6f0d1b3b0cff7ca80ad738121c74395"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbExecUpdate </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>sql</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Executing SQL command for updating. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">sql</td><td>The SQL command. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a38c2547605239b6f0c5ba892b8f4ff6b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbExplain </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>select</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>orderBy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>hint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT64&#160;</td>
          <td class="paramname"><em>numToSkip</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT64&#160;</td>
          <td class="paramname"><em>numToReturn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get access plan of query </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">select</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, automatically match the optimal hint if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flags</td><td>The flags of query </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numToSkip</td><td>Skip the first numToSkip documents, never skip if this parameter is 0 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numToReturn</td><td>Only return numToReturn documents, return all if this parameter is -1 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>the rules of explain </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of current query </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6f3ffe9a71e0cc872a4025b1a0b80d84"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbFlushConfigure </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>flush the options to configure file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>The configure infomation, pass {"Global":true} or {"Global":false} In cluster environment, passing {"Global":true} will flush data's and catalog's configuration file, while passing {"Global":false} will flush coord's configuration file. In stand-alone environment, both them have the same behaviour. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afab1c20c215205d0233e5173a9c52a6b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbForceSession </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT64&#160;</td>
          <td class="paramname"><em>sessionID</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>interrupte the session </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">sessionID</td><td>The id of the session which we want to inerrupt </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab971237aa48c3d373d8a553848bd8060"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetCollection </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionFullName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCollectionHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the specified collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionFullName</td><td>The full name of collection </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The collection handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3f4e5edd958ca1e1accceaaebbe0fab9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetCollection1 </td>
          <td>(</td>
          <td class="paramtype">sdbCSHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCollectionHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the specified collection of current collection space. </p>
<p>Get the specified collection.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection space handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionName</td><td>The collection name </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The collection handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionName</td><td>The name of collection </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The collection handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="adfd02cc33e7dcc38d53c8c06f0b43e99"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetCollectionSpace </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pCollectionSpaceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCSHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the specified collection space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pCollectionSpaceName</td><td>The name of collection space </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The collection space handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a53c12a745313ebba4fe775f9e9e4d55f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetCount </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT64 *&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the count of documents in specified collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return the count of all documents if this parameter is null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">count</td><td>The count of matching documents </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9fec2af13aa58dd072b613e0dbb13013"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetCount1 </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>hint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT64 *&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the count of documents in specified collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return the count of all documents if this parameter is null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, automatically match the optimal hint if null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">count</td><td>The count of matching documents </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3ca043778df737ec3cf43d260853435a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetCSName </td>
          <td>(</td>
          <td class="paramtype">sdbCSHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">CHAR **&#160;</td>
          <td class="paramname"><em>ppCSName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the specified collection space name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection space handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ppCSName</td><td>The pointer to collection space name </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aaeff788b930df93dda0e736fbf79f034"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetDataBlocks </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>select</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>orderBy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>hint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT64&#160;</td>
          <td class="paramname"><em>numToSkip</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT64&#160;</td>
          <td class="paramname"><em>numToReturn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the data blocks' infomation for concurrent query. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">select</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, The collection full name eg: {"Collection":"foo.bar"} while "foo.bar" is the full name of current collection </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numToSkip</td><td>Skip the first numToSkip documents, never skip if this parameter is 0 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numToReturn</td><td>Only return numToReturn documents, return all if this parameter is -1 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of current query </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7c6549b272617a83386bb9a4de674b33"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetDomain </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pDomainName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbDomainHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a domain. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pDomainName</td><td>The name of the domain </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The domain handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac2b70e43cec2f47e2ee197f22b643cf2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetIndexes </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pIndexName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get all of or one of the indexes in current collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pIndexName</td><td>The index name, returns all of the indexes if this parameter is null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of returns </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8626be21460510bba019286d454daf69"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetList </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>listType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>selector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>orderBy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the specified list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">listType</td><td>The list type as below <pre class="fragment">SDB_LIST_CONTEXTS         : Get the list of the contexts
SDB_LIST_CONTEXTS_CURRENT : Get the list of current context
SDB_LIST_SESSIONS         : Get the list of the sessions
SDB_LIST_SESSIONS_CURRENT : Get the list of current session
SDB_LIST_COLLECTIONS      : Get the list of the collections
SDB_LIST_COLLECTIONSPACES : Get the list of the collecion spaces
SDB_LIST_STORAGEUNITS     : Get the list of the storage units
SDB_LIST_GROUPS           : Get the list of the replica groups ( only applicable in sharding env )
SDB_LIST_STOREPROCEDURES  : Get the list of the stored procedures ( only applicable in sharding env )
SDB_LIST_DOMAINS          : Get the list of the domains ( only applicable in sharding env )
SDB_LIST_TASKS            : Get the list of the tasks ( only applicable in sharding env )
</pre> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, match all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">select</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of current query </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab90f576717b9d416027390b36f783546"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetLobCreateTime </td>
          <td>(</td>
          <td class="paramtype">sdbLobHandle&#160;</td>
          <td class="paramname"><em>lobHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT64 *&#160;</td>
          <td class="paramname"><em>millis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get lob's create time </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lobHandle</td><td>The large object handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">millis</td><td>The create time in milliseconds of lob </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a902286fb1830f90849ffd5291ade101c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetLobSize </td>
          <td>(</td>
          <td class="paramtype">sdbLobHandle&#160;</td>
          <td class="paramname"><em>lobHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT64 *&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get the lob's size </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lobHandle</td><td>The large object handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">size</td><td>The size of lob </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aad4b783665b37aadf01a92a48fd9b415"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetNodeAddr </td>
          <td>(</td>
          <td class="paramtype">sdbNodeHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR **&#160;</td>
          <td class="paramname"><em>ppHostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR **&#160;</td>
          <td class="paramname"><em>ppServiceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR **&#160;</td>
          <td class="paramname"><em>ppNodeName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32 *&#160;</td>
          <td class="paramname"><em>pNodeID</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the host and service name for the specified node. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The node handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ppHostName</td><td>The hostname for the node </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ppServiceName</td><td>The servicename for the node </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ppNodeName</td><td>The name for the node </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">pNodeID</td><td>The id for the node </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aac1300aec73c81c8f57163ffe505a312"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetNodeByHost </td>
          <td>(</td>
          <td class="paramtype">sdbReplicaGroupHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pHostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pServiceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbNodeHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the node from the specified shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The shard handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pHostName</td><td>The host of node </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pServiceName</td><td>The service name of the node </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The node handle, when fail to get node, *handle == -1, and error code is return </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0cd5c07a110bcdce3fcad7da84d88738"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetNodeByName </td>
          <td>(</td>
          <td class="paramtype">sdbReplicaGroupHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pNodeName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbNodeHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the node from the specified shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The shard handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pNodeName</td><td>The name of node </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The node handle, when fail to get node, *handle == -1, and error code is return </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3eace1c57b76f33e4fb190654091c6c2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetNodeMaster </td>
          <td>(</td>
          <td class="paramtype">sdbReplicaGroupHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbNodeHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the master node of the specified shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The shard handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The master node handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1b1fc1ba88e7d9bd793d4e5af4ad7c11"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetNodeSlave </td>
          <td>(</td>
          <td class="paramtype">sdbReplicaGroupHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbNodeHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get one of slave node of the specified shard, if no slave exists then get master. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The shard handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The slave node handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a97987a147b1f95ba874d2811897ce68e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetQueryMeta </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>orderBy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>hint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT64&#160;</td>
          <td class="paramname"><em>numToSkip</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT64&#160;</td>
          <td class="paramname"><em>numToReturn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the index blocks' or data blocks' infomations for concurrent query. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>One of the indexs in current collection, using default index to query if not provided eg:{"":"ageIndex"} </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numToSkip</td><td>Skip the first numToSkip documents, never skip if this parameter is 0 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numToReturn</td><td>Only return numToReturn documents, return all if this parameter is -1 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The handle of query result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ade4f8173f8f85f0d2b635920f4228c01"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetReplicaGroup </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pShardName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbReplicaGroupHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the specified shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pShardName</td><td>The name of shard </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The shard handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af5a36ce99ec6b67e3bc1ecd9ca91651f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetReplicaGroup1 </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbReplicaGroupHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the specified shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>The id of shard </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The shard handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a38e5ec26f26caecd771f6626956e28df"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetReplicaGroupName </td>
          <td>(</td>
          <td class="paramtype">sdbReplicaGroupHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">CHAR **&#160;</td>
          <td class="paramname"><em>ppShardName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the specified shard name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The shard handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ppShardName</td><td>The shard name </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8f78763177713c1d33c48a19e299620d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbGetSnapshot </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>snapType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>selector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>orderBy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the snapshot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">snapType</td><td>The snapshot type as below <pre class="fragment">SDB_SNAP_CONTEXTS         : Get the snapshot of all the contexts
SDB_SNAP_CONTEXTS_CURRENT : Get the snapshot of current context
SDB_SNAP_SESSIONS         : Get the snapshot of all the sessions
SDB_SNAP_SESSIONS_CURRENT : Get the snapshot of current session
SDB_SNAP_COLLECTIONS      : Get the snapshot of all the collections
SDB_SNAP_COLLECTIONSPACES : Get the snapshot of all the collection spaces
SDB_SNAP_DATABASE         : Get the snapshot of the database
SDB_SNAP_SYSTEM           : Get the snapshot of the system
SDB_SNAP_CATA             : Get the snapshot of the catalog
</pre></td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, match all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">select</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of current query </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a91b2c3ee458cf02dfa4b33b873f6c4b5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbInsert </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>obj</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Insert a bson object into current collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">obj</td><td>The inserted bson object, cannot be null </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a796324abbb96cb8a2edd6bb28d9868bb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbInsert1 </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson_iterator *&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Insert a bson object into current collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">obj</td><td>The inserted bson object, cannot be null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">id</td><td>The object id of inserted bson object in current collection </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a002d23a4b7205c5e903fff039c14ca25"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbInvalidateCache </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>invalidate cache on specified nodes. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The destination we want to invalidate. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aad47c76c04466fa7329c45c1eedad710"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BOOLEAN sdbIsReplicaGroupCatalog </td>
          <td>(</td>
          <td class="paramtype">sdbReplicaGroupHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Test whether the specified shard is catalog. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The shard handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">TRUE</td><td>The shard is catalog </td></tr>
    <tr><td class="paramname">FALSE</td><td>The shard is not catalog </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1202fb36bfd55e630011a1cf37abeec5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbIsValid </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BOOLEAN *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Judge whether the connection is valid. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">result</td><td>the output result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a06a57a52d4cd712932a5a61ab761dafd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbListBackup </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>selector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>orderBy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List the backups. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Contains configuration infomations for remove backups, list all the backups in the default backup path if null. The "options" contains 3 options as below. All the elements in options are optional. eg: {"GroupName":["shardName1", "shardName2"], "Path":"/opt/sequoiadb/backup", "Name":"backupName"} <pre class="fragment">GroupName   : Assign the backups of specifed shards to be list
Path        : Assign the backups in specifed path to be list, if not assign, use the backup path asigned in the configuration file
Name        : Assign the backups with specifed name to be list
</pre> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">selector</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cusor handle of result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a17a21e8ec710429171929ed2b55a0f96"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbListCollections </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List all collection of current database(not include temporary collection of temporary collection space) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of all collection names </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a77de96243b2649ba3ae110c4afee4647"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbListCollectionsInDomain </td>
          <td>(</td>
          <td class="paramtype">sdbDomainHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>cursor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>list the collections in domain. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The domain handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cusor handle of result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="acb311f4062f247f47801ddd13a83a342"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbListCollectionSpaces </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List all collection space of current database(include temporary collection space) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of all collection space names </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa6d4d7eeeff9ac9a6849959df8d51b34"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbListCollectionSpacesInDomain </td>
          <td>(</td>
          <td class="paramtype">sdbDomainHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>cursor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>list the collection spaces in domain. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The domain handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cusor handle of result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5dd88300784507649e3b95d15e2d7c41"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbListDomains </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>selector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>orderBy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List the domains. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">selector</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, automatically match the optimal hint if null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cusor handle of result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afd9f14b11631d48a17b6dd32a891a6dd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbListLobPieces </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>cursor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>list all the pieces in the lob </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cursor</td><td>The cursor handle of current query </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a40a36bfde58fd6b3199db60838970060"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbListLobs </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>cursor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>list all the lobs' meta data in current collection </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cursor</td><td>The cursor handle of current query </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad57bf123984366e3bf51c518a323dc8f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbListProcedures </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List store procedures. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection space space handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The condition of list </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aed46f4108418dfe2bc77cc4729f3d985"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbListReplicaGroups </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List all shards of current database. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of all shards </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2f38ac58336c5f70acf6e3472a672674"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbListTasks </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>selector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>orderBy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>hint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List the tasks. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">selector</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, automatically match the optimal hint if null </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cusor handle of result </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7f51279ca4717bed0d1a3db9542eb95d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbNext </td>
          <td>(</td>
          <td class="paramtype">sdbCursorHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>obj</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the next document of current cursor, and move forward. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The cursor handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">obj</td><td>The return bson object </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae2abc650e8e968d8716cceb2f3a030ae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbOpenLob </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson_oid_t *&#160;</td>
          <td class="paramname"><em>oid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbLobHandle *&#160;</td>
          <td class="paramname"><em>lobHandle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>create a large object </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oid</td><td>The object id </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>The open mode: SDB_LOB_CREATEONLY/SDB_LOB_READ </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">lobHandle</td><td>The handle of object </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac440372f496d8d0998091549d80a3b76"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbQuery </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>select</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>orderBy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>hint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT64&#160;</td>
          <td class="paramname"><em>numToSkip</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT64&#160;</td>
          <td class="paramname"><em>numToReturn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the matching documents in current collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">select</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, automatically match the optimal hint if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numToSkip</td><td>Skip the first numToSkip documents, never skip if this parameter is 0 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numToReturn</td><td>Only return numToReturn documents, return all if this parameter is -1 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of current query </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9f19793c0471593bbf4beb4722237f6c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbQuery1 </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>select</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>orderBy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>hint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT64&#160;</td>
          <td class="paramname"><em>numToSkip</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT64&#160;</td>
          <td class="paramname"><em>numToReturn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT32&#160;</td>
          <td class="paramname"><em>flag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the matching documents in current collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, return all the documents if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">select</td><td>The selective rule, return the whole document if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">orderBy</td><td>The ordered rule, never sort if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, automatically match the optimal hint if null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numToSkip</td><td>Skip the first numToSkip documents, never skip if this parameter is 0 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numToReturn</td><td>Only return numToReturn documents, return all if this parameter is -1 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flag</td><td>The query flag, default to be 0 <pre class="fragment">FLG_QUERY_FORCE_HINT(0x00000080)      : Force to use specified hint to query, if database have no index assigned by the hint, fail to query
FLG_QUERY_PARALLED(0x00000100)        : Enable paralled sub query
FLG_QUERY_WITH_RETURNDATA(0x00000200) : In general, query won't return data until cursor get from database,
                                        when add this flag, return data in query response, it will be more high-performance
</pre></td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of current query </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa9ebe005f3c9ef0509dea453b13a9e95"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbReadLob </td>
          <td>(</td>
          <td class="paramtype">sdbLobHandle&#160;</td>
          <td class="paramname"><em>lobHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32&#160;</td>
          <td class="paramname"><em>len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">CHAR *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32 *&#160;</td>
          <td class="paramname"><em>read</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>read lob </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lobHandle</td><td>The large object handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">len</td><td>The length want to read </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">buf</td><td>Put the data into buf </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">read</td><td>The length of read </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae6a0f8fb1e63b52d9279fecec56dc495"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sdbReleaseCollection </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release collection handle, the cursor handle of this collection will still available. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a03106641cb3c3cb077df3bfac8a9c135"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sdbReleaseConnection </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release the database connection handle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4793b898ad8a8accfe099941f4a0b9a1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sdbReleaseCS </td>
          <td>(</td>
          <td class="paramtype">sdbCSHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release the collection space handle, the collecion and cursor handle of this collection space will still available. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a77c5fe8bdc275da433c59c95773c783e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sdbReleaseCursor </td>
          <td>(</td>
          <td class="paramtype">sdbCursorHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release the cursor handle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The cursor handle </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3842610e8f6b748a2636ca3c2ab29b2f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sdbReleaseDomain </td>
          <td>(</td>
          <td class="paramtype">sdbDomainHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release the domain handle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>the domain handle </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9b01999a1061ab7def7196f670201aec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sdbReleaseNode </td>
          <td>(</td>
          <td class="paramtype">sdbNodeHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release the node handle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The node handle </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1d460c17d6c3a21e7637c1b681801831"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sdbReleaseReplicaGroup </td>
          <td>(</td>
          <td class="paramtype">sdbReplicaGroupHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release the shard handle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The shard handle </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac78aa54d3018dbbe8dfefe3ed07cd772"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbRemoveBackup </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remove the backups. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Contains configuration infomations for remove backups, remove all the backups in the default backup path if null. The "options" contains 3 options as below. All the elements in options are optional. eg: {"GroupName":["shardName1", "shardName2"], "Path":"/opt/sequoiadb/backup", "Name":"backupName"} <pre class="fragment">GroupName   : Assign the backups of specifed shards to be remove
Path        : Assign the backups in specifed path to be remove, if not assign, use the backup path asigned in the configuration file
Name        : Assign the backups with specifed name to be remove
</pre> </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a60532913ce2b87b8cfc5cf31eb54f76a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbRemoveLob </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson_oid_t *&#160;</td>
          <td class="paramname"><em>oid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>remove lob </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The handle of collection </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oid</td><td>The large object id </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a723476a2f912a185156d461e3a52a9bd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbRemoveNode </td>
          <td>(</td>
          <td class="paramtype">sdbReplicaGroupHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pHostName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pServiceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>configure</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>remove node in a given shard </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The shard handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pHostName</td><td>The hostname for the node </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pServiceName</td><td>The servicename for the node </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">configure</td><td>The configurations for the node </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6981d1af29ed418b36c0af64b77804fd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbRemoveReplicaGroup </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pShardName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remove the specified shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pShardName</td><td>The name of the shard </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a817ec7acf875dd9393773418917bb6be"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbRemoveUsr </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pUsrName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pPasswd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Delete an account. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pUsrName</td><td>The User's Name of the account </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pPasswd</td><td>The Password of the account </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Connection Success </td></tr>
    <tr><td class="paramname">Others</td><td>Connection Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a84b96ce32fe1cb77aab5d2e0548cdcd8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbResetSnapshot </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reset the snapshot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, usually specifies the node in sharding environment in standalone mode, this option is ignored </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8ec17406ed6e93c68777a02f8004db2b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbRmProcedure </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>spName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>remove a store procedure. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection space space handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">spName</td><td>The name of store procedure </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a692f6e159b4312c14f4bc89dd5b78e57"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbSeekLob </td>
          <td>(</td>
          <td class="paramtype">sdbLobHandle&#160;</td>
          <td class="paramname"><em>lobHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT64&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SDB_LOB_SEEK&#160;</td>
          <td class="paramname"><em>whence</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>seek the place to read </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lobHandle</td><td>The large object handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>The size of seek </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">whence</td><td>The whence of seek </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a006c3ff5dfeef9d670c25c49ca682584"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbSetSessionAttr </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the attributes of the session. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>The configuration options for session.The options are as below: <pre class="fragment">PreferedInstance : indicate which instance to respond read request in current session.
                  eg:{"PreferedInstance":"m"/"M"/"s"/"S"/"a"/"A"/1-7},
                  prefer to choose "read and write instance"/"read only instance"/"anyone instance"/instance1-insatance7,
                  default to be {"PreferedInstance":"A"}, means would like to choose anyone instance to respond read request such as query. 
</pre> </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a98715ae6dbc5cecc9034319f349f8888"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbSplitCLAsync </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pSourceShard</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pTargetShard</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson *&#160;</td>
          <td class="paramname"><em>pSplitCondition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson *&#160;</td>
          <td class="paramname"><em>pSplitEndCondition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT64 *&#160;</td>
          <td class="paramname"><em>taskID</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Split the specified collection from source shard to target by range. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pSourceShard</td><td>The source shard name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pTargetShard</td><td>The target shard name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pSplitCondition</td><td>The split condition </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">splitEndCondition</td><td>The split end condition or null eg:If we create a collection with the option {ShardingKey:{"age":1},ShardingType:"Hash",Partition:2^10}, we can fill {age:30} as the splitCondition, and fill {age:60} as the splitEndCondition. when split, the target shard will get the records whose age's hash value are in [30,60). If splitEndCondition is null, they are in [30,max). </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">taskID</td><td>The id of current task </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9e360779023d86ccfc388d853a1b9018"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbSplitCLByPercentAsync </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pSourceShard</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pTargetShard</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT64&#160;</td>
          <td class="paramname"><em>percent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT64 *&#160;</td>
          <td class="paramname"><em>taskID</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Split the specified collection from source shard to target by percent. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pSourceShard</td><td>The source shard name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pTargetShard</td><td>The target shard name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">percent</td><td>The split percent, Range:(0.0, 100.0] </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">taskID</td><td>The id of current task </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afdd8024467bb9cebeb56ed0860a900ef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbSplitCollection </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pSourceShard</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pTargetShard</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson *&#160;</td>
          <td class="paramname"><em>pSplitCondition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bson *&#160;</td>
          <td class="paramname"><em>pSplitEndCondition</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Split the specified collection from source shard to target by range. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pSourceShard</td><td>The source shard name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pTargetShard</td><td>The target shard name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pSplitCondition</td><td>The split condition </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">splitEndCondition</td><td>The split end condition or null eg:If we create a collection with the option {ShardingKey:{"age":1},ShardingType:"Hash",Partition:2^10}, we can fill {age:30} as the splitCondition, and fill {age:60} as the splitEndCondition. when split, the target shard will get the records whose age's hash value are in [30,60). If splitEndCondition is null, they are in [30,max). </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6edac6a62e5cb478bb9ccf336885fadc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbSplitCollectionByPercent </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pSourceShard</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pTargetShard</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT64&#160;</td>
          <td class="paramname"><em>percent</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Split the specified collection from source shard to target by percent. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pSourceShard</td><td>The source shard name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pTargetShard</td><td>The target shard name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">percent</td><td>The split percent, Range:(0.0, 100.0] </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aaac01736049b5416e5f713a18d929494"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbStartNode </td>
          <td>(</td>
          <td class="paramtype">sdbNodeHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start up the specified node. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The node handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1bdab5caaed8b3139b0ad2add6e1f8ed"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbStartReplicaGroup </td>
          <td>(</td>
          <td class="paramtype">sdbReplicaGroupHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start and activate the specified shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The shard handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa939e94c8f7d14f6db9ea71b9355f0f4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbStopNode </td>
          <td>(</td>
          <td class="paramtype">sdbNodeHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stop the specified node. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The node handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae64d2aea7f111bdc10cae164fe2adeaf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbStopReplicaGroup </td>
          <td>(</td>
          <td class="paramtype">sdbReplicaGroupHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stop the specified shard. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The shard handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a74365c8b08d4c2ff869c3bf7fbc7b0f6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbTraceResume </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resume trace. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae94493815e240596b22abd310c19f366"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbTraceStart </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32&#160;</td>
          <td class="paramname"><em>traceBufferSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">CHAR *&#160;</td>
          <td class="paramname"><em>component</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">CHAR *&#160;</td>
          <td class="paramname"><em>breakpoint</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start trace with given trace buffer size and component list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">traceBufferSize</td><td>The size for trace buffer on bytes </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">component</td><td>The trace component list as below, NULL for all components, separated by comma (,) <pre class="fragment">auth   : Authentication
bps    : BufferPool Services
cat    : Catalog Services
cls    : Cluster Services
dps    : Data Protection Services
mig    : Migration Services
msg    : Messaging Services
net    : Network Services
oss    : Operating System Services
pd     : Problem Determination
rtn    : RunTime
sql    : SQL Parser
tools  : Tools
bar    : Backup And Recovery
client : Client
coord  : Coord Services
dms    : Data Management Services
ixm    : Index Management Services
mon    : Monitoring Services
mth    : Methods Services
opt    : Optimizer
pmd    : Process Model
rest   : RESTful Services
spt    : Scripting
util   : Utilities
</pre> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">breakpoint</td><td>The functions need to break, separated by comma (,) </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a25ddd54c0f87c9764777e609add98289"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbTraceStatus </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sdbCursorHandle *&#160;</td>
          <td class="paramname"><em>handle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the current status for trace. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">handle</td><td>The cursor handle of current query </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aaa749db8aae32173840201f1882bde6b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbTraceStop </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>pDumpFileName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stop trace and dump into file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pDumpFileName</td><td>The file to dump, NULL for stop only </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7cd033383bdfa72c7d5a41138f96ea87"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbTransactionBegin </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Transaction begin. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a115edc69ce14ef4dde88ac63089dbd02"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbTransactionCommit </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Transaction commit. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a299542497f6a905756c27b694348482b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbTransactionRollback </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Transaction rollback. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The database connection handle </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="adc06f96d5957884294f2ba0da4d810e4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbUpdate </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>rule</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>hint</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Update the matching documents in current collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rule</td><td>The updating rule, cannot be null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, update all the documents if this parameter is null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, automatically match the optimal hint if null </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>It won't work to update the "ShardingKey" field, but the other fields take effect </dd></dl>

</div>
</div>
<a class="anchor" id="a9b63de6126ba54457ea7476a036e8869"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbUpsert </td>
          <td>(</td>
          <td class="paramtype">sdbCollectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>rule</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>condition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bson *&#160;</td>
          <td class="paramname"><em>hint</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Update the matching documents in current collection, insert if no matching. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The collection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rule</td><td>The updating rule, cannot be null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">condition</td><td>The matching rule, update all the documents if this parameter is null </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hint</td><td>The hint, automatically match the optimal hint if null </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>It won't work to upsert the "ShardingKey" field, but the other fields take effect </dd></dl>

</div>
</div>
<a class="anchor" id="a487b4a3fbe98f2cd8a2496c2a15cfec6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbWaitTasks </td>
          <td>(</td>
          <td class="paramtype">sdbConnectionHandle&#160;</td>
          <td class="paramname"><em>cHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SINT64 *&#160;</td>
          <td class="paramname"><em>taskIDs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SINT32&#160;</td>
          <td class="paramname"><em>num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Wait the tasks to finish. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cHandle</td><td>The connection handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">taskIDs</td><td>The array of task id </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num</td><td>The number of task id </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a974974b64b16e1f1808e929788bd6d08"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INT32 sdbWriteLob </td>
          <td>(</td>
          <td class="paramtype">sdbLobHandle&#160;</td>
          <td class="paramname"><em>lobHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CHAR *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>write lob </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lobHandle</td><td>The large object handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">buf</td><td>The buf of write </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">len</td><td>The length of write </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">SDB_OK</td><td>Operation Success </td></tr>
    <tr><td class="paramname">Others</td><td>Operation Fail </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri Oct 24 2014 13:32:10 for SequoiaDB by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.2
</small></address>
</body>
</html>
