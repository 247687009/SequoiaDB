<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SequoiaDB: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SequoiaDB
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacesdbclient.html">sdbclient</a></li><li class="navelem"><a class="el" href="classsdbclient_1_1__sdb.html">_sdb</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">sdbclient::_sdb Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>, including all inherited members.</p>
<table class="directory">
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>_sdb</b>() (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>activateReplicaGroup</b>(const CHAR *pName, _sdbReplicaGroup **replicaGroup)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>activateReplicaGroup</b>(const CHAR *pName, sdbReplicaGroup &amp;replicaGroup)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>backupOffline</b>(const bson::BSONObj &amp;options)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>cancelTask</b>(SINT64 taskID, BOOLEAN isAsync)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>closeAllCursors</b>()=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>connect</b>(const CHAR *pHostName, UINT16 port)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>connect</b>(const CHAR *pHostName, UINT16 port, const CHAR *pUsrName, const CHAR *pPasswd)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>connect</b>(const CHAR *pHostName, const CHAR *pServiceName)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>connect</b>(const CHAR *pHostName, const CHAR *pServiceName, const CHAR *pUsrName, const CHAR *pPasswd)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>connect</b>(const CHAR **pConnAddrs, INT32 arrSize, const CHAR *pUsrName, const CHAR *pPasswd)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>createCollectionSpace</b>(const CHAR *pCollectionSpaceName, INT32 iPageSize, _sdbCollectionSpace **cs)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>createCollectionSpace</b>(const CHAR *pCollectionSpaceName, INT32 iPageSize, sdbCollectionSpace &amp;cs)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>createCollectionSpace</b>(const CHAR *pCollectionSpaceName, const bson::BSONObj &amp;options, _sdbCollectionSpace **cs)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>createCollectionSpace</b>(const CHAR *pCollectionSpaceName, const bson::BSONObj &amp;options, sdbCollectionSpace &amp;cs)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>createDomain</b>(const CHAR *pDomainName, const bson::BSONObj &amp;options, _sdbDomain **domain)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>createDomain</b>(const CHAR *pDomainName, const bson::BSONObj &amp;options, sdbDomain &amp;domain)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>createReplicaCataGroup</b>(const CHAR *pHostName, const CHAR *pServiceName, const CHAR *pDatabasePath, const bson::BSONObj &amp;configure)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>createReplicaGroup</b>(const CHAR *pName, _sdbReplicaGroup **replicaGroup)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>createReplicaGroup</b>(const CHAR *pName, sdbReplicaGroup &amp;replicaGroup)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>createUsr</b>(const CHAR *pUsrName, const CHAR *pPasswd)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>crtJSProcedure</b>(const CHAR *code)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>disconnect</b>()=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>dropCollectionSpace</b>(const CHAR *pCollectionSpaceName)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>dropDomain</b>(const CHAR *pDomainName)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>evalJS</b>(_sdbCursor **cursor, const CHAR *code, SDB_SPD_RES_TYPE *type, const bson::BSONObj &amp;errmsg)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>evalJS</b>(sdbCursor &amp;cursor, const CHAR *code, SDB_SPD_RES_TYPE *type, const bson::BSONObj &amp;errmsg)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>exec</b>(const CHAR *sql, _sdbCursor **result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>exec</b>(const CHAR *sql, sdbCursor &amp;result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>execUpdate</b>(const CHAR *sql)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>flushConfigure</b>(const bson::BSONObj &amp;options)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>getCollection</b>(const CHAR *pCollectionFullName, _sdbCollection **collection)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>getCollection</b>(const CHAR *pCollectionFullName, sdbCollection &amp;collection)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>getCollectionSpace</b>(const CHAR *pCollectionSpaceName, _sdbCollectionSpace **cs)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>getCollectionSpace</b>(const CHAR *pCollectionSpaceName, sdbCollectionSpace &amp;cs)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>getDomain</b>(const CHAR *pDomainName, _sdbDomain **domain)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>getDomain</b>(const CHAR *pDomainName, sdbDomain &amp;domain)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>getList</b>(_sdbCursor **cursor, INT32 listType, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>getList</b>(sdbCursor &amp;cursor, INT32 listType, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>getObj</b>() (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>getReplicaGroup</b>(const CHAR *pName, _sdbReplicaGroup **result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>getReplicaGroup</b>(const CHAR *pName, sdbReplicaGroup &amp;result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>getReplicaGroup</b>(INT32 id, _sdbReplicaGroup **result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>getReplicaGroup</b>(INT32 id, sdbReplicaGroup &amp;result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>getSnapshot</b>(_sdbCursor **cursor, INT32 snapType, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>getSnapshot</b>(sdbCursor &amp;cursor, INT32 snapType, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>isValid</b>(BOOLEAN *result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>listBackup</b>(_sdbCursor **cursor, const bson::BSONObj &amp;options, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>listBackup</b>(sdbCursor &amp;cursor, const bson::BSONObj &amp;options, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>listCollections</b>(_sdbCursor **result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>listCollections</b>(sdbCursor &amp;result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>listCollectionSpaces</b>(_sdbCursor **result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>listCollectionSpaces</b>(sdbCursor &amp;result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>listDomains</b>(_sdbCursor **cursor, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject, const bson::BSONObj &amp;hint=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>listDomains</b>(sdbCursor &amp;cursor, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject, const bson::BSONObj &amp;hint=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>listProcedures</b>(_sdbCursor **cursor, const bson::BSONObj &amp;condition)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>listProcedures</b>(sdbCursor &amp;cursor, const bson::BSONObj &amp;condition)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>listReplicaGroups</b>(_sdbCursor **result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>listReplicaGroups</b>(sdbCursor &amp;result)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>listTasks</b>(_sdbCursor **cursor, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject, const bson::BSONObj &amp;hint=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>listTasks</b>(sdbCursor &amp;cursor, const bson::BSONObj &amp;condition=_sdbStaticObject, const bson::BSONObj &amp;selector=_sdbStaticObject, const bson::BSONObj &amp;orderBy=_sdbStaticObject, const bson::BSONObj &amp;hint=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>removeBackup</b>(const bson::BSONObj &amp;options)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>removeReplicaGroup</b>(const CHAR *pName)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>removeUsr</b>(const CHAR *pUsrName, const CHAR *pPasswd)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>resetSnapshot</b>(const bson::BSONObj &amp;condition=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>rmProcedure</b>(const CHAR *spName)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>setSessionAttr</b>(const bson::BSONObj &amp;options=_sdbStaticObject)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>transactionBegin</b>()=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>transactionCommit</b>()=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>transactionRollback</b>()=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"class="even"><td class="entry"><b>waitTasks</b>(const SINT64 *taskIDs, SINT32 num)=0 (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>~_sdb</b>() (defined in <a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a>)</td><td class="entry"><a class="el" href="classsdbclient_1_1__sdb.html">sdbclient::_sdb</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
</table></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri Oct 24 2014 13:32:16 for SequoiaDB by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.2
</small></address>
</body>
</html>
