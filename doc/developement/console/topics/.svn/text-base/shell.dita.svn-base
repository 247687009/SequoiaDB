<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="developement_console_shell">
  <title>SequoiaDB shell 入门</title>
  <body>
    <p>SequoiaDB 自带一个 JavaScript shell，可以从命令行与 SequoiaDB 实例交互。这个 shell 非常有用，通过它可以执行管理操作、检查运行实例，亦或做其他尝试。这个 shell 对于使用 SequoiaDB 来说是至关重要的工具。</p>
    <section>
      <title>运行 shell</title>
      <p>运行 sequoiadb（./sequoiadb）启动 shell：<codeblock>$ ./sdb
Welcome to SequoiaDB shell!
help() for help, Ctrl+c or quit to exit
></codeblock></p>
      <p>shell 在启动时需要手动连接到 SequoiaDB 服务器，所以要确保在使用 shell 之前启动 sequoiadb。</p>
      <p>shell 是一个功能完备的 JavaScript 解析器，可以运行任何 JavaScript 程序。如：<codeblock>> y=200
200
> y/20
10
></codeblock></p>
      <p>还可以充分利用 JavaScript 的标准库。<codeblock>> new Date("2013/04/17");
Wed Apr 17 2013 00:00:00 GMT+0800 (CST)
> "hello,world".replace("world","SequoiaDB")
hello,SequoiaDB
></codeblock></p>
      <p>也可以定义和调用 JavaScript 函数：<codeblock>> function sdb(n){
... if(n&lt;=1)return 1;
... else return n*sdb(n-1);
... }
> sdb(4);
24
></codeblock></p>
      <note>可以使用多行命令。shell 会检测输入的 JavaScript 语句是否完整，如没有写完还可以接着写下一行。</note>
    </section>
    <section>
      <title>SequoiaDB 客户端</title>
      <p>启动 shell 可以运行任意 JavaScript 程序，但是 shell 的真正威力在于它是一个独立的 SequoiaDB 客户端。开启的时候，可以使用 db = new Sdb("localhost",11810)命令连接到本地 SequoiaDB 服务器的数据库，并将这个数据库连接赋值给全局变量 db。这个变量是通过 shell 访问 SequoiaDB 的主要入口点。</p>
      <p>shell 还有一些非 JavaScript 语法的扩展，例如：<codeblock>> db
localhost:11810
> db.createCS("foo")   //创建集合空间
localhost:11810.foo</codeblock></p>
      <p>可以通过 db 变量来访问其中的集合空间，如 db.foo 返回当前数据库的 foo 集合空间。再通过集合空间来访问其中的集合，如 db.foo.bar，返回返回当前数据库 foo 集合空间的集合 bar。既然可以再 shell 中访问集合，那么基本上就可以执行几乎所有的数据库操作了。</p>
    </section>
  </body>
  <related-links>
    <link href="../../basics/topics/shell.dita"></link>
  </related-links>
</topic>