<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_l3k_vdn_jl">
  <title>C++ BSON 简介</title>
  <body>
    <section>
      <title>C++ BSON 主要类</title>
      <p>C++ BSON 用到4个类：</p>
      <p><b>bson::BSONObj</b>：创建 BSONObj 对象。</p>
      <p><b>bson::BSONElement</b>：BSONObj对象由 BSONElement 对象组成，即 BSONElement 对象为 BSONObj 对象的字段或者元素，它是键值对。</p>
      <p><b>bson::BSONObjBuilder</b>：BSONObjBuilder 用来实例化 BSONObj 对象。</p>
      <p><b>bson::BSONObjlterator</b>：BSONObjlterator 用来遍历 BSONObj 对象中的元素。</p>
      命名空间 bson 中定义了这些类的类型为：
      <p><b>typedef bson::BSONElement be</b>;</p>
      <p><b>typedef bson::BSONObj bo</b>;</p>
      <p><b>typedef bson::BSONObjBuilder bob</b>;</p>
      <p>另外，可以使用 bo::iterator 代替 BSONObjlterator。</p>
    </section>
    <section>
      <title>建立对象</title>
      <p>以下简单介绍如何创建用 CPP BSON 实例。详细内容请查阅 <xref href="..\..\..\..\bsoncpp\html\index.html" format="html">C++ BSON API</xref></p>
      <ul>
        <li>使用 BSONObject，BSONObjBuilder 建立对象<codeblock>#include "client.hpp"
…
using namespace bson ;
BSONObj obj ;
BSONObjBuilder b ;

b.append("name","sam") ;
b.append("age","24") ;
obj = b.obj() ;
或者
obj = BSONObjBuilder().genOID().append("name","sam").append("age",24).obj() ;</codeblock>
          <p>另外，可以使用数据流的方法建立 BSONObj 对象。</p><codeblock>BSONObj obj ;
BSONObjBuilder b ;
b&lt;&lt;"name"&lt;&lt;"sam"&lt;&lt;"age"&lt;&lt;"24" ;
obj = b.obj() ;</codeblock>
        </li>
        <li>使用宏 BSON 建立对象 <p>C++ BSON 中定义还定义了一个 BSON 的宏，可以用它来快速地建立 BSONObj 对象。</p><codeblock>BSONObj obj ;
// int
obj = BSON( "a"&lt;&lt;1 ) ; 
// float
obj = BSON( "b"&lt;&lt;3.14159265359 ) ; 
// string
obj = BSON( "foo"&lt;&lt;"bar" ) ; 
// OID
obj = BSON( GENOID ) ; 
// bool
obj = BSON( "flag"&lt;&lt;true"ret"&lt;&lt;false ) ;
// object
obj = BSON( "d"&lt;&lt;BSON("e"&lt;&lt;"hi!") ) ; 
// array
obj = BSON( "phone" &lt;&lt; BSON_ARRAY( "13800138123" &lt;&lt; "13800138124" ) ) ;
// others, less then, greater then, etc
obj = BSON( "g"&lt;&lt;LT&lt;&lt;99 ) ; </codeblock>
        </li>
        <li>使用 fromjson 接口建立对象
          <p>此外，可以使用 fromjson.hpp 中的 fromjson() 将 json 字符串转换成 BSONObj 对象。</p><codeblock>string s("{name:\"sam\"}") ;
fromjson ( s, obj ) ;
或者
const char *r ="{
                   firstName:\"Sam\",\
                   lastName:\"Smith\",age:25,id:\"count\",\
                   address:{streetAddress: \"25 3ndStreet\",\
                   city:\"NewYork\",state:\"NY\",postalCode:\"10021\"},\
                   phoneNumber:[{type: \"home\",number:\"212555-1234\"}]}" ;
fromjson ( r, obj ) ;</codeblock>
        </li>
      </ul>
    </section>
  </body>
</topic>