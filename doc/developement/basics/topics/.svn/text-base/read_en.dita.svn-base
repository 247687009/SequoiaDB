<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="developement_basics_read_en">
  <title>Read</title>
  <body>
    <p>Of the basic database operations(i.e.CRUD), read operatios are these those retrieve records or
      documents from a collection in SequoiaDB, and include all operations that return a cursor in
      response to application request data.</p>
    <p>This dacument describes the syntax and structure of the queries applications use to request
      data from SequoiaDB and how different factors affect the efficiency of reads.</p>
    <note><p>All of the examples in this document use the SequoiaDB shell interface.</p></note>
    <section>
      <title>find()</title>
      <p>we use <xref href="../../../references/methods/topics/find_en.dita"><i>find</i></xref>method
        to read records from SequoiaDB. the <i>find</i>method is the main method to select records
        from collections and it returns a cursor which contains a lot of records. it's grammatical
        structure as follows:</p>
      <codeblock>db.collectionspace.collection.find([cond],[sel])</codeblock>
      <p>The corresponding opration in sql: the method of <i>find()</i> is simalar with
          <i>select</i> statement :</p>
      <p><b>.</b> the<i> [cond]</i> parameter corresponds to <i>where</i> statement</p>
      <p><b>.</b> the [sel] parameter corresponds to the list of fields in the result set</p>
      <p>there is a record in collection like this:</p>
      <codeblock>    {
  "_id":1,
  "name":{
     "first" : "Tom",
     "second":"David"
       },
  "age":23
  "birth":"1990-04-01",
  "phone":[
      10086,
      10010,
      10000
     ],
  "family":[
      {
     "Dad":"Kobe",
     "phone":139123456
      },
      {
      "Mom":"Julie",
      "phone":189123456
       }
    ]
 }     </codeblock>
      
    </section>
    <section>
      <title>return all the records from the collection</title>
      <p>If there is no <i>cond</i> parameter, the method of
          <i>db.collectionspace.colletion.find()</i> returns all the records from the collection. The
        following operation select all records in the collection named <i>bar</i> which in the
        collectionspace named<i> foo</i>:</p>
      <p><codeblock>db.foo.bar.find()</codeblock></p>
    </section>
    <section>
      <title>return  records that match query conditions</title>
      <ul>
        <li>Equality match<p>The following operation  select the records in the collection
              <i>bar</i> where the<i> age</i> filed has the value 23</p><p>
            <codeblock> db.foo.bar.find({age:23})</codeblock>
          </p></li>
        <li><p>use<xref href="../../../references/console/topics/console_en.dita"><i> operators</i></xref></p>
          <p>The following operation select the records in the collection <i>bar</i> where the
              <i>age</i> field is more than(<xref href="../../../references/console/topics/gt_en.dita"
              >$gt</xref>)20</p><p>
            <codeblock>db.foo.bar.find({age:{<xref href="../../../references/console/topics/gt_en.dita">$gt</xref>:20}})</codeblock>
          </p></li>
        <li><p>On array </p>
          <p>(1)query an element, The following operation returns a cursor to all records in the
              <i>bar</i> collection where the array field <i>phone</i> contains the element
            '10086':</p>
          <p><codeblock> db.foo.bar.find({"phone":10086})</codeblock></p>
          <p>(2)query array element which is BSON Object. The following operation return a cursor to
            all records in the <i>bar </i>collection where <i>family</i> array contains a
            subdocument element that contains the <i>Dad</i> field equal to 'Kobe' and the
              <i>phone</i> field equal to '139123456':</p>
          <p><codeblock> db.foo.bar.find( 
  {
  "family":{
    $elemMatch: {
     "Dad":"Kobe",
     "phone":139123456
   }
  }
  })</codeblock></p>
        </li>
        <li><p>query on subdocument </p>
          <p>The following operation returns a cursor to all documents in the <i>bar</i> collection
            where the subdocument name is exactly {first:"Tom"}</p>
          <p><codeblock> db.foo.bar.find(
    {
     "name":{ 
     "first":"Tom"
      }
    }
   )</codeblock></p>
          <p>It can also be written
            as:<codeblock> db.foo.bar.find(
     {
     "name.first":"Tom"
     }
   )</codeblock></p>
        </li>
        
      </ul>
    </section>
    
    <section>
      <title>specity the field of the returned records</title>
      <p>If specity the <i>sel</i> parameter of  <i>find</i> method, then only return the field
        within sel parameter:</p>
      <p>
        <codeblock>db.foo.bar.find(null,{name:""})</codeblock>
      </p>
      <note>
        <p>If a records doesn't contain the specity field(as:people), SequoiaDB will default return.
          For example:</p>
        <codeblock>db.foo.bar.find({},{name:"",people:""})
return:{
       "name":{
                "fist":"Tom",
                "second":"David"
              },
        "people":""
        }</codeblock>
      </note>
    </section>
    <section>
      <title><i>find()</i> more information</title>
      <p>Execute db.foo.bar.find().help(), then will see more methods of <i>find()</i>
      </p>
      <ul>
        <li>
          <p>cursor.sort(&lt;sort>)</p>
          <p>The method of sort() is used to order by the specified field, syntax:
            sort({"field1":1|-1,"field2":1|-1,...}), '1' stand for Ascending, '-1' stand for
            Descending. If the the method of <i>find </i>doesn't specity the content of sel
            parameter, then<i> sort()</i> will order by the <i>sort </i>parameter, but if <i>sel
            </i>parameter specity the returned field, then <i>sort()</i> can only order by the field
            included in the <i>sel</i> parameter. For example:</p>
          <p>
            <codeblock>db.foo.bar.find().sort({age:1})   //return all the records in the <i>bar</i> collection and order by the value of <i>age</i> field in ASC</codeblock>
            <codeblock>db.foo.bar.find(null,{name:""}).sort({age:1})  //this operation actually can't reach the purpose of sorting.</codeblock>
          </p>
        </li>
        <li>cursor.hint(&lt;hint>)<p>add indexes
            to speed up the query speed, assuming there is a index named 'testIndex':</p><p>
            <codeblock>db.foo.bar.find().hint({"":"testIndex"})</codeblock>
          </p></li>
        <li>cursor.limit(&lt;num>)<p>limit the
            number of records in the result set:</p><p>
            <codeblock>db.foo.bar.find().limit(3) //return the first three records in the result set</codeblock>
          </p></li>
        <li>cursor.skip(&lt;num>)<p>the skip()
            method controls the point of the results set, that is skipping the first 'num' records,
            begin to return from the 'num+1' records:</p><p>
            <codeblock>db.foo.bar.find().skip(5)  //skipping the first 5 records in the <i>bar</i> collection</codeblock>
          </p></li>
        <li>
          <p>use cursor to control the returned records</p>
          <p><codeblock><xref href="../../../references/methods/topics/ccurrent_en.dita">db.foo.bar.find().current()</xref> //return the record that the current cursor point to 
<!--<xref href="../../../references/methods/topics/deleteCurrent_en.dita">db.foo.bar.find().deleteCurrent()</xref> //delete the record that the current cursor point to-->
<xref href="../../../references/methods/topics/next_en.dita">db.foo.bar.find().next()</xref> //return the next record that the current cursor point to 
<!--<xref href="../../../references/methods/topics/updateCurrent_en.dita">db.foo.bar.find().updateCurrent()</xref> //update the record that the current cursor point to--> 
<xref href="../../../references/methods/topics/dbcount_en.dita">db.foo.bar.find().count()</xref>//return the number of records that the current cursor point to
            
<xref href="../../../references/methods/topics/csize_en.dita">db.foo.bar.find().size()</xref> //return the distance from the current cursor to the final cursor
            
<xref href="../../../references/methods/topics/toArray_en.dita">db.foo.bar.find().toArray()</xref> //return the result sets with array form</codeblock></p>
        </li>
      </ul>
    </section>
  </body>
  <related-links>
    <link href="create_en.dita" format="dita" type="topics"></link>
    <link href="update_en.dita" format="dita" type="topics"></link>
  </related-links>
</topic>
