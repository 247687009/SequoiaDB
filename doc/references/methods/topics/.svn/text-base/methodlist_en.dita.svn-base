<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="references_method_methodlist">
  <title>Sequoiadb javascript Method List</title>
  <body>
    <p>Sequoiadb is a kind of file-based non-relation database. It uses<xref
        href="../../../introduction/topics/datamodel_en.dita">JSON</xref> data module. <ul>
        <li>If users want to match elements nested in an object. They can use "." ("0x2E" in ASCII)
          to connect parent element and child element. For example, in this object:
          <codeblock>{ name:"tom",address:{ street:{ street1:"1024 Wall Street",street2:"University Drive"},zipcode: 100000 } }</codeblock>If
          users want to match the element "street" in the object "street" in the object "address",
          they can get it in this
          way:<codeblock>{ "address.street.street1":{ <xref href="../../console/topics/exists_en.dita">$exists</xref> : 1 } }</codeblock></li>
        <li>If there is an array in an object, users can get the 1st, 2nd, and 3rd element by "0",
          "1" and "2" respectively. For example, this object cantains am
          array:<codeblock>{ name: "tom", phone: [ "13175824", "1528345"] }</codeblock> Users can
          get the 1st element in the array in this way:
          <codeblock>{ "phone.0 ":"13175824" }</codeblock></li>
      </ul></p>
    <section><title>Database Operation Methods</title>
      <p>
        <simpletable 
        id="references_method_databasemethod_table">
        <sthead>
          <stentry>Method Name</stentry>
          <stentry>Description</stentry>
          <stentry>Sample</stentry>
        </sthead>
        <strow>
          <stentry><xref href="createCS_en.dita">db.createCS()</xref></stentry>
          <stentry>Create a collectin space</stentry>
          <stentry>db.createCS("foo")</stentry>
        </strow>
        <strow>
          <stentry><xref href="dropCS_en.dita">db.dropCS()</xref></stentry>
          <stentry>Delete a collection space</stentry>
          <stentry>db.dropCS("foo")</stentry>
        </strow>
        <strow>
          <stentry><xref href="getCS_en.dita">db.getCS()</xref></stentry>
          <stentry>Get the quotation of a collection space  </stentry>
          <stentry>db.getCS("foo")</stentry>
        </strow>
        <strow>
          <stentry><xref href="createRG_en.dita">db.createRG()</xref></stentry>
          <stentry>Create a replset</stentry>
          <stentry>db.createRG("rg")</stentry>
        </strow>
        <strow>
            <stentry><xref href="removeRG_en.dita">db.removeRG()</xref></stentry>
            <stentry>Remove a replset</stentry>
            <stentry>db.removeRG("rg")</stentry>
        </strow>
        <strow>
          <stentry><xref href="getRG_en.dita">db.getRG()</xref></stentry>
          <stentry>Get the quotation of a replset</stentry>
          <stentry>db.getRG("rg")</stentry>
        </strow>
          
        <strow>
          <stentry><xref href="dblist_en.dita">db.list()</xref></stentry>
          <stentry>Enumerate lists</stentry>
          <stentry>db.list()</stentry>
        </strow>
        <strow>
          <stentry><xref href="listCollectionSpaces_en.dita">db.listCollectionSpaces()</xref></stentry>
          <stentry>Enumerate collection spaces</stentry>
          <stentry>db.listCollectionSpaces()</stentry>
        </strow>
        <strow>
          <stentry><xref href="listCollections_en.dita">db.listCollections()</xref></stentry>
          <stentry>Enumerate collections</stentry>
          <stentry>db.listCollections()</stentry>
        </strow>
          
        <strow>
          <stentry><xref href="listReplicaGroups_en.dita">db.listReplicaGroups()</xref></stentry>
          <stentry>Enumerate replsets</stentry>
          <stentry>db.listReplicaGroups()</stentry>
        </strow>
          
        <strow>
          <stentry><xref href="dbsnapshot_en.dita">db.snapshot()</xref></stentry>
          <stentry>Enumerate snapshots</stentry>
          <stentry>db.snapshot(0)</stentry>
        </strow>
        <strow>
          <stentry><xref href="resetSnapshot_en.dita">db.resetSnapshot()</xref></stentry>
          <stentry>Reset a snapshot</stentry>
          <stentry>db.resetSnapshot(0)</stentry>
        </strow>
          
        <strow>
          <stentry><xref href="startRG_en.dita">db.startRG()</xref></stentry>
          <stentry>Start a replset</stentry>
          <stentry>db.startRG("rgName")</stentry>
        </strow>
          <strow>
            <stentry><xref href="createUsr_en.dita">db.createUsr()</xref></stentry>
            <stentry>Create a database user</stentry>
            <stentry>db.createUsr("root","admin")</stentry>
          </strow>
          <strow>
            <stentry><xref href="dropUsr_en.dita">db.dropUsr()</xref></stentry>
            <stentry>Delete a databse user</stentry>
            <stentry>db.dropUsr("root","admin")</stentry>
          </strow>
          <strow>
          <stentry><xref href="transBegin_en.dita">db.transBegin()</xref></stentry>  
          <stentry>Open the rtansaction</stentry>
          <stentry>db.transBegin()</stentry>
          </strow>
          <strow>
            <stentry><xref href="transCommit_en.dita">db.transCommit()</xref></stentry>
            <stentry>Commit the transaction</stentry>
            <stentry>db.transCommit()</stentry>
          </strow>
          <strow>
            <stentry><xref href="transRollback_en.dita">db.transRollback()</xref></stentry>
            <stentry>Transaction rollback</stentry>
            <stentry>db.transRollback()</stentry>
          </strow>
          
          <strow>
            <stentry><xref href="createProcedure_en.dita">db.createProcedure()</xref></stentry>
            <stentry>Create a stored procedure functions</stentry>
            <stentry>db.createProcedure(function sum(i,j){return i+j;})</stentry>
          </strow>
          <strow>
            <stentry><xref href="removeProcedure_en.dita">db.removeProcedure()</xref></stentry>
            <stentry>Delete stored procedure function that already exists</stentry>
            <stentry>db.removeProcedure("sum")</stentry>
          </strow>
          <strow>
            <stentry><xref href="listProcedures_en.dita">db.listProcedures()</xref></stentry>
            <stentry>Enumeration stored procedure functions</stentry>
            <stentry>db.listProcedures()</stentry>
          </strow>
          <strow>
            <stentry><xref href="eval_en.dita">db.eval()</xref></stentry>
            <stentry>Call a stored procedure or function directly using javaScript statement</stentry>
            <stentry>db.eval('db.foo.bar')</stentry>
          </strow>
      </simpletable>
      </p>
    </section>
    <section><title>Collection Space Method </title>
      <simpletable 
        id="references_method_spacemethod_table">
        <sthead>
          <stentry>Method Name</stentry>
          <stentry>Description</stentry>
          <stentry>Sample</stentry>
        </sthead>
      <strow>
        <stentry><xref href="createCL_en.dita">db.collectionspace.createCL()</xref></stentry>
        <stentry>Create a collection</stentry>
        <stentry>db.foo.createCL("bar")</stentry>
      </strow>
      <strow>
        <stentry><xref href="dropCL_en.dita">db.collectionspace.dropCL()</xref></stentry>
        <stentry>Delete a collection</stentry>
        <stentry>db.foo.dropCL("bar")</stentry>
      </strow>
      <strow>
        <stentry><xref href="getCL_en.dita">db.collectionspace.getCL()</xref></stentry>
        <stentry>Get the quotation of a collection </stentry>
        <stentry>db.foo.getCL("bar")</stentry>
      </strow>
    </simpletable>
    </section>
    <section><title>Collection Method</title>
      <simpletable 
        id="references_method_collectionmethod_table">
        <sthead>
          <stentry>Method Name</stentry>
          <stentry>Description</stentry>
          <stentry>Sample</stentry>
        </sthead>
        <strow>
          <stentry><xref href="dbinsert_en.dita">db.collectionspace.collection.insert()</xref></stentry>
          <stentry>Insert a record into a collection </stentry>
          <stentry>db.foo.bar.insert({name:"Tom",age:20,phone:[123,345]})</stentry>
        </strow>
        <strow>
          <stentry><xref href="dbcount_en.dita">db.collectionspace.collection.count()</xref></stentry>
          <stentry>Count the records in a collection</stentry>
          <stentry>db.foo.bar.count({age:{$gt:20}})</stentry>
        </strow>
        <strow>
          <stentry><xref href="find_en.dita">db.collectionspace.collection.find()</xref></stentry>
          <stentry>Find records</stentry>
          <stentry>db.foo.bar.find()</stentry>
        </strow>
        <strow>
          <stentry><xref href="dbaggregate_en.dita">db.collectionspace.collection.aggregate()</xref></stentry>
          <stentry>Gather records</stentry>
          <stentry>db.foo.bar.aggregate({$project:{name:1,age:1}},{$group:{_id:"$sex"}})</stentry>
        </strow>
        <strow>
          <stentry><xref href="remove_en.dita">db.collectionspace.collection.remove()</xref></stentry>
          <stentry>Delete records</stentry>
          <stentry>db.foo.bar.remove()</stentry>
        </strow>
        <strow>
          <stentry><xref href="createIndex_en.dita"
            >db.collectionspace.collection.createIndex()</xref></stentry>
          <stentry>Create an index</stentry>
          <stentry>db.foo.bar.createIndex("myIndex",{age:-1},false)</stentry>
        </strow>
        <strow>
          <stentry><xref href="dropIndex_en.dita"
            >db.collectionspace.collection.dropIndex()</xref></stentry>
          <stentry>Delete an index</stentry>
          <stentry>db.foo.bar.dropIndex("myIndex")</stentry>
        </strow>
        <strow>
          <stentry><xref href="getIndex_en.dita"
            >db.collectionspace.collection.getIndex()</xref></stentry>
          <stentry>Get the quotation of an index</stentry>
          <stentry>db.foo.bar.getIndex("myIndex")</stentry>
        </strow>
        <strow>
          <stentry><xref href="listIndexes_en.dita"
            >db.collectionspace.collection.listIndexes()</xref></stentry>
          <stentry>Enumerate indexes</stentry>
          <stentry>db.foo.bar.listIndexes()</stentry>
        </strow>
        <!-- 
        <strow>
          <stentry><xref href="rename_en.dita">db.collectionspace.collection.rename()</xref></stentry>
          <stentry>重命名集合</stentry>
          <stentry/>
        </strow>
        -->
        <strow>
          <stentry><xref href="dbupdate_en.dita">db.collectionspace.collection.update()</xref></stentry>
          <stentry>Update records</stentry>
          <stentry>db.foo.bar.update({$set:{age:25}},{age:{$lte:20}},{"":"myIndex"})</stentry>
        </strow>
        <strow>
          <stentry><xref href="upsert_en.dita">db.collectionspace.collection.upset()</xref></stentry>
          <stentry>Update records</stentry>
          <stentry>db.foo.bar.update({$set:{age:25}},{a:1},{"":"myIndex"})</stentry>
        </strow>
        
        <strow>
          <stentry><xref href="dbsplit_en.dita">db.collectionspace.collection.split()</xref></stentry>
          <stentry>Split a collection</stentry>
          <stentry>db.foo.bar.split("sourceRG","targetRG",{age:20})</stentry>
        </strow>
        
      </simpletable>
    </section>

    <section><title>Cluster Method</title>
      <simpletable 
        id="references_method_clustermethod_table">
        <sthead>
          <stentry>Method Name</stentry>
          <stentry>Description</stentry>
          <stentry>Sample</stentry>
        </sthead>
        <strow>
          <stentry><xref href="rgstart_en.dita">rg.start()</xref></stentry>
          <stentry>Start replset</stentry>
          <stentry>rg.start()             </stentry>
        </strow>
        <strow>
          <stentry><xref href="getDetail_en.dita">rg.getDetail()</xref></stentry>
          <stentry>Get information of replset</stentry>
          <stentry>rg.getDetail()</stentry>
        </strow>
        <strow>
          <stentry><xref href="createNode_en.dita">rg.createNode()</xref></stentry>
          <stentry>Create node</stentry>
          <stentry>rg.createNode(&lt;hostname>,&lt;port>,&lt;path>)</stentry>
        </strow>
        <strow>
          <stentry><xref href="removeNode_en.dita">rg.removeNode()</xref></stentry>
          <stentry>Delete node</stentry>
          <stentry>rg.removeNode(&lt;host>,&lt;service>[,&lt;config>])</stentry>
        </strow>
        <strow>
          <stentry><xref href="getMaster_en.dita">rg.getMaster()</xref></stentry>
          <stentry>Get information of master node</stentry>
          <stentry>rg.getMaster()</stentry>
        </strow>
        <strow>
          <stentry><xref href="getSlave_en.dita">rg.getSlave()</xref></stentry>
          <stentry>Get information of slave node</stentry>
          <stentry>rg.getSlave()</stentry>
        </strow>
        <strow>
          <stentry><xref href="getNode_en.dita">rg.getNode()</xref></stentry>
          <stentry>Get information of all nodes </stentry>
          <stentry>rg.getNode()</stentry>
        </strow>
        <strow>
          <stentry><xref href="rgstop_en.dita">rg.stop()</xref></stentry>
          <stentry>Stop a replset</stentry>
          <stentry>rg.stop()</stentry>
        </strow>
      </simpletable>
    </section>
    <section><title>Node Method</title>
      <simpletable 
      id="references_method_nodemethod_table">
      <sthead>
        <stentry>Method Name</stentry>
        <stentry>Description</stentry>
        <stentry>Sample</stentry>
      </sthead>
      <strow>
        <stentry><xref href="nodestart_en.dita">node.start()</xref></stentry>
        <stentry>Start a node</stentry>
        <stentry>node.start()</stentry>
      </strow>
      <strow>
        <stentry><xref href="nodeconnect_en.dita">node.connect()</xref></stentry>
        <stentry>Get the hostname and port of a connected node</stentry>
        <stentry>node.connect()</stentry>
      </strow>
      <strow>
        <stentry><xref href="getHostName_en.dita">node.getHostName()</xref></stentry>
        <stentry>Get the host name of a node</stentry>
        <stentry>node.getHostName()</stentry>
      </strow>
      <strow>
        <stentry><xref href="getServiceName_en.dita">node.getServiceName()</xref></stentry>
        <stentry>Get the server name of a node</stentry>
        <stentry>node.getServiceName()</stentry>
      </strow>
      <strow>
        <stentry><xref href="getNodeDetail_en.dita">node.getNodeDetail()</xref></stentry>
        <stentry>Get information of a node</stentry>
        <stentry>node.getNodeDetail()</stentry>
      </strow>
      <strow>
        <stentry><xref href="nodestop_en.dita">node.stop()</xref></stentry>
        <stentry>Stop a node </stentry>
        <stentry>node.stop()</stentry>
      </strow>
      </simpletable>
    </section>

    <section>
      <title>Cursor Method</title>
      <simpletable>
        <sthead>
          <stentry>Method Name</stentry>
          <stentry>Description</stentry>
          <stentry>Sample</stentry>
        </sthead>
        <strow>
          <stentry><xref href="csort_en.dita">cursor.sort()</xref></stentry>
          <stentry>Sort result set according to the specified field</stentry>
          <stentry>db.foo.bar.find().sort({age:1})</stentry>
        </strow>
        <strow>
          <stentry><xref href="hint_en.dita">cursor.hint()</xref></stentry>
          <stentry>Go through result set according to the specified index</stentry>
          <stentry>db.foo.bar.find().hint({"":"Index"})</stentry>
        </strow>
        <strow>
          <stentry><xref href="climit_en.dita">cursor.limit()</xref></stentry>
          <stentry>Specify the amount of records to be returned in the result set</stentry>
          <stentry>db.foo.bar.find().limit(10)</stentry>
        </strow>
        <strow>
          <stentry><xref href="cskip_en.dita">cursor.skip()</xref></stentry>
          <stentry>Specify the first record to be returned in the result set </stentry>
          <stentry>db.foo.bar.find().skip(10)</stentry>
        </strow>
        <strow>
          <stentry><xref href="ccurrent_en.dita">cursor.current()</xref></stentry>
          <stentry>Return the record that the current cursor currently pionts to </stentry>
          <stentry>db.foo.bar.find().current()</stentry>
        </strow>
        <!--<strow>
          <stentry><xref href="deleteCurrent_en.dita">cursor.deleteCurrent()</xref></stentry>
          <stentry>Delete the record that the current cursor currently pionts to </stentry>
          <stentry>db.foo.bar.find().deleteCurrent()</stentry>
        </strow>-->
        <strow>
          <stentry><xref href="next_en.dita">cursor.next()</xref></stentry>
          <stentry>Return the next record in the cursor</stentry>
          <stentry>db.foo.bar.find().next()</stentry>
        </strow>
        <!--<strow>
          <stentry><xref href="updateCurrent_en.dita">cursor.updateCurrent()</xref></stentry>
          <stentry>Update the record that the current cursor currently pionts to </stentry>
          <stentry>db.foo.bar.find.()updateCurrent({$set:{age:25}})</stentry>
        </strow>-->
        <strow>
          <stentry><xref href="csize_en.dita">cursor.size()</xref></stentry>
          <stentry>Return the distance from the record that the current cusor pionts to to the final
            record</stentry>
          <stentry>db.foo.bar.find().size()</stentry>
        </strow>
        <strow>
          <stentry><xref href="toArray_en.dita">cursor.toArray()</xref></stentry>
          <stentry>Return result set in the format of array</stentry>
          <stentry>db.foo.bar.find.toArray()</stentry>
        </strow>
      </simpletable>
    </section>
  </body>
</topic>
