
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en-us" xml:lang="en-us">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="copyright" content="(C) Copyright 2005"/>
<meta name="DC.rights.owner" content="(C) Copyright 2005"/>
<meta name="DC.Type" content="topic"/>
<meta name="DC.Title" content="BSON Interface to C++"/>
<meta name="description" content="C++ BSON main categories C++ BSON uses four categories: bson::BSONObj : Creating BSONObj object. bson::BSONElement : BSONObj object consists BSONElement object, namely BSONElement object field or ..."/>
<meta name="DC.Relation" scheme="URI" content="../../../../developement/application/topics/application_en.html"/>
<meta name="DC.Format" content="XHTML"/>
<meta name="DC.Identifier" content="topic_mjr_yzy_fm"/>
<link rel="stylesheet" type="text/css" href="../../../../commonltr.css"/>
<link rel="stylesheet" type="text/css" href="../../../../assets/webhelp_topic.css"/>
<title>BSON Interface to C++</title>
<script type="text/javascript" src="../../../../assets/jquery-1.3.2.js"> </script><script type="text/javascript" src="../../../../assets/jquery-ui-1.8.2.custom.min.js"> </script><script type="text/javascript" src="../../../../assets/frames_redirect.js"> </script><script type="text/javascript"><!--
    var prefix = "../../../../../index.html";
    var ratingFile = "";
    redirectToToc(window.location.search);
    function highlightSearchTerm(){
        if(parent.termsToHighlight != null){
        // highlight each term in the content view  
          for(i = 0 ; i < parent.termsToHighlight.length ; i++){        
              $('*', window.parent.frames[1].document).highlight(parent.termsToHighlight[i]);
          }
        }
    }
//--></script></head>
<body onload="highlightSearchTerm()" id="topic_mjr_yzy_fm"><a name="topic_mjr_yzy_fm"><!-- --></a>
<table class="nav"><tbody><tr><td><div class="navheader"><span class="frames" onclick="redirectFrames(location.pathname)"><script type="text/javascript"><!--
  if (parent.window.location.pathname == window.location.pathname ) document.write('With Frames');                    
                    --></script></span><a class="link" href="../../../../developement/application/topics/application_en.html" title="SequoiaDB Application Development"><span class="navheader_label">Parent topic</span><span class="navheader_separator">: </span><span class="navheader_linktext">SequoiaDB Application Development</span></a>  </div></td><td width="50%"><a class="navheader_parent_path" href="../../../topics/developement_en.html" title="Development Instruction">Development Instruction</a> / <a class="navheader_parent_path" href="../../../../developement/application/topics/application_en.html" title="SequoiaDB Application Development">SequoiaDB Application Development</a></td></tr></tbody></table>

  <h1 class="title topictitle1">BSON Interface to C++</h1>

  <div class="body">
    <div class="section"><h2 class="title sectiontitle">C++ BSON main categories</h2><p class="p">C++ BSON uses four categories:</p>

      <p class="p"><strong class="ph b">bson::BSONObj</strong>: Creating BSONObj object.</p>

      <p class="p"><strong class="ph b">bson::BSONElement</strong>: BSONObj object consists BSONElement object, namely BSONElement object field or element BSONObj object, which is the key right.</p>

      <p class="p"><strong class="ph b">bson::BSONObjBuilder</strong>: BSONObjBuilder BSONObj used to instantiate the object.</p>

      <p class="p"><strong class="ph b">bson::BSONObjlterator</strong>: BSONObjlterator used to rtaverse BSONObj object elements.</p>

      Bson namespace type of these classes are defined as follows:
      <p class="p"><strong class="ph b">typedef bson::BSONElement be</strong>; </p>

      <p class="p"><strong class="ph b">typedef bson::BSONObj bo</strong>;</p>

      <p class="p"><strong class="ph b">typedef bson::BSONObjBuilder bob</strong>;</p>

      <p class="p">In addition, you can use the bo::iterator instead of BSONObjlterator. </p>
</div>

    <div class="section"><h2 class="title sectiontitle">Create an objcet</h2>
      
      <p class="p">The following describes how to create a simple to use CPP BSON instance. For details, see <a class="xref" href="../../../../bsoncpp/html/index.html">C++ BSON API</a></p>

      <ul class="ul">
        <li class="li">Use BSONObject, BSONObjBuilder builder create an object.
          <pre class="pre codeblock">#include "client.hpp"
â€¦
using namespace bson ;
BSONObj obj ;
BSONObjBuilder b ;

b.append("name","sam") ;
b.append("age","24") ;
obj = b.obj() ;
or
obj = BSONObjBuilder().genOID().append("name","sam").append("age",24).obj() ;</pre>
<p class="p">Further, the method may be used to establish the data flow BSONObj lbject.</p>

          <pre class="pre codeblock">BSONObj obj ;
BSONObjBuilder b ;
b&lt;&lt;"name"&lt;&lt;"sam"&lt;&lt;"age"&lt;&lt;"24" ;
obj = b.obj() ;</pre>
</li>

        <li class="li">Create an object using a macro BSON<p class="p">C++ BSON defined also defines a BSON macro, you can use it to build BSONObj objects quickly.</p>

          <pre class="pre codeblock">BSONObj obj ;
// int
obj = BSON( "a"&lt;&lt;1 ) ; 
// float
obj = BSON( "b"&lt;&lt;3.14159265359 ) ; 
// string
obj = BSON( "foo"&lt;&lt;"bar" ) ; 
// OID
obj = BSON( GENOID ) ; 
// bool
obj = BSON( "flag"&lt;&lt;true"ret"&lt;&lt;false ) ;
// object
obj = BSON( "d"&lt;&lt;BSON("e"&lt;&lt;"hi!") ) ; 
// array
obj = BSON( "phone" &lt;&lt; BSON_ARRAY( "13800138123" &lt;&lt; "13800138124" ) ) ;
// others, less then, greater then, etc
obj = BSON( "g"&lt;&lt;LT&lt;&lt;99 ) ; </pre>
</li>

        <li class="li">Interface to create an object using fromjson.<p class="p">In addition, you can use fromjson.hpp the fromjson() to convert a string into BSONObj json object.</p>

          <pre class="pre codeblock">string s("{name:\"sam\"}") ;
fromjson ( s, obj ) ;
or
const char *r ="{
                   firstName:\"Sam\",\
                   lastName:\"Smith\",age:25,id:\"count\",\
                   address:{streetAddress: \"25 3ndStreet\",\
                   city:\"NewYork\",state:\"NY\",postalCode:\"10021\"},\
                   phoneNumber:[{type: \"home\",number:\"212555-1234\"}]}" ;
fromjson ( r, obj ) ;</pre>

        </li>

      </ul>

    </div>

  </div>

<div class="related-links"/>
<div class="navfooter"><a class="link" href="../../../../developement/application/topics/application_en.html" title="SequoiaDB Application Development"><span class="navheader_label">Parent topic</span><span class="navheader_separator">: </span><span class="navheader_linktext">SequoiaDB Application Development</span></a>  <script type="text/javascript"><!--         
    function expand(){
        parent.tocwin.expandToTopic(window.location.href, this.getAttribute('href'));
    }
    var aArray = document.getElementsByTagName('a');
    var i;
    for (i = 0; i< aArray.length; i++){
      aArray[i].onclick = expand;
    }
//--></script></div><div class="footer"><a href="http://www.sequoiadb.com" target="_blank"><img src="../../../../assets/images/sequoiadb_logo.png" alt="SequoiaDB"/></a>SequoiaDB Version 1.11
          
    </div>
</body>
</html>