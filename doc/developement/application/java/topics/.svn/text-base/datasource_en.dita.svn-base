<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_dqz_5dp_q4">
  <title>Java Datasource Introduction</title>
  <body>
    <p>The datasource in the Java Driver provides users a quick access to obtain valid connetions.</p>
    <section>
      <title>The usage of Connection pool</title>
      <p>Use the getConnection() method in SequoiadbDatasource Class to get a connectionfrom the connection pool, use the close() method to return the connections back to the pool.When the connections in the pool reach the upper limit, next request will wait for a little while, if there are no idle connections available in the given time, an exception will be thrown out. ConfigOptions Class can set different parameters of the connections. SequoiadbOption Class can set different parameters of the connection pool.</p>
      <p>For more details, please check the introduction of related APIs.</p>
    </section>
    <section>
      <title>Examples:</title>
      <p><codeblock>SequoiadbDatasource ds = null;
Sequoiadb db = null;
ArrayList&lt;String> urls = new ArrayList&lt;String>();
ConfigOptions nwOpt = new ConfigOptions();          // define connection options
SequoiadbOption dsOpt = new SequoiadbOption();	    // define connection pool options
		
urls.add("ubuntu-dev1:11810");
urls.add("ubuntu-dev2:11810");
urls.add("ubuntu-dev3:11810");
		
nwOpt.setConnectTimeout(500);                       // set connection timeout(ms)
nwOpt.setMaxAutoConnectRetryTime(0);	            // set maximum auto-connection-retry times
		
// The following are the default setups of SequoiadbOption.
dsOpt.setMaxConnectionNum(500);                     // set the maximum number of connections in the pool
dsOpt.setInitConnectionNum(10);                     // Initialize the connection pool, set the initial connection number
dsOpt.setDeltaIncCount(10) ;                        // when no connections are available in the pool, increases the maximum number of connections
dsOpt.setMaxIdeNum(10);                             // set the maximum idle connections when cleaning the extra idle connections periodically
dsOpt.setTimeout(5 * 1000);                         // set the time of waiting connections when the number of used connections reaches the upper limit(500)
dsOpt.setAbandonTime(10 * 60 * 1000);               // set the abandon time. A connection will be abandoned when the idle time of a connection is longer than the abandon time.
dsOpt.setRecheckCyclePeriod(1 * 60 * 1000);         // set the cycle period of cleaning the extra idle connections
dsOpt.setRecaptureConnPeriod(10 * 60 * 1000);       // set the cycle period of checking and capturing the abnormal connections
		
ds = new SequoiadbDatasource(urls, "", "", nwOpt, dsOpt); // create a connection pool
db = ds.getConnection();                                  // get connections from the pool
// do something else                                      // use the connections to finish certain operations
ds.close(db);</codeblock></p>
    </section>
  </body>
</topic>
