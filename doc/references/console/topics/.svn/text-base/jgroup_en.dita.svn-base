<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_pl2_r5h_hm">
  <title>$group</title>
  <body>
    <section>
      <title>Description</title>
      <p><b>$group</b> grouping to achieve the restult set, similar to the group by SQL statement. First, specify the grouping key(_id), by "_id" 
        to identify the grouping field, the field can be a single packet, it can be more than one, the format is as follows:</p>
      <codeblock>Single packet key: {_id:"$field"}
Multiple grouping key: {_id:{field1:"$field1",field2:"$field2",...}}</codeblock>
      <note>Use <b>$group</b> must specify the _id field, when _id is null, ie {_id:null}, means no grouping. Nested object using the dot operator (.) Reference field names.</note>
    </section>
    <section>
      <title>Example</title>
      <ul>
        <li>$group using the following: <codeblock>db.collectionspace.collection.aggregate({$group:{_id:"$major",avg_score:{<xref href="javg_en.dita">$avg</xref>:"$score"},Major:{<xref href="jfirst_en.dita">$first</xref>:"$major"}}})</codeblock>
          <p>This operation reads the records from the collection represents the collection, grouped
            accrding to major fields. In the result set, taking the first record of each grouping of
            major fields, rename Major, field to score the value of each packet average, rename
            ave_score. Returns are as
            follows:<codeblock>{
  "avg_score": 82,
  "major": "optics"
}
{
  "avg_score": 77.25,
  "major": "physics"
}</codeblock></p></li>
      </ul>
    </section>
    <section><title>$group Aggregation operator supports the following aggregate functions: </title>
      <p><simpletable>
        <sthead>
          <stentry> Function name </stentry>
          <stentry> Description </stentry>
        </sthead>
        <strow>
          <stentry>
            <xref href="j$addToSet_en.dita">$addtoset</xref>
          </stentry>
          <stentry> Adds the specified field values in the array, the same field value will be added once. </stentry>
        </strow>
        <strow>
          <stentry>
            <xref href="jfirst_en.dita">$first</xref>
          </stentry>
          <stentry> Take packet field values in the first record. </stentry>
        </strow>
        <strow>
          <stentry>
            <xref href="jlast_en.dita">$last</xref>
          </stentry>
          <stentry> Take packet field value in the record. </stentry>
        </strow>
        <strow>
          <stentry>
            <xref href="jmax_en.dita">$max</xref>
          </stentry>
          <stentry> Take the maximum value of the packet field.</stentry>
        </strow>
        <strow>
          <stentry>
            <xref href="jmin_en.dita">$min</xref>
          </stentry>
          <stentry> Take the smallest packet field values. </stentry>
        </strow>
        <strow>
          <stentry>
            <xref href="javg_en.dita">$avg</xref>
          </stentry>
          <stentry> Take the average packet field values. </stentry>
        </strow>
        <strow>
          <stentry>
            <xref href="j$push_en.dita">$push</xref>
          </stentry>
          <stentry> Add all the fields to the array, even if the same array of field values that already exist, and continue to add. </stentry>
        </strow>
        <strow>
          <stentry>
            <xref href="jsum_en.dita">$sum</xref>
          </stentry>
          <stentry> Take the sum of packet field values. </stentry>
        </strow>
        <strow>
          <stentry>
            <xref href="jcount_en.dita">$count</xref>
          </stentry>
          <stentry>Return the number of all the records.</stentry>
        </strow>
      </simpletable></p>
      
    </section>
    
  </body>
  <related-links>
    <link href="match_en.dita" format="dita" type="topic"></link>
    <link href="jlimit_en.dita" format="dita" type="topic"></link>
  </related-links>
</topic>
