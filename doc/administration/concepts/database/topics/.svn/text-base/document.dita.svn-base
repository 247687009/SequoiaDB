<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="administration_concepts_database_document">
  <title>文档</title>
  <body>
    <section>
      <title>概念</title>
      <p>SequoiaDB 中的文档为 JSON 格式，一般又被称为记录。在数据库内部使用 BSON，即二进制的方式存放 JSON 数据。</p>
      <p>一般来说，一条文档由一个或多个字段构成，每个字段分为键值与数值两个部分，如下为包含两个字段的文档：</p>
      <p>{ "姓名" : "张三", "性别" : "男" }</p>
      <note>
        <p>BSON 文档可能有多个同名的字段，但是，大多数 SequoiaDB 接口不支持重复的字段名，如果需要操作的文档有多个同名的字段，请参阅驱动程序了解更多信息。</p>
        <p>SequoiaDB 内部程序创建的一些文档可能含有重名的字段，但是不会向现有的用户文档添加重名的键。</p>
      </note>      
    </section>
    <section>
      <title>字段类型</title>
      <p>每个字段的键值为字符串，而数值则可以为数字，字符串，嵌套 JSON，嵌套数组等对象。SequoiaDB 所支持的数值类型见下表：</p>
      <simpletable>
        <sthead>
          <stentry>数值类型</stentry>
          <stentry>定义</stentry>
          <stentry>用例</stentry>
        </sthead>
        <strow>
          <stentry>整数</stentry>
          <stentry>整数，范围 -2147483648 至 2147483647</stentry>
          <stentry>{ "key" : 123 }</stentry>
        </strow>
        <strow>
          <stentry>长整数</stentry>
          <stentry>整数，范围 -9223372036854775808 至 9223372036854775807<fig></fig>如果用户指定的数值无法适用于整数，则 SequoiaDB 自动将其转化为长整数</stentry>
          <stentry>{ "key" : 3000000000 }</stentry>
        </strow>
        <strow>
          <stentry>浮点数</stentry>
          <stentry>浮点数，范围 1.7E-308 至 1.7E+308</stentry>
          <stentry>{ "key" : 123.456 } 或 { "key" : 123e+50 }</stentry>
        </strow>
        <strow>
          <stentry>字符串</stentry>
          <stentry>双引号包含的字符串</stentry>
          <stentry>{ "key" : "value" }</stentry>
        </strow>
        <strow>
          <stentry>对象 ID（OID）</stentry>
          <stentry>十二字节对象 ID</stentry>
          <stentry>{ "key" : { "$oid" : "123abcd00ef12358902300ef" } }</stentry>
        </strow>
        <strow>
          <stentry>布尔</stentry>
          <stentry>true 或者 false</stentry>
          <stentry>{ "key" : true } 或 { "key" : false }</stentry>
        </strow>
        <strow>
          <stentry>日期</stentry>
          <stentry>YYYY-MM-DD 的日期形式</stentry>
          <stentry>{ "key" : { "$date" : "2012-01-01" } }</stentry>
        </strow>
        <strow>
          <stentry>时间戳</stentry>
          <stentry>YYYY-MM-DD-HH.mm.ss.ffffff 的形式存取</stentry>
          <stentry>{ "key" : { "$timestamp" : "2012-01-01-13.14.26.124233" } }</stentry>
        </strow>
        <strow>
          <stentry>二进制数据</stentry>
          <stentry>Base64 形式的二进制数据</stentry>
          <stentry>{ "key" : { "$binary" : "aGVsbG8gd29ybGQ=", "$type" : 1 } }</stentry>
        </strow>
        <strow>
          <stentry>正则表达式</stentry>
          <stentry>正则表达式</stentry>
          <stentry>{ "key" : { "$regex" : "^张", "$options" : "i" } }</stentry>
        </strow>
        <strow>
          <stentry>对象</stentry>
          <stentry>嵌套 JSON 文档对象</stentry>
          <stentry>{ "key" : { "subobj" : "value" } }</stentry>
        </strow>
        <strow>
          <stentry>数组</stentry>
          <stentry>嵌套数组对象</stentry>
          <stentry>{ "key" : [ "abc", 0, "def" ] }</stentry>
        </strow>
        <strow>
          <stentry>空</stentry>
          <stentry>null</stentry>
          <stentry>{ "key" : null }</stentry>
        </strow>
      </simpletable>
    </section>
    <section>
      <title>字段顺序</title>
      <p>文档中的各字段无排列顺序，在进行数据操作时字段之间的顺序可能会被调换。</p>
      <p>当表示嵌套对象中的某一个字段时，可以使用“.”（句号）在字段名之间进行分割。例如给定数据：</p>
      <codeblock>{ "姓名" : "张三", "地址" : { "街道" : "水蓝街", "城市" : "xx", "省份" : "yy" } }</codeblock>
      <p>用户可以使用“地址.城市”字段名表示地址子对象中的城市字段。</p>
    </section>
    <section>
      <title>其他</title>
      <ul id="administration_concepts_database_misc">
        <li>每个文档的最大尺寸为16MB</li>
        <li>文档中必须包括“_id”字段，如果用户没有提供该字段，系统会自动生成一个对象 ID 类型的字段</li>
        <li>“_id”字段在集合内唯一</li>
        <li>文档的字段名不可以“$”字符起始</li>
        <li>文档的字段名不可以包含“.”字符</li>
      </ul>
    </section>
  </body>
  <related-links>
    <link href="../../../../introduction/topics/datamodel.dita" format="dita" type="topic"/>
    <link href="collection.dita" format="dita" type="topic"/>
  </related-links>
</topic>
