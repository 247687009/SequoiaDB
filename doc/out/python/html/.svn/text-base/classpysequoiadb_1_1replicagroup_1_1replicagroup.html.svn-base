<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>SequoiaDB: pysequoiadb.replicagroup.replicagroup Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SequoiaDB
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Functions</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>pysequoiadb</b></li><li class="navelem"><b>replicagroup</b></li><li class="navelem"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html">replicagroup</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classpysequoiadb_1_1replicagroup_1_1replicagroup-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">pysequoiadb.replicagroup.replicagroup Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for pysequoiadb.replicagroup.replicagroup:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classpysequoiadb_1_1replicagroup_1_1replicagroup.png" usemap="#pysequoiadb.replicagroup.replicagroup_map" alt=""/>
  <map id="pysequoiadb.replicagroup.replicagroup_map" name="pysequoiadb.replicagroup.replicagroup_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3c250d625b0f963edf92c91588afbd83"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#a3c250d625b0f963edf92c91588afbd83">__init__</a></td></tr>
<tr class="separator:a3c250d625b0f963edf92c91588afbd83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ca368f25edefd2cac7967d8127cf7bb"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#a5ca368f25edefd2cac7967d8127cf7bb">__del__</a></td></tr>
<tr class="separator:a5ca368f25edefd2cac7967d8127cf7bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add1fb103a0d1a30de92e10ef566cc3b0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="add1fb103a0d1a30de92e10ef566cc3b0"></a>
def&#160;</td><td class="memItemRight" valign="bottom"><b>__repr__</b></td></tr>
<tr class="separator:add1fb103a0d1a30de92e10ef566cc3b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8b5744efc884e01b53d23b63e7485e5"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#ac8b5744efc884e01b53d23b63e7485e5">get_nodenum</a></td></tr>
<tr class="separator:ac8b5744efc884e01b53d23b63e7485e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5986b0242b81c5aa4b89208a5e033e1c"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#a5986b0242b81c5aa4b89208a5e033e1c">get_detail</a></td></tr>
<tr class="separator:a5986b0242b81c5aa4b89208a5e033e1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b19ea443219ee3be7d103e3b79b2fcd"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#a0b19ea443219ee3be7d103e3b79b2fcd">get_master</a></td></tr>
<tr class="separator:a0b19ea443219ee3be7d103e3b79b2fcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31ad310b0b0e61e5032012b6796dba20"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#a31ad310b0b0e61e5032012b6796dba20">get_slave</a></td></tr>
<tr class="separator:a31ad310b0b0e61e5032012b6796dba20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c98a83fb8d10e0beda2582d4e4c7a32"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#a9c98a83fb8d10e0beda2582d4e4c7a32">get_nodebyendpoint</a></td></tr>
<tr class="separator:a9c98a83fb8d10e0beda2582d4e4c7a32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdf1d54bd634330bc517b3e7f428fdc2"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#afdf1d54bd634330bc517b3e7f428fdc2">get_nodebyname</a></td></tr>
<tr class="separator:afdf1d54bd634330bc517b3e7f428fdc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae95a48dd45d0e48edee6ad9f6ea47e08"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#ae95a48dd45d0e48edee6ad9f6ea47e08">create_node</a></td></tr>
<tr class="separator:ae95a48dd45d0e48edee6ad9f6ea47e08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade1b7f511b284b41b00883ac30793f4b"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#ade1b7f511b284b41b00883ac30793f4b">remove_node</a></td></tr>
<tr class="separator:ade1b7f511b284b41b00883ac30793f4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8e3c88a867fd47f2a8c7d3e7ab8878a"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#af8e3c88a867fd47f2a8c7d3e7ab8878a">start</a></td></tr>
<tr class="separator:af8e3c88a867fd47f2a8c7d3e7ab8878a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a276a1e251cf645a29f78870d713f32b2"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#a276a1e251cf645a29f78870d713f32b2">stop</a></td></tr>
<tr class="separator:a276a1e251cf645a29f78870d713f32b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dd581c20493f395db7d1f9d1261c098"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpysequoiadb_1_1replicagroup_1_1replicagroup.html#a7dd581c20493f395db7d1f9d1261c098">is_catalog</a></td></tr>
<tr class="separator:a7dd581c20493f395db7d1f9d1261c098"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><pre class="fragment">Replica group of SequoiaDB

All operation need deal with the error code returned first, if it has. 
Every error code is not SDB_OK(or 0), it means something error has appeared,
and user should deal with it according the meaning of error code printed.

@version: execute to get version
          &gt;&gt;&gt; import pysequoiadb
          &gt;&gt;&gt; print pysequoiadb.get_version()

@notice : The dict of built-in Python is hashed and non-ordered. so the
          element in dict may not the order we make it. we make a dict and
          print it like this:
          ...
          &gt;&gt;&gt; a = {"avg_age":24, "major":"computer science"}
          &gt;&gt;&gt; a
          &gt;&gt;&gt; {'major': 'computer science', 'avg_age': 24}
          ...
          the elements order it is not we make it!!
          therefore, we use bson.SON to make the order-sensitive dict if the
          order is important such as operations in "$sort", "$group",
          "split_by_condition", "aggregate","create_collection"...
          In every scene which the order is important, please make it using
          bson.SON and list. It is a subclass of built-in dict
          and order-sensitive
</pre> </div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a3c250d625b0f963edf92c91588afbd83"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.__init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>client</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">constructor of replica group

Exceptions:
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<a class="anchor" id="a5ca368f25edefd2cac7967d8127cf7bb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.__del__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">release replica group object

Exceptions:
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ae95a48dd45d0e48edee6ad9f6ea47e08"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.create_node </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>hostname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>servicename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>dbpath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>config</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Create node in a given replica group.

Parameters:
   Name         Type     Info:
   hostname     str      The host name for the node.
   servicename  str      The servicename for the node.
   dbpath       str      The database path for the node.
   config       dict     The configurations for the node.
Exceptions:
   pysequoiadb.error.SDBTypeError
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<a class="anchor" id="a5986b0242b81c5aa4b89208a5e033e1c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.get_detail </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Get the detail of the replica group.

Return values:
   a dict object of query
Exceptions:
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<a class="anchor" id="a0b19ea443219ee3be7d103e3b79b2fcd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.get_master </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Get the master node of the current replica group.

Return values:
   a replicanode object of query
Exceptions:
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<a class="anchor" id="a9c98a83fb8d10e0beda2582d4e4c7a32"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.get_nodebyendpoint </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>hostname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>servicename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Get specified node from current replica group.

Parameters:
   Name         Type     Info:
   hostname     str      The host name of the node.
   servicename  str      The service name of the node.
Return values:
   a replicanode object of query
Exceptions:
   pysequoiadb.error.SDBTypeError
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<a class="anchor" id="afdf1d54bd634330bc517b3e7f428fdc2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.get_nodebyname </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>nodename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Get specified node from current replica group.

Parameters:
   Name         Type     Info:
   nodename     str      The host name of the node.
Return values:
   a replicanode object of query
Exceptions:
   pysequoiadb.error.SDBTypeError
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<a class="anchor" id="ac8b5744efc884e01b53d23b63e7485e5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.get_nodenum </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>nodestatus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Get the count of node with given status in current replica group.

Parameters:
   Name         Type     Info:
   nodestatus   int      The specified status, see Info as below.
Return values:
   the count of node
Exceptions:
   pysequoiadb.error.SDBTypeError
   pysequoiadb.error.SDBBaseError
Info:
   flags : 0 or 1. 
 0 : count of all node
 1 : count of actived node
 2 : count of inactived node
 3 : count of unknown node
</pre> 
</div>
</div>
<a class="anchor" id="a31ad310b0b0e61e5032012b6796dba20"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.get_slave </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Get one of slave node of the current replica group, if no slave exists
   then get master.

Return values:
   a replicanode object of query
Exceptions:
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<a class="anchor" id="a7dd581c20493f395db7d1f9d1261c098"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.is_catalog </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Test whether current replica group is catalog replica group.

Return values:
   bool
Exceptions:
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<a class="anchor" id="ade1b7f511b284b41b00883ac30793f4b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.remove_node </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>hostname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>servicename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>config</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Remove node in a given replica group.

Parameters:
   Name         Type     Info:
   hostname     str      The host name for the node.
   servicename  str      The servicename for the node.
   config       dict     The configurations for the node.
Exceptions:
   pysequoiadb.error.SDBTypeError
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<a class="anchor" id="af8e3c88a867fd47f2a8c7d3e7ab8878a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.start </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Start up current replica group.

Exceptions:
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<a class="anchor" id="a276a1e251cf645a29f78870d713f32b2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pysequoiadb.replicagroup.replicagroup.stop </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Stop current replica group.

Exceptions:
   pysequoiadb.error.SDBBaseError
</pre> 
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/SequoiaDB/trunk/driver/python/pysequoiadb/replicagroup.py</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri Oct 31 2014 13:13:33 for SequoiaDB by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
