<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>SequoiaDB: bson::BSONObjBuilder Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">SequoiaDB
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacebson.html">bson</a></li><li class="navelem"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classbson_1_1BSONObjBuilder-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">bson::BSONObjBuilder Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Utility for creating a <a class="el" href="classbson_1_1BSONObj.html" title="C++ representation of a &quot;BSON&quot; object â€“ that is, an extended JSON-style object in a binary representa...">BSONObj</a>.  
 <a href="classbson_1_1BSONObjBuilder.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="bsonobjbuilder_8h_source.html">bsonobjbuilder.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for bson::BSONObjBuilder:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classbson_1_1BSONObjBuilder.png" usemap="#bson::BSONObjBuilder_map" alt=""/>
  <map id="bson::BSONObjBuilder_map" name="bson::BSONObjBuilder_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structbson_1_1BSONObjBuilder_1_1ForceExplicitString.html">ForceExplicitString</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae2f1343bdfc08f5363cfda0d5ee9f1b2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#ae2f1343bdfc08f5363cfda0d5ee9f1b2">BSONObjBuilder</a> (int initsize=512)</td></tr>
<tr class="separator:ae2f1343bdfc08f5363cfda0d5ee9f1b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aceb535385f23b2aa19eeeedbd577db7c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#aceb535385f23b2aa19eeeedbd577db7c">BSONObjBuilder</a> (BufBuilder &amp;baseBuilder)</td></tr>
<tr class="separator:aceb535385f23b2aa19eeeedbd577db7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cc28e99602c1a6f6b72d3a7b63a66e1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2cc28e99602c1a6f6b72d3a7b63a66e1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>BSONObjBuilder</b> (const <a class="el" href="classbson_1_1BSONSizeTracker.html">BSONSizeTracker</a> &amp;tracker)</td></tr>
<tr class="separator:a2cc28e99602c1a6f6b72d3a7b63a66e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f55c49fb0a225ad02d9ea6914f551ab"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5f55c49fb0a225ad02d9ea6914f551ab"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a5f55c49fb0a225ad02d9ea6914f551ab">appendElements</a> (<a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> x)</td></tr>
<tr class="memdesc:a5f55c49fb0a225ad02d9ea6914f551ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">add all the fields from the object specified to this object <br/></td></tr>
<tr class="separator:a5f55c49fb0a225ad02d9ea6914f551ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a3eac020606e249665e0a26b8f8859c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4a3eac020606e249665e0a26b8f8859c"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a4a3eac020606e249665e0a26b8f8859c">appendElementsUnique</a> (<a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> x)</td></tr>
<tr class="memdesc:a4a3eac020606e249665e0a26b8f8859c"><td class="mdescLeft">&#160;</td><td class="mdescRight">add all the fields from the object specified to this object if they don't exist already <br/></td></tr>
<tr class="separator:a4a3eac020606e249665e0a26b8f8859c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a027d9a8d8bae9244e2a91fc8944c43aa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a027d9a8d8bae9244e2a91fc8944c43aa"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a027d9a8d8bae9244e2a91fc8944c43aa">append</a> (const <a class="el" href="classbson_1_1BSONElement.html">BSONElement</a> &amp;e)</td></tr>
<tr class="memdesc:a027d9a8d8bae9244e2a91fc8944c43aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">append element to the object we are building <br/></td></tr>
<tr class="separator:a027d9a8d8bae9244e2a91fc8944c43aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90852beb43e4b1c011139cbeb1c58363"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a90852beb43e4b1c011139cbeb1c58363"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a90852beb43e4b1c011139cbeb1c58363">appendAs</a> (const <a class="el" href="classbson_1_1BSONElement.html">BSONElement</a> &amp;e, const StringData &amp;fieldName)</td></tr>
<tr class="memdesc:a90852beb43e4b1c011139cbeb1c58363"><td class="mdescLeft">&#160;</td><td class="mdescRight">append an element but with a new name <br/></td></tr>
<tr class="separator:a90852beb43e4b1c011139cbeb1c58363"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0030576e97230c28995d571f4fab97b8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0030576e97230c28995d571f4fab97b8"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a0030576e97230c28995d571f4fab97b8">append</a> (const StringData &amp;fieldName, <a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> subObj)</td></tr>
<tr class="memdesc:a0030576e97230c28995d571f4fab97b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a subobject as a member <br/></td></tr>
<tr class="separator:a0030576e97230c28995d571f4fab97b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94de4e5755784ab2561017b042ac5fdc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a94de4e5755784ab2561017b042ac5fdc"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a94de4e5755784ab2561017b042ac5fdc">appendObject</a> (const StringData &amp;fieldName, const char *objdata, int size=0)</td></tr>
<tr class="memdesc:a94de4e5755784ab2561017b042ac5fdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a subobject as a member <br/></td></tr>
<tr class="separator:a94de4e5755784ab2561017b042ac5fdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98314e92ddac89275de97da0f73c7b43"><td class="memItemLeft" align="right" valign="top">BufBuilder &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a98314e92ddac89275de97da0f73c7b43">subobjStart</a> (const StringData &amp;fieldName)</td></tr>
<tr class="memdesc:a98314e92ddac89275de97da0f73c7b43"><td class="mdescLeft">&#160;</td><td class="mdescRight">add header for a new subobject and return bufbuilder for writing to the subobject's body  <a href="#a98314e92ddac89275de97da0f73c7b43"></a><br/></td></tr>
<tr class="separator:a98314e92ddac89275de97da0f73c7b43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5efeb19109a007424cb93af31a2b8024"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a5efeb19109a007424cb93af31a2b8024">appendArray</a> (const StringData &amp;fieldName, const <a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> &amp;subObj)</td></tr>
<tr class="memdesc:a5efeb19109a007424cb93af31a2b8024"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a subobject as a member with type Array.  <a href="#a5efeb19109a007424cb93af31a2b8024"></a><br/></td></tr>
<tr class="separator:a5efeb19109a007424cb93af31a2b8024"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d26c5439620c0df3f94470a38a39cda"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2d26c5439620c0df3f94470a38a39cda"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>append</b> (const StringData &amp;fieldName, <a class="el" href="structbson_1_1BSONArray.html">BSONArray</a> arr)</td></tr>
<tr class="separator:a2d26c5439620c0df3f94470a38a39cda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9c4f1ae2e143ce09c76a9d68360dbca"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad9c4f1ae2e143ce09c76a9d68360dbca"></a>
BufBuilder &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#ad9c4f1ae2e143ce09c76a9d68360dbca">subarrayStart</a> (const StringData &amp;fieldName)</td></tr>
<tr class="memdesc:ad9c4f1ae2e143ce09c76a9d68360dbca"><td class="mdescLeft">&#160;</td><td class="mdescRight">add header for a new subarray and return bufbuilder for writing to the subarray's body <br/></td></tr>
<tr class="separator:ad9c4f1ae2e143ce09c76a9d68360dbca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5c0f7a719467505e2660833f12dc00e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae5c0f7a719467505e2660833f12dc00e"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#ae5c0f7a719467505e2660833f12dc00e">appendBool</a> (const StringData &amp;fieldName, int val)</td></tr>
<tr class="memdesc:ae5c0f7a719467505e2660833f12dc00e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a boolean element. <br/></td></tr>
<tr class="separator:ae5c0f7a719467505e2660833f12dc00e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab04a6b881cf279937b7113ca8435f041"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab04a6b881cf279937b7113ca8435f041"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#ab04a6b881cf279937b7113ca8435f041">append</a> (const StringData &amp;fieldName, bool val)</td></tr>
<tr class="memdesc:ab04a6b881cf279937b7113ca8435f041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a boolean element. <br/></td></tr>
<tr class="separator:ab04a6b881cf279937b7113ca8435f041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a028b5e5b2566598b41b9adca14fcc500"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a028b5e5b2566598b41b9adca14fcc500"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a028b5e5b2566598b41b9adca14fcc500">append</a> (const StringData &amp;fieldName, int n)</td></tr>
<tr class="memdesc:a028b5e5b2566598b41b9adca14fcc500"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a 32 bit integer element. <br/></td></tr>
<tr class="separator:a028b5e5b2566598b41b9adca14fcc500"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f5d7df0939540b3331b896785730bc8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a1f5d7df0939540b3331b896785730bc8">append</a> (const StringData &amp;fieldName, unsigned n)</td></tr>
<tr class="memdesc:a1f5d7df0939540b3331b896785730bc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a 32 bit unsigned element - cast to a signed int.  <a href="#a1f5d7df0939540b3331b896785730bc8"></a><br/></td></tr>
<tr class="separator:a1f5d7df0939540b3331b896785730bc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e0689de6745fa821a3105bbe2838c82"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2e0689de6745fa821a3105bbe2838c82"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a2e0689de6745fa821a3105bbe2838c82">append</a> (const StringData &amp;fieldName, long long n)</td></tr>
<tr class="memdesc:a2e0689de6745fa821a3105bbe2838c82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a NumberLong. <br/></td></tr>
<tr class="separator:a2e0689de6745fa821a3105bbe2838c82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8868d2643bbdadab8d8b5d778d6700a0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a8868d2643bbdadab8d8b5d778d6700a0">appendIntOrLL</a> (const StringData &amp;fieldName, long long n)</td></tr>
<tr class="memdesc:a8868d2643bbdadab8d8b5d778d6700a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">appends a number.  <a href="#a8868d2643bbdadab8d8b5d778d6700a0"></a><br/></td></tr>
<tr class="separator:a8868d2643bbdadab8d8b5d778d6700a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76dbde97a7640b457c388e6b1e6d3c12"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a76dbde97a7640b457c388e6b1e6d3c12">appendNumber</a> (const StringData &amp;fieldName, int n)</td></tr>
<tr class="memdesc:a76dbde97a7640b457c388e6b1e6d3c12"><td class="mdescLeft">&#160;</td><td class="mdescRight">appendNumber is a series of method for appending the smallest sensible type.  <a href="#a76dbde97a7640b457c388e6b1e6d3c12"></a><br/></td></tr>
<tr class="separator:a76dbde97a7640b457c388e6b1e6d3c12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a278f32298faf07204b43f56979ccfb98"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a278f32298faf07204b43f56979ccfb98"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>appendNumber</b> (const StringData &amp;fieldName, double d)</td></tr>
<tr class="separator:a278f32298faf07204b43f56979ccfb98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f21dd6ceb79655664f17c70705dd009"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2f21dd6ceb79655664f17c70705dd009"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>appendNumber</b> (const StringData &amp;fieldName, size_t n)</td></tr>
<tr class="separator:a2f21dd6ceb79655664f17c70705dd009"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0042ae99e940c189be5ecb7f1ce6f100"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0042ae99e940c189be5ecb7f1ce6f100"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>appendNumber</b> (const StringData &amp;fieldName, long long l)</td></tr>
<tr class="separator:a0042ae99e940c189be5ecb7f1ce6f100"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb8f56fbbb4d8e84ad1d4997c0ce9525"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adb8f56fbbb4d8e84ad1d4997c0ce9525"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#adb8f56fbbb4d8e84ad1d4997c0ce9525">append</a> (const StringData &amp;fieldName, double n)</td></tr>
<tr class="memdesc:adb8f56fbbb4d8e84ad1d4997c0ce9525"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a double element. <br/></td></tr>
<tr class="separator:adb8f56fbbb4d8e84ad1d4997c0ce9525"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaacd345f61c7086f75c5774a9b4369be"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#aaacd345f61c7086f75c5774a9b4369be">appendAsNumber</a> (const StringData &amp;fieldName, const string &amp;data)</td></tr>
<tr class="memdesc:aaacd345f61c7086f75c5774a9b4369be"><td class="mdescLeft">&#160;</td><td class="mdescRight">tries to append the data as a number  <a href="#aaacd345f61c7086f75c5774a9b4369be"></a><br/></td></tr>
<tr class="separator:aaacd345f61c7086f75c5774a9b4369be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd4a3537590d05af07585d13058915b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#acd4a3537590d05af07585d13058915b6">appendOID</a> (const StringData &amp;fieldName, OID *oid=0, bool generateIfBlank=false)</td></tr>
<tr class="memdesc:acd4a3537590d05af07585d13058915b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a BSON Object ID (OID type).  <a href="#acd4a3537590d05af07585d13058915b6"></a><br/></td></tr>
<tr class="separator:acd4a3537590d05af07585d13058915b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05af32b74a5767e1d75f54eaaa272eb3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a05af32b74a5767e1d75f54eaaa272eb3">append</a> (const StringData &amp;fieldName, OID oid)</td></tr>
<tr class="memdesc:a05af32b74a5767e1d75f54eaaa272eb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a BSON Object ID.  <a href="#a05af32b74a5767e1d75f54eaaa272eb3"></a><br/></td></tr>
<tr class="separator:a05af32b74a5767e1d75f54eaaa272eb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71a427dc7775bc6752ef44b25ad9b7a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a71a427dc7775bc6752ef44b25ad9b7a7">genOID</a> ()</td></tr>
<tr class="memdesc:a71a427dc7775bc6752ef44b25ad9b7a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate and assign an object id for the _id field.  <a href="#a71a427dc7775bc6752ef44b25ad9b7a7"></a><br/></td></tr>
<tr class="separator:a71a427dc7775bc6752ef44b25ad9b7a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1211695b3084150fb00b4281cbe70145"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a1211695b3084150fb00b4281cbe70145">appendTimeT</a> (const StringData &amp;fieldName, time_t dt)</td></tr>
<tr class="memdesc:a1211695b3084150fb00b4281cbe70145"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a time_t date.  <a href="#a1211695b3084150fb00b4281cbe70145"></a><br/></td></tr>
<tr class="separator:a1211695b3084150fb00b4281cbe70145"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab650bc6098457875539747d873497e48"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#ab650bc6098457875539747d873497e48">appendDate</a> (const StringData &amp;fieldName, Date_t dt)</td></tr>
<tr class="memdesc:ab650bc6098457875539747d873497e48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a date.  <a href="#ab650bc6098457875539747d873497e48"></a><br/></td></tr>
<tr class="separator:ab650bc6098457875539747d873497e48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a054c75c66d5e979c8520f9711e74e008"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a054c75c66d5e979c8520f9711e74e008"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>append</b> (const StringData &amp;fieldName, Date_t dt)</td></tr>
<tr class="separator:a054c75c66d5e979c8520f9711e74e008"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a856483bb76fdd7bb536ca53d0a629f4b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a856483bb76fdd7bb536ca53d0a629f4b">appendRegex</a> (const StringData &amp;fieldName, const StringData &amp;regex, const StringData &amp;options=&quot;&quot;)</td></tr>
<tr class="memdesc:a856483bb76fdd7bb536ca53d0a629f4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a regular expression value.  <a href="#a856483bb76fdd7bb536ca53d0a629f4b"></a><br/></td></tr>
<tr class="separator:a856483bb76fdd7bb536ca53d0a629f4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cf36b0ec44da0b1842173037058fd7b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2cf36b0ec44da0b1842173037058fd7b"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>appendCode</b> (const StringData &amp;fieldName, const StringData &amp;code)</td></tr>
<tr class="separator:a2cf36b0ec44da0b1842173037058fd7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada1072c18a841125cf6773117a8496af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#ada1072c18a841125cf6773117a8496af">append</a> (const StringData &amp;fieldName, const char *str, int sz)</td></tr>
<tr class="memdesc:ada1072c18a841125cf6773117a8496af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a string element.  <a href="#ada1072c18a841125cf6773117a8496af"></a><br/></td></tr>
<tr class="separator:ada1072c18a841125cf6773117a8496af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c5abe4632fa84eb70320eae3bb0f251"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a4c5abe4632fa84eb70320eae3bb0f251">appendStrWithNoTerminating</a> (const StringData &amp;fieldName, const char *str, int sz)</td></tr>
<tr class="memdesc:a4c5abe4632fa84eb70320eae3bb0f251"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a string element.  <a href="#a4c5abe4632fa84eb70320eae3bb0f251"></a><br/></td></tr>
<tr class="separator:a4c5abe4632fa84eb70320eae3bb0f251"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8513b53ea03ed674e43e82cab5d078d3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8513b53ea03ed674e43e82cab5d078d3"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a8513b53ea03ed674e43e82cab5d078d3">append</a> (const StringData &amp;fieldName, const char *str)</td></tr>
<tr class="memdesc:a8513b53ea03ed674e43e82cab5d078d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a string element. <br/></td></tr>
<tr class="separator:a8513b53ea03ed674e43e82cab5d078d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19b1d6c57693f654d3e7b6649e9a4723"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a19b1d6c57693f654d3e7b6649e9a4723"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a19b1d6c57693f654d3e7b6649e9a4723">append</a> (const StringData &amp;fieldName, const string &amp;str)</td></tr>
<tr class="memdesc:a19b1d6c57693f654d3e7b6649e9a4723"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a string element. <br/></td></tr>
<tr class="separator:a19b1d6c57693f654d3e7b6649e9a4723"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1c175d765cd1660dbc9ce7b8a382b77"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab1c175d765cd1660dbc9ce7b8a382b77"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>appendSymbol</b> (const StringData &amp;fieldName, const StringData &amp;symbol)</td></tr>
<tr class="separator:ab1c175d765cd1660dbc9ce7b8a382b77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b6d5f2ec0b7e822c029a6a3e689b7d0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3b6d5f2ec0b7e822c029a6a3e689b7d0"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a3b6d5f2ec0b7e822c029a6a3e689b7d0">appendNull</a> (const StringData &amp;fieldName)</td></tr>
<tr class="memdesc:a3b6d5f2ec0b7e822c029a6a3e689b7d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a Null element to the object. <br/></td></tr>
<tr class="separator:a3b6d5f2ec0b7e822c029a6a3e689b7d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57e71d3b88f014950bef6b9f1ecac441"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a57e71d3b88f014950bef6b9f1ecac441"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>appendMinKey</b> (const StringData &amp;fieldName)</td></tr>
<tr class="separator:a57e71d3b88f014950bef6b9f1ecac441"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fb8fd255f28a2e4186d43ede5c06ef8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5fb8fd255f28a2e4186d43ede5c06ef8"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a5fb8fd255f28a2e4186d43ede5c06ef8">appendUndefined</a> (const StringData &amp;fieldName)</td></tr>
<tr class="memdesc:a5fb8fd255f28a2e4186d43ede5c06ef8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a Undefined element to the object. <br/></td></tr>
<tr class="separator:a5fb8fd255f28a2e4186d43ede5c06ef8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33836e047a659351edc39ba214e3cadc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a33836e047a659351edc39ba214e3cadc"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>appendMaxKey</b> (const StringData &amp;fieldName)</td></tr>
<tr class="separator:a33836e047a659351edc39ba214e3cadc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bcf92c98081503bec790c6b86d8630a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6bcf92c98081503bec790c6b86d8630a"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>appendTimestamp</b> (const StringData &amp;fieldName)</td></tr>
<tr class="separator:a6bcf92c98081503bec790c6b86d8630a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d9a2136ce92faa91a2cc8daa750aa13"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8d9a2136ce92faa91a2cc8daa750aa13"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>appendTimestamp</b> (const StringData &amp;fieldName, unsigned long long val)</td></tr>
<tr class="separator:a8d9a2136ce92faa91a2cc8daa750aa13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab941a5a1c21b6e6e41f0d8d08d6870df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#ab941a5a1c21b6e6e41f0d8d08d6870df">appendTimestamp</a> (const StringData &amp;fieldName, unsigned long long time, unsigned int inc)</td></tr>
<tr class="memdesc:ab941a5a1c21b6e6e41f0d8d08d6870df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Timestamps are a special BSON datatype that is used internally for replication.  <a href="#ab941a5a1c21b6e6e41f0d8d08d6870df"></a><br/></td></tr>
<tr class="separator:ab941a5a1c21b6e6e41f0d8d08d6870df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3350f6721840a8125492db166b0adbf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af3350f6721840a8125492db166b0adbf"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>appendDBRef</b> (const StringData &amp;fieldName, const StringData &amp;ns, const OID &amp;oid)</td></tr>
<tr class="separator:af3350f6721840a8125492db166b0adbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae809fc968ade4242f9fb930ea0275e0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#ae809fc968ade4242f9fb930ea0275e0b">appendBinData</a> (const StringData &amp;fieldName, int len, BinDataType type, const char *data)</td></tr>
<tr class="memdesc:ae809fc968ade4242f9fb930ea0275e0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a binary data element.  <a href="#ae809fc968ade4242f9fb930ea0275e0b"></a><br/></td></tr>
<tr class="separator:ae809fc968ade4242f9fb930ea0275e0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4717eca32516274e207e193899466d92"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4717eca32516274e207e193899466d92"></a>
<a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>appendBinData</b> (const StringData &amp;fieldName, int len, BinDataType type, const unsigned char *data)</td></tr>
<tr class="separator:a4717eca32516274e207e193899466d92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39aafc862cc739c22646fea534f84ce0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a39aafc862cc739c22646fea534f84ce0">appendBinDataArrayDeprecated</a> (const char *fieldName, const char *data, int len)</td></tr>
<tr class="memdesc:a39aafc862cc739c22646fea534f84ce0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtype 2 is deprecated.  <a href="#a39aafc862cc739c22646fea534f84ce0"></a><br/></td></tr>
<tr class="separator:a39aafc862cc739c22646fea534f84ce0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ac3ddd821fcecfae8780cb0be5054fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a9ac3ddd821fcecfae8780cb0be5054fd">appendCodeWScope</a> (const StringData &amp;fieldName, const StringData &amp;code, const <a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> &amp;scope)</td></tr>
<tr class="memdesc:a9ac3ddd821fcecfae8780cb0be5054fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append to the BSON object a field of type CodeWScope.  <a href="#a9ac3ddd821fcecfae8780cb0be5054fd"></a><br/></td></tr>
<tr class="separator:a9ac3ddd821fcecfae8780cb0be5054fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2008ebd7ee7dc46d8ab2a316031df5d0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2008ebd7ee7dc46d8ab2a316031df5d0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>appendWhere</b> (const StringData &amp;code, const <a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> &amp;scope)</td></tr>
<tr class="separator:a2008ebd7ee7dc46d8ab2a316031df5d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d8073512b0ebd416ce64e5796af35f3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9d8073512b0ebd416ce64e5796af35f3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a9d8073512b0ebd416ce64e5796af35f3">appendMinForType</a> (const StringData &amp;fieldName, int type)</td></tr>
<tr class="memdesc:a9d8073512b0ebd416ce64e5796af35f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">these are the min/max when comparing, not strict min/max elements for a given type <br/></td></tr>
<tr class="separator:a9d8073512b0ebd416ce64e5796af35f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbb6f33c770c1af5175c579ab47030c0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acbb6f33c770c1af5175c579ab47030c0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>appendMaxForType</b> (const StringData &amp;fieldName, int type)</td></tr>
<tr class="separator:acbb6f33c770c1af5175c579ab47030c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af83c7edfbd4ad2f89a5568f34dcfc0af"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:af83c7edfbd4ad2f89a5568f34dcfc0af"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#af83c7edfbd4ad2f89a5568f34dcfc0af">append</a> (const StringData &amp;fieldName, const vector&lt; T &gt; &amp;vals)</td></tr>
<tr class="memdesc:af83c7edfbd4ad2f89a5568f34dcfc0af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append an array of values.  <a href="#af83c7edfbd4ad2f89a5568f34dcfc0af"></a><br/></td></tr>
<tr class="separator:af83c7edfbd4ad2f89a5568f34dcfc0af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae61c74bc940322088fbdeb1bb1fc1dca"><td class="memTemplParams" colspan="2"><a class="anchor" id="ae61c74bc940322088fbdeb1bb1fc1dca"></a>
template&lt;class T &gt; </td></tr>
<tr class="memitem:ae61c74bc940322088fbdeb1bb1fc1dca"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>append</b> (const StringData &amp;fieldName, const list&lt; T &gt; &amp;vals)</td></tr>
<tr class="separator:ae61c74bc940322088fbdeb1bb1fc1dca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92ececb7194a2f5cc23eca8d269fed30"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:a92ececb7194a2f5cc23eca8d269fed30"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a92ececb7194a2f5cc23eca8d269fed30">append</a> (const StringData &amp;fieldName, const set&lt; T &gt; &amp;vals)</td></tr>
<tr class="memdesc:a92ececb7194a2f5cc23eca8d269fed30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a set of values.  <a href="#a92ececb7194a2f5cc23eca8d269fed30"></a><br/></td></tr>
<tr class="separator:a92ececb7194a2f5cc23eca8d269fed30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91a6e9db4d526edb42b56e3aa123b066"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObj.html">BSONObj</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a91a6e9db4d526edb42b56e3aa123b066">obj</a> ()</td></tr>
<tr class="memdesc:a91a6e9db4d526edb42b56e3aa123b066"><td class="mdescLeft">&#160;</td><td class="mdescRight">destructive The returned <a class="el" href="classbson_1_1BSONObj.html" title="C++ representation of a &quot;BSON&quot; object â€“ that is, an extended JSON-style object in a binary representa...">BSONObj</a> will free the buffer when it is finished.  <a href="#a91a6e9db4d526edb42b56e3aa123b066"></a><br/></td></tr>
<tr class="separator:a91a6e9db4d526edb42b56e3aa123b066"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac636b4a1a7e8a772268272e83c90ba13"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObj.html">BSONObj</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#ac636b4a1a7e8a772268272e83c90ba13">done</a> ()</td></tr>
<tr class="memdesc:ac636b4a1a7e8a772268272e83c90ba13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fetch the object we have built.  <a href="#ac636b4a1a7e8a772268272e83c90ba13"></a><br/></td></tr>
<tr class="separator:ac636b4a1a7e8a772268272e83c90ba13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92fa8af1d3b1b87fec7ec4c9e9c6899c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a92fa8af1d3b1b87fec7ec4c9e9c6899c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>doneFast</b> ()</td></tr>
<tr class="separator:a92fa8af1d3b1b87fec7ec4c9e9c6899c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a421aa615768c45a9f6f2a81adb0e4f5f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObj.html">BSONObj</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a421aa615768c45a9f6f2a81adb0e4f5f">asTempObj</a> ()</td></tr>
<tr class="memdesc:a421aa615768c45a9f6f2a81adb0e4f5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Peek at what is in the builder, but leave the builder ready for more appends.  <a href="#a421aa615768c45a9f6f2a81adb0e4f5f"></a><br/></td></tr>
<tr class="separator:a421aa615768c45a9f6f2a81adb0e4f5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa00c40864c10be6d3fd4cb3f0b04f2b9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa00c40864c10be6d3fd4cb3f0b04f2b9"></a>
char *&#160;</td><td class="memItemRight" valign="bottom"><b>decouple</b> (int &amp;l)</td></tr>
<tr class="separator:aa00c40864c10be6d3fd4cb3f0b04f2b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ed043f8b17aec07170698d1e1b2f479"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9ed043f8b17aec07170698d1e1b2f479"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>decouple</b> ()</td></tr>
<tr class="separator:a9ed043f8b17aec07170698d1e1b2f479"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bf9fab2edc96c32fec2ce9f0d6bff6e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5bf9fab2edc96c32fec2ce9f0d6bff6e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>appendKeys</b> (const <a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> &amp;keyPattern, const <a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> &amp;values)</td></tr>
<tr class="separator:a5bf9fab2edc96c32fec2ce9f0d6bff6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada3d7b9ed84c0cf67cbd6c0b2fdec1ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilderValueStream.html">BSONObjBuilderValueStream</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#ada3d7b9ed84c0cf67cbd6c0b2fdec1ad">operator&lt;&lt;</a> (const char *name)</td></tr>
<tr class="memdesc:ada3d7b9ed84c0cf67cbd6c0b2fdec1ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stream oriented way to add field names and values.  <a href="#ada3d7b9ed84c0cf67cbd6c0b2fdec1ad"></a><br/></td></tr>
<tr class="separator:ada3d7b9ed84c0cf67cbd6c0b2fdec1ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bfd8233cf856e5dd7a00ec2380efaea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a4bfd8233cf856e5dd7a00ec2380efaea">operator&lt;&lt;</a> (<a class="el" href="structbson_1_1GENOIDLabeler.html">GENOIDLabeler</a>)</td></tr>
<tr class="memdesc:a4bfd8233cf856e5dd7a00ec2380efaea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stream oriented way to add field names and values.  <a href="#a4bfd8233cf856e5dd7a00ec2380efaea"></a><br/></td></tr>
<tr class="separator:a4bfd8233cf856e5dd7a00ec2380efaea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05da3e904f83da7a31092430d32dd240"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilderValueStream.html">BSONObjBuilderValueStream</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a05da3e904f83da7a31092430d32dd240">operator&lt;&lt;</a> (const <a class="el" href="structbson_1_1BSONObjBuilder_1_1ForceExplicitString.html">ForceExplicitString</a> &amp;name)</td></tr>
<tr class="memdesc:a05da3e904f83da7a31092430d32dd240"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stream oriented way to add field names and values.  <a href="#a05da3e904f83da7a31092430d32dd240"></a><br/></td></tr>
<tr class="separator:a05da3e904f83da7a31092430d32dd240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14284d36c4eabc0f9f81683f682a4dab"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a14284d36c4eabc0f9f81683f682a4dab"></a>
<a class="el" href="classbson_1_1Labeler.html">Labeler</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (const <a class="el" href="structbson_1_1Labeler_1_1Label.html">Labeler::Label</a> &amp;l)</td></tr>
<tr class="separator:a14284d36c4eabc0f9f81683f682a4dab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a353138b84d0f12e945b2c956ee9789fc"><td class="memTemplParams" colspan="2"><a class="anchor" id="a353138b84d0f12e945b2c956ee9789fc"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a353138b84d0f12e945b2c956ee9789fc"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilderValueStream.html">BSONObjBuilderValueStream</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&lt;&lt;</b> (const <a class="el" href="classbson_1_1BSONField.html">BSONField</a>&lt; T &gt; &amp;f)</td></tr>
<tr class="separator:a353138b84d0f12e945b2c956ee9789fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfc14515fb4cc94b730995f1886123a2"><td class="memTemplParams" colspan="2"><a class="anchor" id="abfc14515fb4cc94b730995f1886123a2"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:abfc14515fb4cc94b730995f1886123a2"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&lt;&lt;</b> (const <a class="el" href="classbson_1_1BSONFieldValue.html">BSONFieldValue</a>&lt; T &gt; &amp;v)</td></tr>
<tr class="separator:abfc14515fb4cc94b730995f1886123a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a599ecbb38f00675da1e0d7e1531b166b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbson_1_1BSONObjBuilder.html#a599ecbb38f00675da1e0d7e1531b166b">owned</a> () const </td></tr>
<tr class="separator:a599ecbb38f00675da1e0d7e1531b166b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa725406106c420be8a3de2034c12b046"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa725406106c420be8a3de2034c12b046"></a>
<a class="el" href="classbson_1_1BSONObjIterator.html">BSONObjIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> () const </td></tr>
<tr class="separator:aa725406106c420be8a3de2034c12b046"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af868e0cdec78b0d87b1036053dde90bd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af868e0cdec78b0d87b1036053dde90bd"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>hasField</b> (const StringData &amp;name) const </td></tr>
<tr class="separator:af868e0cdec78b0d87b1036053dde90bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf900dd50aef7b8b6a84a7c87a8ad1ca"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaf900dd50aef7b8b6a84a7c87a8ad1ca"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>len</b> () const </td></tr>
<tr class="separator:aaf900dd50aef7b8b6a84a7c87a8ad1ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdae1cc82cd6753c6cd81d5175777f1c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afdae1cc82cd6753c6cd81d5175777f1c"></a>
BufBuilder &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>bb</b> ()</td></tr>
<tr class="separator:afdae1cc82cd6753c6cd81d5175777f1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a7d4dfda4e21ad4f86763ce586172bcbf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7d4dfda4e21ad4f86763ce586172bcbf"></a>
static string&#160;</td><td class="memItemRight" valign="bottom"><b>numStr</b> (int i)</td></tr>
<tr class="separator:a7d4dfda4e21ad4f86763ce586172bcbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Utility for creating a <a class="el" href="classbson_1_1BSONObj.html" title="C++ representation of a &quot;BSON&quot; object â€“ that is, an extended JSON-style object in a binary representa...">BSONObj</a>. </p>
<p>See also the <a class="el" href="bsonmisc_8h.html#ab8032d457f0074b50c2aca379a0a545a" title="Use BSON macro to build a BSONObj from a stream.">BSON()</a> and <a class="el" href="bsonmisc_8h.html#a7c39efe531a0b3edf6424f917345e3a7" title="Use BSON_ARRAY macro like BSON macro, but without keys.">BSON_ARRAY()</a> macros. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ae2f1343bdfc08f5363cfda0d5ee9f1b2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bson::BSONObjBuilder::BSONObjBuilder </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>initsize</em> = <code>512</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">initsize</td><td>this is just a hint as to the final size of the object </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aceb535385f23b2aa19eeeedbd577db7c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bson::BSONObjBuilder::BSONObjBuilder </td>
          <td>(</td>
          <td class="paramtype">BufBuilder &amp;&#160;</td>
          <td class="paramname"><em>baseBuilder</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">baseBuilder</td><td>construct a <a class="el" href="classbson_1_1BSONObjBuilder.html" title="Utility for creating a BSONObj.">BSONObjBuilder</a> using an existing BufBuilder This is for more efficient adding of subobjects/arrays. See docs for subobjStart for example. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a1f5d7df0939540b3331b896785730bc8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::append </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append a 32 bit unsigned element - cast to a signed int. </p>

</div>
</div>
<a class="anchor" id="a05af32b74a5767e1d75f54eaaa272eb3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::append </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">OID&#160;</td>
          <td class="paramname"><em>oid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append a BSON Object ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fieldName</td><td>Field name, e.g., "_id". </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the builder object </dd></dl>

</div>
</div>
<a class="anchor" id="ada1072c18a841125cf6773117a8496af"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::append </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sz</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append a string element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sz</td><td>size includes terminating null character </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af83c7edfbd4ad2f89a5568f34dcfc0af"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp; bson::BSONObjBuilder::append </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>vals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append an array of values. </p>

</div>
</div>
<a class="anchor" id="a92ececb7194a2f5cc23eca8d269fed30"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a> &amp; bson::BSONObjBuilder::append </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const set&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>vals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append a set of values. </p>

</div>
</div>
<a class="anchor" id="a5efeb19109a007424cb93af31a2b8024"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendArray </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> &amp;&#160;</td>
          <td class="paramname"><em>subObj</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>add a subobject as a member with type Array. </p>
<p>Thus arr object should have "0", "1", ... style fields in it. </p>

</div>
</div>
<a class="anchor" id="aaacd345f61c7086f75c5774a9b4369be"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool bson::BSONObjBuilder::appendAsNumber </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const string &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>tries to append the data as a number </p>
<dl class="section return"><dt>Returns</dt><dd>true if the data was able to be converted to a number </dd></dl>

</div>
</div>
<a class="anchor" id="ae809fc968ade4242f9fb930ea0275e0b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendBinData </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BinDataType&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append a binary data element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fieldName</td><td>name of the field </td></tr>
    <tr><td class="paramname">len</td><td>length of the binary data in bytes </td></tr>
    <tr><td class="paramname">subtype</td><td>subtype information for the data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See Also</dt><dd>enum BinDataType in bsontypes.h. Use BinDataGeneral if you don't care about the type. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>the byte array </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a39aafc862cc739c22646fea534f84ce0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendBinDataArrayDeprecated </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Subtype 2 is deprecated. </p>
<p>Append a BSON bindata bytearray element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>a byte array </td></tr>
    <tr><td class="paramname">len</td><td>the length of data </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9ac3ddd821fcecfae8780cb0be5054fd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendCodeWScope </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> &amp;&#160;</td>
          <td class="paramname"><em>scope</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append to the BSON object a field of type CodeWScope. </p>
<p>This is a js code fragment accompanied by some scope that goes with it. </p>

</div>
</div>
<a class="anchor" id="ab650bc6098457875539747d873497e48"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendDate </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Date_t&#160;</td>
          <td class="paramname"><em>dt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append a date. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dt</td><td>a Java-style 64 bit date value, that is the number of milliseconds since January 1, 1970, 00:00:00 GMT </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8868d2643bbdadab8d8b5d778d6700a0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendIntOrLL </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long long&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>appends a number. </p>
<p>if n &lt; max(int)/2 then uses int, otherwise long long </p>

</div>
</div>
<a class="anchor" id="a76dbde97a7640b457c388e6b1e6d3c12"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendNumber </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>appendNumber is a series of method for appending the smallest sensible type. </p>
<p>mostly for JS </p>

</div>
</div>
<a class="anchor" id="acd4a3537590d05af07585d13058915b6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendOID </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">OID *&#160;</td>
          <td class="paramname"><em>oid</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>generateIfBlank</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append a BSON Object ID (OID type). </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000001">Deprecated:</a></b></dt><dd>Generally, it is preferred to use the append append(name, oid) method for this. </dd></dl>

</div>
</div>
<a class="anchor" id="a856483bb76fdd7bb536ca53d0a629f4b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendRegex </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>regex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append a regular expression value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">regex</td><td>the regular expression pattern </td></tr>
    <tr><td class="paramname">regex</td><td>options such as "i" or "g" </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4c5abe4632fa84eb70320eae3bb0f251"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendStrWithNoTerminating </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sz</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append a string element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sz</td><td>size does not include terminating null character </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab941a5a1c21b6e6e41f0d8d08d6870df"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendTimestamp </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long long&#160;</td>
          <td class="paramname"><em>time</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>inc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Timestamps are a special BSON datatype that is used internally for replication. </p>
<p>Append a timestamp element to the object being ebuilt. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">time</td><td>- in millis (but stored in seconds) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1211695b3084150fb00b4281cbe70145"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::appendTimeT </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">time_t&#160;</td>
          <td class="paramname"><em>dt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Append a time_t date. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dt</td><td>a C-style 32 bit date value, that is the number of seconds since January 1, 1970, 00:00:00 GMT </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a421aa615768c45a9f6f2a81adb0e4f5f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> bson::BSONObjBuilder::asTempObj </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Peek at what is in the builder, but leave the builder ready for more appends. </p>
<p>The returned object is only valid until the next modification or destruction of the builder. Intended use case: append a field if not already there. </p>

</div>
</div>
<a class="anchor" id="ac636b4a1a7e8a772268272e83c90ba13"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> bson::BSONObjBuilder::done </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fetch the object we have built. </p>
<p><a class="el" href="classbson_1_1BSONObjBuilder.html" title="Utility for creating a BSONObj.">BSONObjBuilder</a> still frees the object when the builder goes out of scope &ndash; very important to keep in mind. Use <a class="el" href="classbson_1_1BSONObjBuilder.html#a91a6e9db4d526edb42b56e3aa123b066" title="destructive The returned BSONObj will free the buffer when it is finished.">obj()</a> if you would like the <a class="el" href="classbson_1_1BSONObj.html" title="C++ representation of a &quot;BSON&quot; object â€“ that is, an extended JSON-style object in a binary representa...">BSONObj</a> to last longer than the builder. </p>

</div>
</div>
<a class="anchor" id="a71a427dc7775bc6752ef44b25ad9b7a7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::genOID </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate and assign an object id for the _id field. </p>
<p>_id should be the first element in the object for good performance. </p>

</div>
</div>
<a class="anchor" id="a91a6e9db4d526edb42b56e3aa123b066"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObj.html">BSONObj</a> bson::BSONObjBuilder::obj </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>destructive The returned <a class="el" href="classbson_1_1BSONObj.html" title="C++ representation of a &quot;BSON&quot; object â€“ that is, an extended JSON-style object in a binary representa...">BSONObj</a> will free the buffer when it is finished. </p>
<dl class="section return"><dt>Returns</dt><dd>owned <a class="el" href="classbson_1_1BSONObj.html" title="C++ representation of a &quot;BSON&quot; object â€“ that is, an extended JSON-style object in a binary representa...">BSONObj</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ada3d7b9ed84c0cf67cbd6c0b2fdec1ad"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilderValueStream.html">BSONObjBuilderValueStream</a>&amp; bson::BSONObjBuilder::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stream oriented way to add field names and values. </p>

</div>
</div>
<a class="anchor" id="a4bfd8233cf856e5dd7a00ec2380efaea"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilder.html">BSONObjBuilder</a>&amp; bson::BSONObjBuilder::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structbson_1_1GENOIDLabeler.html">GENOIDLabeler</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stream oriented way to add field names and values. </p>

</div>
</div>
<a class="anchor" id="a05da3e904f83da7a31092430d32dd240"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbson_1_1BSONObjBuilderValueStream.html">BSONObjBuilderValueStream</a>&amp; bson::BSONObjBuilder::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structbson_1_1BSONObjBuilder_1_1ForceExplicitString.html">ForceExplicitString</a> &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stream oriented way to add field names and values. </p>

</div>
</div>
<a class="anchor" id="a599ecbb38f00675da1e0d7e1531b166b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool bson::BSONObjBuilder::owned </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if we are using our own bufbuilder, and not an alternate that was given to us in our constructor </dd></dl>

</div>
</div>
<a class="anchor" id="a98314e92ddac89275de97da0f73c7b43"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">BufBuilder&amp; bson::BSONObjBuilder::subobjStart </td>
          <td>(</td>
          <td class="paramtype">const StringData &amp;&#160;</td>
          <td class="paramname"><em>fieldName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>add header for a new subobject and return bufbuilder for writing to the subobject's body </p>
<p>example:</p>
<p><a class="el" href="classbson_1_1BSONObjBuilder.html" title="Utility for creating a BSONObj.">BSONObjBuilder</a> b; <a class="el" href="classbson_1_1BSONObjBuilder.html" title="Utility for creating a BSONObj.">BSONObjBuilder</a> sub (b.subobjStart("fieldName")); // use sub sub.done() // use b and convert to object </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>E:/sequoiadb/client/include/bson/<a class="el" href="bsonobjbuilder_8h_source.html">bsonobjbuilder.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jul 6 2014 16:01:12 for SequoiaDB by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.2
</small></address>
</body>
</html>
