<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="application_cpp_sql">
  <title>SQL to SequoiaDB shell to C++</title>
  <body>
    <p>The query in SequoiaDB is in the format of json(bson). The following table shows examples comparing sql statements, sequoiadb shell statements and sequoiadb C++ driver application statements.</p>
    <simpletable >
      <sthead>
        <stentry>SQL</stentry>
        <stentry>Sequoiadb Shell</stentry>
        <stentry>C++ Driver</stentry>
      </sthead>
      <strow>
        <stentry>insert into students(a,b) values(1,-1) </stentry>
        <stentry>db.foo.bar.insert({a:1,b:-1}) </stentry>
        <stentry>sdbCollection collection ;
          <p>BSONObj obj = BSON( "a"&lt;&lt;1&lt;&lt;"b"&lt;&lt;-1 ) ;</p>
          <p>collection.insert( obj ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select a,b from students </stentry>
        <stentry>db.foo.bar.find(null,{a:"",b:""})</stentry>
        <stentry>sdbCollection collection ;
          <p>sdbCursor cursor ;</p>
          <p>BSONObj selected ;</p>
          <p>BSONObj obj ;</p>
          <p>selected = BSON( "a"&lt;&lt;""&lt;&lt;"b"&lt;&lt;"" ) ;</p>
          <p>collection .query( cursor, obj, selected ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select * from students</stentry>
        <stentry>db.foo.bar.find()</stentry>
        <stentry>sdbCollection collection ;
          <p>sdbCursor cursor ;</p>
          <p>collection .query ( cursor ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select * from students where age=20</stentry>
        <stentry>db.foo.bar.find({age:20})</stentry>
        <stentry>sdbCollection collection ;
          <p>sdbCursor cursor ;</p>
          <p>BSONObj condition ;</p>
          <p>condition = BSON("age"&lt;&lt;20) ;</p>
          <p>collection .query ( cursor, condition ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select * from students where age=20 order by name</stentry>
        <stentry>db.foo.bar.find({age:20}).sort({name:1})</stentry>
        <stentry>sdbCollection collection ;
          <p>sdbCursor cursor ;</p>
          <p>BSONObj obj ;</p>
          <p>BSONObj condition ;</p>
          <p>BSONObj orderBy ;</p>
          <p>condition = BSON("age"&lt;&lt;20) ;</p>
          <p>orderBy = BSON("name"&lt;&lt;1) ;</p>
          <p>collection .query (cursor, condition , obj, orderBy , obj ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select * from students where age>20 and age&lt;30</stentry>
        <stentry>db.foo.bar.find({age:{$gt:20,$lt:30}})</stentry>
        <stentry>sdbCollection collection ;
          <p>sdbCursor cursor ;</p>
          <p>BSONObj condition ;</p>
          <p>condition = BSON("age"&lt;&lt;BSON("$gt"&lt;&lt;20&lt;&lt;" $lt"&lt;&lt;30)) ;</p>
          <p>collection .query (cursor, condition ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>create index testIndex on students(name)</stentry>
        <stentry>db.foo.bar.createIndex("testIndex",{name:1},false)</stentry>
        <stentry>sdbCollection collection ;
          <p>BSONObj obj ;</p>
          <p>obj = BSON( "name"&lt;&lt;1 ) ;</p>
          <p>collection.createIndex ( &amp;obj, "testIndex", FALSE, FALSE )</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select * from students limit 20 skip 10</stentry>
        <stentry>db.foo.bar.find().limit(20).skip(10)</stentry>
        <stentry>sdbCollection collection ;<p>BSONObj obj ;</p>
          <p>sdbCursor cursor ;</p>
          <p>collection .query (cursor,obj, obj, obj, obj, 10, 20 ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>select count(*) from students where age>20</stentry>
        <stentry>db.foo.bar.find({age:{$gt:20}}).count()</stentry>
        <stentry>sdbCollection collection ;
          <p>SINT64 count = 0 ;</p>
          <p>BSONObj condition ;</p>
          <p>Condition = BSON( "age"&lt;&lt;BSON("$gt"&lt;&lt;20)) ;</p>
          <p>collection.getCount (count, condition );</p>
        </stentry>
      </strow>
      <strow>
        <stentry>update students set a=a+2 where b=-1</stentry>
        <stentry>db.foo.bar.update({$set:{a:2}},{b:-1})</stentry>
        <stentry>sdbCollection collection ;
          <p>BSONObj condition = BSON( "b"&lt;&lt;1 ) ;</p>
          <p>BSONObj rule = BSON( "$set"&lt;&lt;BSON("a"&lt;&lt;2) );</p>
          <p>BSONObj obj ;</p>
          <p>collection.update ( rule, condition, obj ) ;</p>
        </stentry>
      </strow>
      <strow>
        <stentry>delete from students where a=1</stentry>
        <stentry>db.foo.bar.remove({a:1})</stentry>
        <stentry>sdbCollection collection ; <p>BSONObj condition = BSON("a"&lt;&lt;1)
          ;</p>collection.del ( condition ) ; </stentry>
      </strow>
    </simpletable>
  </body>
  <related-links>
    <link href="../../../../references/sqlmapping/topics/sqlmapping_en.dita" format="dita" type="topics"></link>
  </related-links>
</topic>
