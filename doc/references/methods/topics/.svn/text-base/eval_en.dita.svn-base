<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_kcv_rzz_gm">
  <title>db.eval()</title>
  <body>
    <section>
      <title>db.eval(&lt;code>)</title>
      <p>According need to fill javaScript statement. Meanwhile you can a stored procedure in the statement has been created good. </p>
    </section>
    <section><title>Parameter description</title>
      <simpletable><!-- frame="all" relcolwidth="1.0* 1.0* 5.9* 1.0*"
        id="references_method_count_table">-->
        <sthead>
          <stentry>Parameter name</stentry>
          <stentry>Parameter type</stentry>
          <stentry>Description</stentry>
          <stentry>Reauired</stentry>
        </sthead>
        <strow>
          <stentry>code</stentry>
          <stentry>string</stentry>
          <stentry>JavaScript statement or stored procedure to create a good function.</stentry>
          <stentry>Yes</stentry>
        </strow>
      </simpletable>
      <p><b>Description:</b></p>
      <p>1. In accordance with the statement executed successfully return results. The return value can be directly assigned to another variable. Eg: <b>var a = db.eval(' db.foo.bar'); a.find(); </b></p>
      <p>2. fails returns an error code and error message. Such as: <b>{ "errmsg": "(nofile):1 ReferenceError: sum is not defined","retCode": -152 } </b></p>
      <p>3. Operation does not return before the end of the function execution. Dropouts terminated throughout the implementation, but the code has been executed will not be rolled back. </p>
      <p>4. Customize the length of the return value of a certain limit, the reference SequoiaDB insert records maximum length.</p>
      <p>5. Define the temporary support functions, such as: <b>db.eval(' function sum(x,y){return x+y;} sum(1,2)')</b>
      </p>
      <p>6. Global db usage and <xref href="createProcedure_en.dita">createProcedure</xref> same.</p>
      <note>While all the output statement will be shielded, but it is recommended not to join any print statements.</note>
    </section>
    <section><title>Example</title>
      <ul>
        <li>
          <p>Call a stored procedure function sum in the eval() method.</p>
          <codeblock>//Initial sum() method does not exist, return exception information.
> var a = db.eval('sum(1,2)');
{ "errmsg": "(nofile):1 ReferenceError: getCL is not defined
", "retCode": -152 }
(nofile):0 uncaught exception: -152
//Initialization sum()
>db.createProcedure(function sum(x,y){return x+y;})
//Call the sum()
>db.eval('sum(1,2)')
3</codeblock>
        </li>
        <li>Fill javaScript statement eval() method
          <codeblock>>var rc = db.eval("db.foo.bar")
>rc.find()
{
  "_id": {
    "$oid": "5248d3867159ae144a000000"
  },
  "a": 1
}
{
  "_id": {
    "$oid": "5248d3897159ae144a000001"
  },
  "a": 2
}...</codeblock></li>
      </ul>
    </section>
  </body>
  <related-links>
    <link href="listProcedures_en.dita" format="dita" type="topic"></link>
  </related-links>
</topic>
